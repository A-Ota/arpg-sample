{"version":3,"sources":["webpack:///./src/stages/010/View.vue?bf85","webpack:///./src/stages/010/Character.ts","webpack:///./src/stages/010/Field.ts","webpack:///./src/stages/010/View.vue?2515","webpack:///./src/stages/010/View.vue?5c51","webpack:///./src/stages/010/View.vue","webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/stages/010/View.vue?a621"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","ref","_v","_s","fpsCounter","averageMs","toFixed","staticRenderFns","moveX","moveY","nextDirection","texture","textureOffset","routine","x","y","hitCircle","hitRect","animationFrame","_currentDirection","preUpdateInfo","animationStep","bodySprite","SortableSprite","baseTexture","character","anchor","set","shadowTexture","shadowSprite","from","alpha","debugCircle","lineStyle","drawCircle","debugRect","drawRect","width","height","value","syncTexture","offsetX","offsetY","currentDirection","frame","preUpdate","zOrder","position","calcMoveXY","direction","speed","slantSpeed","isMoving","frameCountToWait","frameCountToMove","Math","floor","random","step","horizontalGridNum","verticalGridNum","targetCharacter","characters","walls","textureMap","Map","use32bitIndex","sortableChildren","bgLayerContainer","layerContainer","SortableParticleContainer","uvs","vertices","tint","airLayerContainer","debugLayerContainer","visible","addChild","clone","get","addFrame","addTree","addWall","on","gridX","gridY","rect","push","wallGraphic","isTarget","addChildZ","forEach","chara","update","sortChildren","targetCircle","hitDistance","hit","some","x1","y1","x2","y2","radius","sqrt","pow","targetRect","excessX","excessY","wall","hHit","left","right","vHit","top","bottom","flag","oldNow","performance","now","ms","counter","extend","data","pixiApp","field","pressedKeyCodeSet","Set","npc","isDebugMode","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","size","ticker","maxFPS","minFPS","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","add","load","renderTexture","create","spriteMapChip","resources","renderer","sprite01","sprite02","i","addCharacter","methods","event","keyCode","delta","checkPoint","onClickToggleDebugMode","setDebugMode","beforeDestroy","destroy","components","computed","props","component","$","$some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined","collection","collectionStrong","module","exports","init"],"mappings":"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","file":"js/chunk-e874f5ec.32852b35.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\"}}),(true)?_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"4px\",\"top\":\"4px\",\"color\":\"#fff\"}},[_vm._v(_vm._s((1000 / _vm.fpsCounter.averageMs).toFixed(2))+\" fps\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  public hitRect: PIXI.Rectangle = new PIXI.Rectangle(-12, -12, 24, 24)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: PIXI.Sprite\r\n  public debugCircle!: PIXI.Graphics\r\n  public debugRect!: PIXI.Graphics\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  private animationStep = 0\r\n  constructor(texture: PIXI.Texture, private textureOffset: PIXI.Point, public routine: BaseRoutine) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(textureOffset.x, textureOffset.y, 32, 64))\r\n    routine.character = this\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(224, 96, 32, 32))\r\n    this.shadowSprite = PIXI.Sprite.from(shadowTexture)\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.alpha = 0.7\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n    this.debugRect = new PIXI.Graphics()\r\n    this.debugRect.lineStyle(2, 0x5555FF, 1)\r\n    this.debugRect.alpha = 0.7\r\n    this.debugRect.drawRect(this.hitRect.x, this.hitRect.y, this.hitRect.width, this.hitRect.height)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    switch(this.currentDirection) {\r\n      case 1:\r\n        offsetX = 96\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        offsetX = 96\r\n        offsetY = 64\r\n        break;\r\n      case 4:\r\n        offsetY = 64\r\n        break;\r\n      case 6:\r\n        offsetY = 128\r\n        break;\r\n      case 7:\r\n        offsetX = 96\r\n        offsetY = 128\r\n        break;\r\n      case 8:\r\n        offsetY = 192\r\n        break;\r\n      case 9:\r\n        offsetX = 96\r\n        offsetY = 192\r\n        break;\r\n    }\r\n\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * 32\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureOffset.x + offsetX,\r\n      this.textureOffset.y + offsetY,\r\n      32,\r\n      64\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    this.routine.preUpdate()\r\n  }\r\n  public update() {\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    ;[this.hitRect.x, this.hitRect.y] = [this.x - 12, this.y - 12]\r\n    ;[this.debugRect.x, this.debugRect.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private pressedKeyCodeSet: Set<number>) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    let direction: number | null = null \r\n    // 向き取得\r\n    if (this.pressedKeyCodeSet.has(KEY_CODE_LEFT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 1\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 7\r\n      } else {\r\n        direction = 4\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_RIGHT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 3\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 9\r\n      } else {\r\n        direction = 6\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n      direction = 8\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n      direction = 2\r\n    }\r\n    // 向かせたり歩かせたり\r\n    if (direction != null) {\r\n      const [moveX, moveY] = calcMoveXY(direction, 5)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 0.6)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}","import { Character } from '@/stages/010/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport * as PIXITilemap from '@/pixi-tilemap/index'\r\n\r\nexport class Field extends PIXI.Container {\r\n  private step = 0\r\n  private bgLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private airLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private layerContainer!: SortableParticleContainer\r\n  private debugLayerContainer!: PIXI.Container\r\n  public horizontalGridNum = 200\r\n  public verticalGridNum = 200\r\n  private targetCharacter: Character | null = null\r\n  private characters: Array<Character> = []\r\n  private walls: Array<PIXI.Rectangle> = []\r\n  private textureMap: Map<String, PIXI.Texture> = new Map()\r\n  constructor(private texture: PIXI.Texture) {\r\n    super()\r\n\r\n    // 150,000チップ以上使えるようにする\r\n    PIXITilemap.Constant.use32bitIndex = true;\r\n\r\n    this.sortableChildren = true\r\n    this.bgLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true })\r\n    this.airLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.airLayerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n\r\n    this.textureMap.set('field', texture.clone())\r\n    this.textureMap.get('field')!.frame = new PIXI.Rectangle(0, 0, 16, 16)\r\n    for (let y = 0; y < this.verticalGridNum; ++y) {\r\n      for (let x = 0; x < this.horizontalGridNum; ++x) {\r\n        // fieldTexture.frame = new PIXI.Rectangle(16 * Math.floor(Math.random() * 16), 16 * Math.floor(Math.random() * 8), 16, 16)\r\n        this.bgLayerContainer.addFrame(this.textureMap.get('field')!, x * 16, y * 16)\r\n      }\r\n    }\r\n    this.textureMap.set('treeUp', texture.clone())\r\n    this.textureMap.set('treeDown', texture.clone())\r\n    this.textureMap.get('treeUp')!.frame = new PIXI.Rectangle(32, 0, 64, 32)\r\n    this.textureMap.get('treeDown')!.frame = new PIXI.Rectangle(32, 32, 64, 48)\r\n    // 木\r\n    {\r\n      for (let y = 0; y < this.verticalGridNum; ++y) {\r\n        for (let x = 0; x < this.horizontalGridNum; ++x) {\r\n          if (Math.random() < 0.02) {\r\n            this.addTree(x, y)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 障害物設定\r\n    {\r\n      this.addWall(new PIXI.Rectangle(-16, 0, 16, this.verticalGridNum * 16))\r\n      this.addWall(new PIXI.Rectangle(this.horizontalGridNum * 16, 0, 16, this.verticalGridNum * 16))\r\n      this.addWall(new PIXI.Rectangle(0, -16, this.horizontalGridNum * 16, 16))\r\n      this.addWall(new PIXI.Rectangle(16, this.verticalGridNum * 16, this.horizontalGridNum * 16 - 32, 16))\r\n    }\r\n    this.on('added', () => {\r\n      // 親に追加されたときになにかやるならここで\r\n    })\r\n  }\r\n  private addTree(gridX: number, gridY: number) {\r\n    this.airLayerContainer.addFrame(this.textureMap.get('treeUp')!, gridX * 16, gridY * 16)\r\n    this.bgLayerContainer.addFrame(this.textureMap.get('treeDown')!, gridX * 16, gridY * 16 + 32)\r\n    this.addWall(new PIXI.Rectangle(gridX * 16, gridY * 16 + 32 - 2, 64, 40))\r\n  }\r\n  private addWall(rect: PIXI.Rectangle) {\r\n    this.walls.push(rect)\r\n    const wallGraphic = new PIXI.Graphics()\r\n    wallGraphic.lineStyle(2, 0x5555FF, 1)\r\n    wallGraphic.drawRect(rect.x + 1, rect.y + 1, rect.width - 2, rect.height - 2)\r\n    this.debugLayerContainer.addChild(wallGraphic)\r\n  }\r\n  public addCharacter(character: Character, isTarget: boolean = false) {\r\n    this.characters.push(character)\r\n    if (isTarget) {\r\n      this.targetCharacter = character\r\n    }\r\n    this.layerContainer.addChildZ(character.bodySprite, 1)\r\n    this.layerContainer.addChildZ(character.shadowSprite, 1)\r\n    this.debugLayerContainer.addChild(character.debugCircle)\r\n    this.debugLayerContainer.addChild(character.debugRect)\r\n  }\r\n  public update() {\r\n    // preUpdate\r\n    this.characters.forEach(chara => chara.preUpdate())\r\n    // update\r\n    this.characters.forEach(chara => {\r\n      if (chara.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [chara.preUpdateInfo.moveX, chara.preUpdateInfo.moveY]\r\n        chara.x += moveX\r\n        chara.y += moveY\r\n        chara.currentDirection = chara.preUpdateInfo.nextDirection\r\n        chara.preUpdateInfo = null\r\n      }\r\n      chara.update()\r\n    })\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    /*\r\n    this.characters.forEach(chara => {\r\n      if (chara.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [chara.preUpdateInfo.moveX, chara.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0)) {\r\n          // キャラ\r\n          const [hitCharacter, hitDistanceRate] = this.hitOtherCaracter(chara, moveX, moveY)\r\n          if (hitCharacter) {\r\n            // キャラにめり込んだ分を戻す\r\n            moveX = (moveX - (moveX * hitDistanceRate))\r\n            moveY = (moveY - (moveY * hitDistanceRate))\r\n          }\r\n          // 地形\r\n          {\r\n            const [hit, excessX, excessY] = this.hitWall(chara, moveX, moveY)\r\n            // ぶつからなかった\r\n            if (!hit) {\r\n              chara.x += moveX\r\n              chara.y += moveY\r\n            }\r\n            // ぶつかった \r\n            else {\r\n              // 上下左右移動時は押し戻しに従う\r\n              if (excessX === 0 || excessY === 0) {\r\n                chara.x += (moveX - excessX)\r\n                chara.y += (moveY - excessY)\r\n              }\r\n              // 斜め移動時は片方のみの移動を試みる\r\n              else {\r\n                if (!this.hitWall(chara, 0, moveY)[0]) {\r\n                  chara.y += moveY\r\n                  chara.x += (moveX - excessX) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n                else if (!this.hitWall(chara, moveX, 0)[0]) {\r\n                  chara.x += moveX\r\n                  chara.y += (moveY - excessY) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        chara.currentDirection = chara.preUpdateInfo.nextDirection\r\n        chara.preUpdateInfo = null\r\n        chara.update()\r\n      } else {\r\n        chara.update()\r\n      }\r\n    })\r\n    */\r\n\r\n    // 視点スクロール\r\n    const speed = 4\r\n    switch(this.step) {\r\n      case 0:\r\n        this.x -= speed\r\n        if (this.x <= - (16 * this.horizontalGridNum - 640)) {\r\n          this.step = 1\r\n        }\r\n        break;\r\n      case 1:\r\n        this.y -= speed\r\n        if (this.y <= - (16 * this.verticalGridNum - 480)) {\r\n          this.step = 2\r\n        }\r\n        break;\r\n      case 2:\r\n        this.x += speed\r\n        if (this.x >= 0) {\r\n          this.step = 3\r\n        }\r\n        break;\r\n      case 3:\r\n        this.y += speed\r\n        if (this.y >= 0) {\r\n          this.step = 0\r\n        }\r\n        break;\r\n    }\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n  }\r\n  // 他キャラとの衝突判定\r\n  private hitOtherCaracter(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number] {\r\n    const targetCircle = targetCharacter.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    let hitDistance = 0\r\n    const hit = this.characters.some(character => {\r\n      if (targetCharacter === character) {\r\n        return false\r\n      }\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, character.hitCircle.x, character.hitCircle.y]\r\n      // めり込んだ距離(の2乗)\r\n      hitDistance = (targetCircle.radius + character.hitCircle.radius) - Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n      const hit = hitDistance >= 0\r\n      return hit\r\n    })\r\n    return [hit, hit ? hitDistance / Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)) : 0]\r\n  }\r\n  // 壁との衝突判定\r\n  private hitWall(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number, number] {\r\n    const targetRect = targetCharacter.hitRect.clone()\r\n    targetRect.x += offsetX\r\n    targetRect.y += offsetY\r\n    let excessX = 0 // めり込んだ量X\r\n    let excessY = 0 // めり込んだ量Y\r\n    const hit = this.walls.some(wall => {\r\n      const hHit = targetRect.left < wall.right && targetRect.right > wall.left\r\n      const vHit = targetRect.top < wall.bottom && targetRect.bottom > wall.top\r\n      const hit = hHit && vHit\r\n      // 衝突した場合はめり込み量計算\r\n      if (hit) {\r\n        if (offsetX < 0) {\r\n          excessX = targetRect.left - wall.right\r\n        } else if (offsetX > 0) {\r\n          excessX = targetRect.right - wall.left\r\n        }\r\n        if (offsetY < 0) {\r\n          excessY = targetRect.top - wall.bottom\r\n        } else if (offsetY > 0) {\r\n          excessY = targetRect.bottom - wall.top\r\n        }\r\n      }\r\n      return hit\r\n    })\r\n    return [hit, excessX, excessY]\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n  }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 高速歩きで壁にぶつかった場合、移動しないのではなくx, yについて移動できるところまで戻してあげる。\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine } from '@/stages/010/Character'\r\nimport { Field } from '@/stages/010/Field'\r\n\r\nclass FpsCounter {\r\n  private ms = 0\r\n  private counter = 0\r\n  public averageMs = 0\r\n  constructor(private oldNow = performance.now()) {}\r\n  public checkPoint() {\r\n    const now = performance.now()\r\n    this.ms += (now - this.oldNow)\r\n    this.oldNow = now\r\n    ++this.counter\r\n    if (this.counter >= 60) {\r\n      this.averageMs = this.ms / this.counter\r\n      this.counter = 0\r\n      this.ms = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    field: Field | null;\r\n    pressedKeyCodeSet: Set<number>;\r\n    fpsCounter: FpsCounter;\r\n    npc: Character | null;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      field: null,\r\n      pressedKeyCodeSet: new Set(),\r\n      fpsCounter: new FpsCounter(),\r\n      npc: null,\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n    // PIXI.settings.TARGET_FPMS = 1\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const size = { width: 640, height: 480 }\r\n    this.pixiApp = new PIXI.Application(size)\r\n    this.pixiApp.ticker.maxFPS = 60\r\n    this.pixiApp.ticker.minFPS = 60\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/009/chara01.png\")\r\n      .add(\"/arpg-sample/images/stages/009/chara02.png\")\r\n      .add(\"/arpg-sample/images/stages/009/mapchip.png\")\r\n      .load(() => {\r\n\r\n        // RenderTextureに必要な画像すべてを描き込む\r\n        const renderTexture = PIXI.RenderTexture.create({ width: 512, height: 512 })\r\n        const renderSprite = PIXI.Sprite.from(renderTexture)\r\n\r\n        // mapchipを描き込む\r\n        const spriteMapChip = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/009/mapchip.png\"].texture)\r\n        this.pixiApp!.renderer.render(spriteMapChip, renderTexture, false)\r\n        // chara01を書き込む\r\n        const sprite01 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/009/chara01.png\"].texture)\r\n        sprite01.position.set(0, 128)\r\n        this.pixiApp!.renderer.render(sprite01, renderTexture, false)\r\n        // chara02を書き込む\r\n        const sprite02 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/009/chara02.png\"].texture)\r\n        sprite02.position.set(192, 128)\r\n        this.pixiApp!.renderer.render(sprite02, renderTexture, false)\r\n\r\n        // フィールド\r\n        this.field = new Field(renderTexture)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n\r\n        // NPC\r\n        for (let i = 0; i < 200; ++i) {\r\n          this.npc = new Character(renderTexture, Math.random() < 0.5 ? new PIXI.Point(0, 128) : new PIXI.Point(192, 128), new UroUroRoutine())\r\n          this.npc.x = 16 + 16 * Math.floor(Math.random() * (this.field!.horizontalGridNum - 2));\r\n          this.npc.y = 16 + 16 * Math.floor(Math.random() * (this.field!.verticalGridNum - 2));\r\n          this.npc.currentDirection = 4\r\n          this.field.addCharacter(this.npc)\r\n        }\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.pressedKeyCodeSet.add(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.pressedKeyCodeSet.delete(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      this.fpsCounter.checkPoint()\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {},\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=09c39829&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./View.vue?vue&type=style&index=0&id=09c39829&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09c39829\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=style&index=0&id=09c39829&scoped=true&lang=scss&\""],"sourceRoot":""}