{"version":3,"sources":["webpack:///./src/stages/014/InputManager.ts","webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/stages/014/View.vue?a270","webpack:///./src/stages/014/Character.ts","webpack:///./src/stages/014/Field.ts","webpack:///./src/stages/014/View.vue?37d3","webpack:///./src/stages/014/View.vue?465a","webpack:///./src/stages/014/View.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./src/stages/014/View.vue?dd52"],"names":["InputManager","lastPressedKeyCodeSet","Set","nowPressedKeyCodeSet","keyCode","this","add","Array","from","has","clear","$","$some","some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","collection","collectionStrong","module","exports","init","render","_vm","_h","$createElement","_c","_self","staticStyle","ref","_v","_s","fpsCounter","averageMs","toFixed","staticRenderFns","moveX","moveY","nextDirection","texture","offset","width","height","directionNum","textureInfo","x","y","hitCircle","hitRect","animationFrame","_currentDirection","preUpdateInfo","animationStep","bodySprite","SortableSprite","baseTexture","anchor","set","shadowTexture","shadowSprite","alpha","debugCircle","lineStyle","drawCircle","debugRect","drawRect","value","syncTexture","_routine","character","field","debugLayerContainer","addChild","layerContainer","removeChild","offsetX","offsetY","currentDirection","frame","preUpdate","zOrder","position","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","calcMoveXY","direction","speed","slantSpeed","inputManager","isPressing","isMoving","frameCountToWait","frameCountToMove","Math","floor","random","AREA_DIVIDE_GRID_NUM","GAME_AREA_WIDTH","GAME_AREA_HEIGHT","SIGHT_MOVE_X","SIGHT_MOVE_Y","type","left","top","right","bottom","areaGridX","areaGridY","isAdded","mapChipData","mapData","horizontalGridNum","verticalGridNum","targetCharacter","fieldCharacters","inSightArea","walls","collisions","collisionsByArea","Map","fieldCharactersByArea","textureMap","textureList","frameCount","use32bitIndex","sortableChildren","bgLayerContainer","SortableParticleContainer","uvs","vertices","tint","airLayerContainer","visible","generateMap","ceil","tilewidth","tileheight","updateInSightArea","on","clearMap","forEach","destroy","gridY","gridYCount","imageheight","gridX","gridXCount","imagewidth","clone","push","mapChipIndex","layerIndex","textureIndex","layers","data","addFrame","firstIndex","tilesets","v","source","firstgid","collision","areaGridString","gridToAreaGrid","toString","get","isTarget","positionToAreaGrid","fieldCharacter","addFieldCharacterToArea","setTargetCharacter","update","isInSight","onAddToField","onRemoveFromField","removeFieldCharacterFromArea","getInSightFieldCharacters","hitOtherCaracter","hitCharacter","hitDistanceRate","hitWall","hit","excessX","excessY","oldAreaGridX","oldAreaGridY","rightLimitX","leftLimitX","bottomLimitY","topLimitY","oldInSightAreaX","oldInSightAreaY","movedAreaX","movedAreaY","updateCharacterVisibilityByMovedAreaOffset","min","max","sortChildren","targetFieldCharacter","targetCircle","hitDistance","otherFieldCharacters","getOtherFieldCharactersByAreaGrid","x1","y1","x2","y2","radius","sqrt","pow","areaGrid","getCollisionsByAreaGrid","targetRect","hHit","vHit","areaGridStrings","prototype","apply","fieldCharacter2","flag","startX","endX","areaX","areaY","console","log","startY","endY","oldNow","performance","now","ms","counter","extend","pixiApp","renderTexture","characters","isDebugMode","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","opt","autoDensity","ticker","maxFPS","minFPS","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","load","create","spriteMapChip","resources","renderer","sprite01","sprite02","sprite03","sprite04","sprite05","generateCharacter","methods","event","delta","checkPoint","isReleased","toggleCharacter","onClickToggleDebugMode","removeCharacter","endTurn","setDebugMode","isFocusedCharacter","onClickCharacterCell","onClickDeleteCharacter","textureOffset","routine","addCharacter","index","i","nextIndex","oldCharacter","newCharacter","beforeDestroy","components","computed","props","component","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","arg","k","len","E","A","n","TypeError"],"mappings":"gOAAqBA,E,WAArB,oCACU,KAAAC,sBAAqC,IAAIC,IACzC,KAAAC,qBAAoC,IAAID,I,gDACzC,SAAUE,GACfC,KAAKF,qBAAqBG,IAAIF,K,qBAEzB,SAAQA,GACbC,KAAKF,qBAAL,UAAiCC,K,qBAE5B,WACLC,KAAKJ,sBAAwB,IAAIC,IAAIK,MAAMC,KAAKH,KAAKF,yB,wBAEhD,SAAWC,GAChB,OAAOC,KAAKF,qBAAqBM,IAAIL,K,uBAEhC,SAAUA,GACf,OAAOC,KAAKF,qBAAqBM,IAAIL,KAAaC,KAAKJ,sBAAsBQ,IAAIL,K,wBAE5E,SAAWA,GAChB,OAAQC,KAAKF,qBAAqBM,IAAIL,IAAYC,KAAKJ,sBAAsBQ,IAAIL,K,mBAE5E,WACLC,KAAKJ,sBAAsBS,QAC3BL,KAAKF,qBAAqBO,Y,0CCtB9B,IAAIC,EAAI,EAAQ,QACZC,EAAQ,EAAQ,QAAgCC,KAChDC,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgBF,EAAoB,QACpCG,EAAiBF,EAAwB,QAI7CJ,EAAE,CAAEO,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAkBC,GAAkB,CAC7EJ,KAAM,SAAcQ,GAClB,OAAOT,EAAMP,KAAMgB,EAAYC,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,oCCZzE,IAAIb,EAAI,EAAQ,QACZc,EAAU,EAAQ,QAAgCC,OAClDC,EAA+B,EAAQ,QACvCZ,EAA0B,EAAQ,QAElCa,EAAsBD,EAA6B,UAEnDV,EAAiBF,EAAwB,UAK7CJ,EAAE,CAAEO,OAAQ,QAASC,OAAO,EAAMC,QAASQ,IAAwBX,GAAkB,CACnFS,OAAQ,SAAgBL,GACtB,OAAOI,EAAQpB,KAAMgB,EAAYC,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,oCCd3E,IAAIK,EAAa,EAAQ,QACrBC,EAAmB,EAAQ,QAI/BC,EAAOC,QAAUH,EAAW,OAAO,SAAUI,GAC3C,OAAO,WAAiB,OAAOA,EAAK5B,KAAMiB,UAAUC,OAASD,UAAU,QAAKE,MAC3EM,I,2CCRH,IAAII,EAAS,WAAa,IAAIC,EAAI9B,KAAS+B,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,CAAC,SAAW,aAAa,CAACF,EAAG,MAAM,CAACG,IAAI,YAAYD,YAAY,CAAC,MAAQ,QAAQ,OAAS,WAAkBF,EAAG,MAAM,CAACE,YAAY,CAAC,SAAW,WAAW,KAAO,MAAM,IAAM,MAAM,MAAQ,SAAS,CAACL,EAAIO,GAAGP,EAAIQ,IAAI,IAAOR,EAAIS,WAAWC,WAAWC,QAAQ,IAAI,aAClXC,EAAkB,G,4ICMhB,EACJ,WACSC,EACAC,EACAC,GAAqB,uBAFrB,KAAAF,QACA,KAAAC,QACA,KAAAC,iBAIE,EACX,WACSC,EACAC,EACAC,EACAC,EACAC,GAAoB,uBAJpB,KAAAJ,UACA,KAAAC,SACA,KAAAC,QACA,KAAAC,SACA,KAAAC,gBAKE,EAAb,WAyBE,WAAoBC,GAAwB,uBAAxB,KAAAA,cAxBb,KAAAC,EAAY,EACZ,KAAAC,EAAY,EACZ,KAAAC,UAAyB,IAAI,YAAY,EAAG,EAAG,IAC/C,KAAAC,QAA0B,IAAI,gBAAgB,IAAK,GAAI,GAAI,IAC1D,KAAAC,eAAiB,EACjB,KAAAC,kBAAoB,EACrB,KAAAC,cAAsC,KAiBrC,KAAAC,cAAgB,EAGtB3D,KAAK4D,WAAa,IAAIC,EAAA,KACtB7D,KAAK4D,WAAWd,QAAU,IAAI,aAAaK,EAAYL,QAAQgB,YAAa,IAAI,eAAeX,EAAYJ,OAAOK,EAAGD,EAAYJ,OAAOM,EAAGF,EAAYH,MAAOG,EAAYF,SAC1KjD,KAAK4D,WAAWG,OAAOC,IAAI,GAAK,GAGhC,IAAMC,EAAgB,IAAI,aAAad,EAAYL,QAAQgB,YAAa,IAAI,eAAe,IAAK,EAAG,GAAI,KACvG9D,KAAKkE,aAAe,IAAIL,EAAA,KACxB7D,KAAKkE,aAAapB,QAAUmB,EAC5BjE,KAAKkE,aAAaC,MAAQ,GAC1BnE,KAAKkE,aAAaH,OAAOC,IAAI,GAAK,IAGlChE,KAAKoE,YAAc,IAAI,cACvBpE,KAAKoE,YAAYC,UAAU,EAAG,SAAU,GACxCrE,KAAKoE,YAAYD,MAAQ,GACzBnE,KAAKoE,YAAYE,WAAW,EAAG,EAAG,IAClCtE,KAAKuE,UAAY,IAAI,cACrBvE,KAAKuE,UAAUF,UAAU,EAAG,QAAU,GACtCrE,KAAKuE,UAAUJ,MAAQ,GACvBnE,KAAKuE,UAAUC,SAASxE,KAAKuD,QAAQH,EAAGpD,KAAKuD,QAAQF,EAAGrD,KAAKuD,QAAQP,MAAOhD,KAAKuD,QAAQN,QA9C7F,qDAiBE,WACE,OAAOjD,KAAKyD,mBAlBhB,IAaE,SAAqBgB,GACnBzE,KAAKyD,kBAAoBgB,EACzBzE,KAAK0E,gBAfT,mBAoBE,SAAYD,GACVzE,KAAK2E,SAAWF,EAChBzE,KAAK2E,SAASC,UAAY5E,OAtB9B,0BAgDS,SAAa6E,GAChBA,EAAMC,oBAAoBC,SAAS/E,KAAKoE,aACxCS,EAAMC,oBAAoBC,SAAS/E,KAAKuE,WACxCM,EAAMG,eAAeD,SAAS/E,KAAKkE,cACnCW,EAAMG,eAAeD,SAAS/E,KAAK4D,cApDzC,+BAsDS,SAAkBiB,GACvBA,EAAMC,oBAAoBG,YAAYjF,KAAKoE,aAC3CS,EAAMC,oBAAoBG,YAAYjF,KAAKuE,WAC3CM,EAAMG,eAAeC,YAAYjF,KAAKkE,cACtCW,EAAMG,eAAeC,YAAYjF,KAAK4D,cA1D1C,yBA4DU,WACN,IAAIsB,EAAU,EACVC,EAAU,EACd,GAAsC,IAAlCnF,KAAKmD,YAAYD,aACnB,OAAOlD,KAAKoF,kBACV,KAAK,EACHF,EAAU,GACV,MACF,KAAK,EACH,MACF,KAAK,EACHA,EAAU,GACVC,EAAU,GACV,MACF,KAAK,EACHA,EAAU,GACV,MACF,KAAK,EACHA,EAAU,IACV,MACF,KAAK,EACHD,EAAU,GACVC,EAAU,IACV,MACF,KAAK,EACHA,EAAU,IACV,MACF,KAAK,EACHD,EAAU,GACVC,EAAU,IACV,MAGND,IAAmC,IAAvBlF,KAAK2D,cAAsB,EAAI3D,KAAK2D,eAAiB3D,KAAKmD,YAAYH,MAClF,IAAMqC,EAAQ,IAAI,eAChBrF,KAAKmD,YAAYJ,OAAOK,EAAI8B,EAC5BlF,KAAKmD,YAAYJ,OAAOM,EAAI8B,EAC5BnF,KAAKmD,YAAYH,MACjBhD,KAAKmD,YAAYF,QAEnBjD,KAAK4D,WAAWd,QAAQuC,MAAQA,IApGpC,uBAsGS,WACLrF,KAAK2E,SAASW,cAvGlB,oBAyGS,WAAM,MAC+B,CAACtF,KAAKoD,EAAGpD,KAAKqD,EAAI,GAA1DrD,KAAK4D,WAAWR,EADP,KACUpD,KAAK4D,WAAWP,EAD1B,WAEmC,CAACrD,KAAKoD,EAAGpD,KAAKqD,GAA1DrD,KAAKkE,aAAad,EAFT,KAEYpD,KAAKkE,aAAab,EAF9B,WAG6B,CAACrD,KAAKoD,EAAGpD,KAAKqD,GAApDrD,KAAKsD,UAAUF,EAHN,KAGSpD,KAAKsD,UAAUD,EAHxB,WAIiC,CAACrD,KAAKoD,EAAGpD,KAAKqD,GAAxDrD,KAAKoE,YAAYhB,EAJR,KAIWpD,KAAKoE,YAAYf,EAJ5B,WAKyB,CAACrD,KAAKoD,EAAI,GAAIpD,KAAKqD,EAAI,IAAzDrD,KAAKuD,QAAQH,EALJ,KAKOpD,KAAKuD,QAAQF,EALpB,WAM6B,CAACrD,KAAKoD,EAAGpD,KAAKqD,GAApDrD,KAAKuE,UAAUnB,EANN,KAMSpD,KAAKuE,UAAUlB,EANxB,KAOXrD,KAAK4D,WAAW2B,OAASvF,KAAKkE,aAAaqB,OAASvF,KAAK4D,WAAW4B,SAASnC,IAC3ErD,KAAKwD,eACHxD,KAAKwD,eAAiB,KACxBxD,KAAKwD,eAAiB,EACtBxD,KAAK2D,eAAiB3D,KAAK2D,cAAgB,GAAK,EAChD3D,KAAK0E,mBArHX,KA2He,E,qCAKTe,EAAgB,GAChBC,EAAc,GACdC,EAAiB,GACjBC,EAAgB,GAGhBC,EAAa,SAASC,EAAmBC,GAC7C,IAAMC,EAAqB,GAARD,EACnB,OAAQD,GACN,KAAK,EACH,MAAO,EAAEE,EAAYA,GACvB,KAAK,EACH,MAAO,CAAC,EAAGD,GACb,KAAK,EACH,MAAO,CAACC,EAAYA,GACtB,KAAK,EACH,MAAO,EAAED,EAAO,GAClB,KAAK,EACH,MAAO,CAACA,EAAO,GACjB,KAAK,EACH,MAAO,EAAEC,GAAaA,GACxB,KAAK,EACH,MAAO,CAAC,GAAID,GACd,KAAK,EACH,MAAO,CAACC,GAAaA,GAEzB,MAAO,CAAC,EAAG,IAIA,EAAb,wDACE,WAAoBC,GAA0B,oCAC5C,eADkB,EAAAA,eAA0B,EADhD,gDAKS,WACL,IAAIH,EAA2B,KAwB/B,GAtBI9F,KAAKiG,aAAaC,WAAWT,GAE7BK,EADE9F,KAAKiG,aAAaC,WAAWN,GACnB,EACH5F,KAAKiG,aAAaC,WAAWR,GAC1B,EAEA,EAEL1F,KAAKiG,aAAaC,WAAWP,GAEpCG,EADE9F,KAAKiG,aAAaC,WAAWN,GACnB,EACH5F,KAAKiG,aAAaC,WAAWR,GAC1B,EAEA,EAEL1F,KAAKiG,aAAaC,WAAWR,GACtCI,EAAY,EACH9F,KAAKiG,aAAaC,WAAWN,KACtCE,EAAY,GAGG,MAAbA,EAAmB,OACED,EAAWC,EAAW,GADxB,sBACdnD,EADc,KACPC,EADO,KAErB5C,KAAK4E,UAAUlB,cAAgB,IAAI,EAAcf,EAAOC,EAAOkD,QAhCrE,GAAmC,GAsCtB,EAAb,wDACE,aAGuC,MAF7BK,EAE6B,wDAD7BC,EAC6B,uDADF,EAC3BC,EAA6B,uDAAF,GAAE,8BACrC,eAHQ,EAAAF,WACA,EAAAC,mBACA,EAAAC,mBAA6B,EAJzC,gDAOE,WAEE,GAAIrG,KAAKmG,SAAU,OACMN,EAAW7F,KAAK4E,UAAUQ,iBAAkB,GADlD,sBACVzC,EADU,KACHC,EADG,KAEjB5C,KAAK4E,UAAUlB,cAAgB,IAAI,EAAcf,EAAOC,EAAO5C,KAAK4E,UAAUQ,oBAC5EpF,KAAKoG,iBACHpG,KAAKoG,kBAAoB,IAC3BpG,KAAKoG,iBAAmB,EACxBpG,KAAKqG,iBAAmB,GAAK,GAAKC,KAAKC,MAAsB,EAAhBD,KAAKE,UAClDxG,KAAKmG,UAAW,QAMlB,KADEnG,KAAKqG,iBACHrG,KAAKqG,kBAAoB,EAAG,CAC9BrG,KAAKqG,iBAAmB,EACxBrG,KAAKoG,iBAAmB,GACxB,IAAMN,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGQ,KAAKC,MAAsB,EAAhBD,KAAKE,WAC3DxG,KAAK4E,UAAUlB,cAAgB,IAAI,EAAc,EAAG,EAAGoC,GACvD9F,KAAKmG,UAAW,OA3BxB,GAAmC,G,0GCzN7BM,EAAuB,EACvBC,EAAkB,IAClBC,EAAmB,IACnBC,EAAeF,EAAkB,EACjCG,EAAeF,EAAmB,EAElC,EACJ,WACSG,EACAC,EACAC,EACAC,EACAC,GAAc,uBAJd,KAAAJ,OACA,KAAAC,OACA,KAAAC,MACA,KAAAC,QACA,KAAAC,UAIL,EAEJ,WACStC,EACAuC,EACAC,GAAiB,uBAFjB,KAAAxC,YACA,KAAAuC,YACA,KAAAC,YAJF,KAAAC,SAAmB,GAQf,EAAb,wDAiBE,WAAoBvE,EAA+BwE,EAA0BC,GAAY,oCACvF,eADkB,EAAAzE,UAA+B,EAAAwE,cAA0B,EAAAC,UAZtE,EAAAC,kBAAoB,IACpB,EAAAC,gBAAkB,IAClB,EAAAC,gBAAoC,KACnC,EAAAC,gBAAyC,GACzC,EAAAC,YAA8B,IAAI,eAClC,EAAAC,MAA+B,GAC/B,EAAAC,WAA+B,GAC/B,EAAAC,iBAAkD,IAAIC,IACtD,EAAAC,sBAA4D,IAAID,IAChE,EAAAE,WAAwC,IAAIF,IAC5C,EAAAG,YAAmC,GACnC,EAAAC,WAAa,EAKnB,OAAqBC,eAAgB,EAErC,EAAKC,kBAAmB,EACxB,EAAKC,iBAAmB,IAAI,OAAmC,EAAG,CAACzF,IACnE,EAAKkC,eAAiB,IAAIwD,EAAA,KAA0B,IAAO,CAAEC,KAAK,EAAMC,UAAU,EAAMC,MAAM,IAC9F,EAAKC,kBAAoB,IAAI,OAAmC,EAAG,CAAC9F,IACpE,EAAKgC,oBAAsB,IAAI,eAC/B,EAAKA,oBAAoB+D,SAAU,EACnC,EAAK9D,SAAS,EAAKwD,kBACnB,EAAKxD,SAAS,EAAKC,gBACnB,EAAKD,SAAS,EAAK6D,mBACnB,EAAK7D,SAAS,EAAKD,qBAEnB,EAAKgE,cACL,EAAKlB,YAAY5E,MAAQsD,KAAKyC,KAAKrC,GAAmBD,EAAuB,EAAKc,QAAQyB,YAAc,EACxG,EAAKpB,YAAY3E,OAASqD,KAAKyC,KAAKpC,GAAoBF,EAAuB,EAAKc,QAAQ0B,aAAe,EAC3G,EAAKC,oBACL,EAAKC,GAAG,SAAS,eArBsE,EAjB3F,gDA0CS,SAAU5B,GACfvH,KAAKuH,QAAUA,EACfvH,KAAKoJ,WACLpJ,KAAK8I,gBA7CT,sBA+CS,WACL9I,KAAKkI,WAAWmB,SAAQ,SAAA5E,GAAK,OAAIA,EAAM6E,aACvCtJ,KAAKkI,WAAW7H,QAChBL,KAAKuI,iBAAiBlI,QACtBL,KAAK4I,kBAAkBvI,QACvBL,KAAK6H,MAAM3G,OAAS,IApDxB,yBAsDS,WAELlB,KAAKmI,YAAYkB,SAAQ,SAAAvG,GAAO,OAAIA,EAAQwG,aAC5CtJ,KAAKmI,YAAYjH,OAAS,EAE1B,IAAK,IAAIqI,EAAQ,EAAGC,EAAalD,KAAKC,MAAMvG,KAAKsH,YAAYmC,YAAczJ,KAAKsH,YAAY2B,YAAaM,EAAQC,IAAcD,EAC7H,IAAK,IAAIG,EAAQ,EAAGC,EAAarD,KAAKC,MAAMvG,KAAKsH,YAAYsC,WAAa5J,KAAKsH,YAAY0B,WAAYU,EAAQC,IAAcD,EAAO,CAClI,IAAM5G,EAAU9C,KAAK8C,QAAQ+G,QAC7B/G,EAAQuC,MAAQ,IAAI,eAClBrF,KAAKsH,YAAY0B,UAAYU,EAC7B1J,KAAKsH,YAAY2B,WAAaM,EAC9BvJ,KAAKsH,YAAY0B,UACjBhJ,KAAKsH,YAAY2B,YACnBjJ,KAAKmI,YAAY2B,KAAKhH,GAKxB9C,KAAKwH,kBAAoBxH,KAAKuH,QAAQvE,MACtChD,KAAKyH,gBAAkBzH,KAAKuH,QAAQtE,OACpC,IAAK,IAAI,EAAQ,EAAG,EAAQjD,KAAKyH,kBAAmB,EAClD,IAAK,IAAI,EAAQ,EAAG,EAAQzH,KAAKwH,oBAAqB,EAAO,CAG3D,IAFA,IAAMuC,EAAe,EAAQ,EAAQ/J,KAAKwH,kBAEjCwC,EAAa,EAAGA,EAAa,IAAKA,EAAY,CACrD,IAAMC,EAAejK,KAAKuH,QAAQ2C,OAAOF,GAAYG,KAAKJ,GACtDE,EAAe,GACjBjK,KAAKuI,iBAAiB6B,SAASpK,KAAKmI,YAAY8B,EAAe,GAAI,EAAQjK,KAAKsH,YAAY0B,UAAW,EAAQhJ,KAAKsH,YAAY2B,YAKlI,IAAM,EAAejJ,KAAKuH,QAAQ2C,OAAO,GAAGC,KAAKJ,GAC7C,EAAe,GACjB/J,KAAK4I,kBAAkBwB,SAASpK,KAAKmI,YAAY,EAAe,GAAI,EAAQnI,KAAKsH,YAAY0B,UAAW,EAAQhJ,KAAKsH,YAAY2B,YAMnI,IAAMoB,EAAarK,KAAKuH,QAAQ+C,SAASjJ,QAAO,SAACkJ,GAAD,MAAyB,mBAAbA,EAAEC,UAA6B,GAAGC,SACxF,EAAezK,KAAKuH,QAAQ2C,OAAO,GAAGC,KAAKJ,GAC7C,EAAe,IACjB/J,KAAK8H,WAAW,EAAQ9H,KAAKwH,kBAAoB,GAAS,IAAI,EAC5D,EAAe6C,EACf,EAAQrK,KAAKuH,QAAQyB,UACrB,EAAQhJ,KAAKuH,QAAQ0B,WACrB,EAAQjJ,KAAKuH,QAAQyB,UAAYhJ,KAAKuH,QAAQyB,UAC9C,EAAQhJ,KAAKuH,QAAQ0B,WAAajJ,KAAKuH,QAAQ0B,aAOzD,IAAK,IAAI,EAAQ,EAAG,EAAQjJ,KAAKyH,kBAAmB,EAClD,IAAK,IAAI,EAAQ,EAAG,EAAQzH,KAAKwH,oBAAqB,EAAO,CAC3D,IAAMkD,EAAY1K,KAAK8H,WAAW,EAAQ9H,KAAKwH,kBAAoB,GACnE,GAAiB,MAAbkD,EAAmB,CACrB,IAAMC,EAAiB3K,KAAK4K,eAAe,EAAO,GAAOC,WACrD7K,KAAK+H,iBAAiB3H,IAAIuK,GAC5B3K,KAAK+H,iBAAiB+C,IAAIH,GAAiBb,KAAKY,GAEhD1K,KAAK+H,iBAAiB/D,IAAI2G,EAAgB,CAACD,QArHzD,gCA6HS,SAAmB9F,GACxB5E,KAAK0H,gBAAkB9C,IA9H3B,0BAgIS,SAAaA,GAAsC,IAAhBmG,EAAgB,0DACzB/K,KAAKgL,mBAAmBpG,EAAUxB,EAAGwB,EAAUvB,GADtB,sBACjD8D,EADiD,KACtCC,EADsC,KAElD6D,EAAiB,IAAI,EAAerG,EAAWuC,EAAWC,GAChEpH,KAAK2H,gBAAgBmC,KAAKmB,GAC1BjL,KAAKkL,wBAAwBD,EAAgB9D,EAAWC,GACpD2D,GACF/K,KAAKmL,mBAAmBvG,GAE1BA,EAAUwG,SAENpL,KAAKqL,UAAUJ,KACjBrG,EAAU0G,aAAatL,MACvBiL,EAAe5D,SAAU,KA5I/B,6BA+IS,SAAgBzC,GAAoB,WACrC5E,KAAK0H,kBAAoB9C,IAC3B5E,KAAK0H,gBAAkB,MAEzB9C,EAAU2G,kBAAkBvL,MAC5BA,KAAK2H,gBAAkB3H,KAAK2H,gBAAgBtG,QAAO,SAAA4J,GACjD,OAAIA,EAAerG,YAAcA,IAC/B,EAAK4G,6BAA6BP,EAAgBA,EAAe9D,UAAW8D,EAAe7D,YACpF,QAvJf,oBA4JS,WAAM,WAELO,EAAkB3H,KAAKyL,4BAE7B9D,EAAgB0B,SAAQ,SAAA4B,GAAc,OAAIA,EAAerG,UAAUU,eAEnEqC,EAAgB0B,SAAQ,SAAA4B,GACtB,GAA8C,MAA1CA,EAAerG,UAAUlB,cAAuB,OAC7B,CAACuH,EAAerG,UAAUlB,cAAcf,MAAOsI,EAAerG,UAAUlB,cAAcd,OAAtGD,EAD6C,KACtCC,EADsC,KAElD,GAAc,GAATD,GAAuB,GAATC,EAAa,OAGU,EAAK8I,iBAAiBT,EAAgBtI,EAAOC,GAHvD,sBAGvB+I,EAHuB,KAGTC,EAHS,KAK1BD,IAEFhJ,GAAkBA,EAAQiJ,EAC1BhJ,GAAkBA,EAAQgJ,GAG5B,MAEkC,EAAKC,QAAQZ,EAAerG,UAAWjC,EAAOC,GAFhF,sBAESkJ,EAFT,KAEcC,EAFd,KAEuBC,EAFvB,KAKOF,EAOa,IAAZC,GAA6B,IAAZC,GACnBf,EAAerG,UAAUxB,GAAMT,EAAQoJ,EACvCd,EAAerG,UAAUvB,GAAMT,EAAQoJ,GAIlC,EAAKH,QAAQZ,EAAerG,UAAW,EAAGhC,GAAO,GAI5C,EAAKiJ,QAAQZ,EAAerG,UAAWjC,EAAO,GAAG,KACzDsI,EAAerG,UAAUxB,GAAKT,EAC9BsI,EAAerG,UAAUvB,GAAMT,EAAQoJ,IALvCf,EAAerG,UAAUvB,GAAKT,EAC9BqI,EAAerG,UAAUxB,GAAMT,EAAQoJ,IAd3Cd,EAAerG,UAAUxB,GAAKT,EAC9BsI,EAAerG,UAAUvB,GAAKT,GAuBpCqI,EAAerG,UAAUQ,iBAAmB6F,EAAerG,UAAUlB,cAAcb,cACnFoI,EAAerG,UAAUlB,cAAgB,KA5CS,MA8Cb,CAACuH,EAAe9D,UAAW8D,EAAe7D,WAAxE6E,EA9C2C,KA8C7BC,EA9C6B,KA+ClDjB,EAAerG,UAAUwG,SA/CyB,MAgDM,EAAKJ,mBAAmBC,EAAerG,UAAUxB,EAAG6H,EAAerG,UAAUvB,GAhDnF,sBAgDhD4H,EAAe9D,UAhDiC,KAgDtB8D,EAAe7D,UAhDO,KAkD9C6D,EAAe9D,YAAc8E,GAAgBhB,EAAe7D,YAAc8E,IAC5E,EAAKV,6BAA6BP,EAAgBgB,EAAcC,GAChE,EAAKhB,wBAAwBD,EAAeA,EAAe9D,UAAW8D,EAAe7D,WAEhF,EAAKiE,UAAUJ,KAClBA,EAAerG,UAAU2G,kBAAkB,GAC3CN,EAAe5D,SAAU,SAK7B4D,EAAerG,UAAUwG,YAK7B,IAAMe,EAAczF,EAAkBE,EAChCwF,EAAaxF,EACbyF,EAAe1F,EAAmBE,EAClCyF,EAAYzF,EAClB,GAAI7G,KAAK0H,gBAAiB,CACxB,IAAMxC,EAAUlF,KAAK0H,gBAAgBtE,EAAIpD,KAAKoD,EAC1C8B,EAAUiH,EACZnM,KAAKoD,IAAMpD,KAAK0H,gBAAgBtE,EAAI+I,GAE7BjH,EAAUkH,IACjBpM,KAAKoD,IAAMpD,KAAK0H,gBAAgBtE,EAAIgJ,IAEtC,IAAMjH,EAAUnF,KAAK0H,gBAAgBrE,EAAIrD,KAAKqD,EAC1C8B,EAAUkH,EACZrM,KAAKqD,IAAMrD,KAAK0H,gBAAgBrE,EAAIgJ,GAE7BlH,EAAUmH,IACjBtM,KAAKqD,IAAMrD,KAAK0H,gBAAgBrE,EAAIiJ,IAbd,MAemB,CAACtM,KAAK4H,YAAYxE,EAAGpD,KAAK4H,YAAYvE,GAA1EkJ,EAfiB,KAeAC,EAfA,KAgBxBxM,KAAKkJ,oBAEL,IAAMuD,EAAazM,KAAK4H,YAAYxE,EAAImJ,EAClCG,EAAa1M,KAAK4H,YAAYvE,EAAImJ,EACxCxM,KAAK2M,2CAA2CF,EAAYC,GAE9D1M,KAAKoD,EAAIkD,KAAKC,MAAMD,KAAKsG,IAAI,EAAGtG,KAAKuG,MAAM7M,KAAKuH,QAAQyB,UAAYhJ,KAAKwH,kBAAoBd,GAAkB1G,KAAKoD,KACpHpD,KAAKqD,EAAIiD,KAAKC,MAAMD,KAAKsG,IAAI,EAAGtG,KAAKuG,MAAM7M,KAAKuH,QAAQ0B,WAAajJ,KAAKyH,gBAAkBd,GAAmB3G,KAAKqD,KAEpHrD,KAAKgF,eAAe8H,iBAKjB9M,KAAKoI,aAvQZ,8BA2QU,SAAiB2E,EAAsC7H,EAAiBC,GAC9E,IAAM6H,EAAeD,EAAqBnI,UAAUtB,UAAUuG,QAC9DmD,EAAa5J,GAAK8B,EAClB8H,EAAa3J,GAAK8B,EAClB,IAAI8H,EAAc,EACZC,EAAuBlN,KAAKmN,kCAAkCJ,GAG9DjB,EAAMoB,EAAqB1M,MAAK,SAAAyK,GAAiB,MAC5B,CAAC+B,EAAa5J,EAAG4J,EAAa3J,EAAG4H,EAAerG,UAAUtB,UAAUF,EAAG6H,EAAerG,UAAUtB,UAAUD,GAA5H+J,EAD8C,KAC1CC,EAD0C,KACtCC,EADsC,KAClCC,EADkC,KAGrDN,EAAeD,EAAaQ,OAASvC,EAAerG,UAAUtB,UAAUkK,OAAUlH,KAAKmH,KAAKnH,KAAKoH,IAAIJ,EAAKF,EAAI,GAAK9G,KAAKoH,IAAIH,EAAKF,EAAI,IACrI,IAAMvB,EAAMmB,GAAe,EAC3B,OAAOnB,KAET,MAAO,CAACA,EAAKA,EAAMmB,EAAc3G,KAAKmH,KAAKnH,KAAKoH,IAAIxI,EAAS,GAAKoB,KAAKoH,IAAIvI,EAAS,IAAM,KA1R9F,qBA4RS,SAAQuC,EAA4BxC,EAAiBC,GAC1D,IAAMwI,EAAW3N,KAAKgL,mBAAmBtD,EAAgBtE,EAAGsE,EAAgBrE,GACtEyE,EAAa9H,KAAK4N,wBAAwBD,GAI1CE,EAAanG,EAAgBnE,QAAQsG,QAC3CgE,EAAWzK,GAAK8B,EAChB2I,EAAWxK,GAAK8B,EAChB,IAAI4G,EAAU,EACVC,EAAU,EAGRF,EAAMhE,EAAWtH,MAAK,SAAAkK,GAC1B,IAAMoD,EAAOD,EAAW9G,KAAO2D,EAAUzD,OAAS4G,EAAW5G,MAAQyD,EAAU3D,KACzEgH,EAAOF,EAAW7G,IAAM0D,EAAUxD,QAAU2G,EAAW3G,OAASwD,EAAU1D,IAC1E8E,EAAMgC,GAAQC,EAcpB,OAZIjC,IACE5G,EAAU,EACZ6G,EAAU8B,EAAW9G,KAAO2D,EAAUzD,MAC7B/B,EAAU,IACnB6G,EAAU8B,EAAW5G,MAAQyD,EAAU3D,MAErC5B,EAAU,EACZ6G,EAAU6B,EAAW7G,IAAM0D,EAAUxD,OAC5B/B,EAAU,IACnB6G,EAAU6B,EAAW3G,OAASwD,EAAU1D,MAGrC8E,KAET,MAAO,CAACA,EAAKC,EAASC,KA5T1B,+CA8TU,SAAkCf,GAA8B,WAChEiC,EAA8C,GAC9CS,EAAW,CAAC1C,EAAe9D,UAAW8D,EAAe7D,WACrD4G,EAAkB,CACtBL,EAAS9C,WACT,CAAC8C,EAAS,GAAK,EAAGA,EAAS,IAAI9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAIA,EAAS,GAAK,GAAG9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAK,EAAGA,EAAS,IAAI9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAIA,EAAS,GAAK,GAAG9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,YAOrC,OALAmD,EAAgB3E,SAAQ,SAAAsB,GAClB,EAAK1C,sBAAsB7H,IAAIuK,IACjCzK,MAAM+N,UAAUnE,KAAKoE,MAAMhB,EAAsB,EAAKjF,sBAAsB6C,IAAIH,OAG7EuC,EAAqB7L,QAAO,SAAA8M,GAAe,OAAIA,IAAoBlD,OAjV9E,qCAmVU,SAAwB0C,GAAuB,WAC/C7F,EAA+B,GAC/BkG,EAAkB,CACtBL,EAAS9C,WACT,CAAC8C,EAAS,GAAK,EAAGA,EAAS,IAAI9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAIA,EAAS,GAAK,GAAG9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAK,EAAGA,EAAS,IAAI9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,WACnC,CAAC8C,EAAS,GAAIA,EAAS,GAAK,GAAG9C,WAC/B,CAAC8C,EAAS,GAAK,EAAGA,EAAS,GAAK,GAAG9C,YAOrC,OALAmD,EAAgB3E,SAAQ,SAAAsB,GAClB,EAAK5C,iBAAiB3H,IAAIuK,IAC5BzK,MAAM+N,UAAUnE,KAAKoE,MAAMpG,EAAY,EAAKC,iBAAiB+C,IAAIH,OAG9D7C,IArWX,qCAuWU,SAAwBmD,EAAgC9D,EAAmBC,GACjF,IAAMuD,EAAiB,CAACxD,EAAWC,GAAWyD,WAC1C7K,KAAKiI,sBAAsB7H,IAAIuK,GACjC3K,KAAKiI,sBAAsB6C,IAAIH,GAAiBb,KAAKmB,GAErDjL,KAAKiI,sBAAsBjE,IAAI2G,EAAgB,CAACM,MA5WtD,0CA+WU,SAA6BA,EAAgC9D,EAAmBC,GACtF,IAAMuD,EAAiB,CAACxD,EAAWC,GAAWyD,WACxClD,EAAkB3H,KAAKiI,sBAAsB6C,IAAIH,GACvD3K,KAAKiI,sBAAsBjE,IAAI2G,EAAgBhD,EAAgBtG,QAAO,SAAA8M,GAAe,OAAIA,IAAoBlD,QAlXjH,4BAoXU,SAAevB,EAAeH,GACpC,MAAO,CAACjD,KAAKC,MAAMmD,EAAQjD,GAAuBH,KAAKC,MAAMgD,EAAQ9C,MArXzE,gCAuXU,SAAmBrD,EAAWC,GACpC,MAAO,CAACiD,KAAKC,MAAMnD,GAAKqD,EAAuBzG,KAAKuH,QAAQyB,YAAa1C,KAAKC,MAAMlD,GAAKoD,EAAuBzG,KAAKuH,QAAQ0B,gBAxXjI,0BA0XS,SAAamF,GAClBpO,KAAK8E,oBAAoB+D,QAAUuF,IA3XvC,uCA8XU,WAEN,IADA,IAAMzG,EAAyC,GACtCP,EAAYpH,KAAK4H,YAAYZ,IAAKI,GAAapH,KAAK4H,YAAYV,SAAUE,EACjF,IAAK,IAAID,EAAYnH,KAAK4H,YAAYb,KAAMI,GAAanH,KAAK4H,YAAYX,QAASE,EAAW,CAC5F,IAAMwD,EAAiB,CAACxD,EAAWC,GAAWyD,WAC1C7K,KAAKiI,sBAAsB7H,IAAIuK,IACjCzK,MAAM+N,UAAUnE,KAAKoE,MAAMvG,EAAiB3H,KAAKiI,sBAAsB6C,IAAIH,IAIjF,OAAOhD,IAxYX,+BA0YU,WACN3H,KAAK4H,YAAYxE,EAAIkD,KAAKuG,IAAI,GAAIvG,KAAKC,MAAMvG,KAAKoD,GAAKqD,EAAuBzG,KAAKuH,QAAQyB,YAAc,GACzGhJ,KAAK4H,YAAYvE,EAAIiD,KAAKuG,IAAI,GAAIvG,KAAKC,MAAMvG,KAAKqD,GAAKoD,EAAuBzG,KAAKuH,QAAQ0B,aAAe,KA5Y9G,uBA8YU,SAAUgC,GAChB,OAAOA,EAAe9D,WAAanH,KAAK4H,YAAYb,MAAQkE,EAAe9D,WAAanH,KAAK4H,YAAYX,OAASgE,EAAe7D,WAAapH,KAAK4H,YAAYZ,KAAOiE,EAAe7D,WAAapH,KAAK4H,YAAYV,SA/YvN,wDAiZU,SAA2CuF,EAAoBC,GAAkB,WACvF,GAAmB,IAAfD,EAAkB,CAKlB,IAFA,IAAI4B,EAAS5B,EAAa,EAAKzM,KAAK4H,YAAYX,MAAQwF,EAAc,EAAIzM,KAAK4H,YAAYb,KACvFuH,EAAO7B,EAAa,EAAIzM,KAAK4H,YAAYX,MAASjH,KAAK4H,YAAYb,KAAO0F,EAAc,EACnF8B,EAAQF,EAAQE,GAASD,IAAQC,EACxC,IAAK,IAAIC,EAAQxO,KAAK4H,YAAYZ,IAAKwH,GAASxO,KAAK4H,YAAYV,SAAUsH,EAAO,CAChF,IAAM7D,EAAiB,CAAC4D,EAAOC,GAAO3D,WAClC7K,KAAKiI,sBAAsB7H,IAAIuK,IACjC3K,KAAKiI,sBAAsB6C,IAAIH,GAAiBtB,SAAQ,SAAA4B,GACjDA,EAAe5D,UAClB4D,EAAerG,UAAU0G,aAAa,GACtCL,EAAe5D,SAAU,MASnCoH,QAAQC,IAAR,uBAA4BjC,IAC5B,IAAI,EAASA,EAAa,EAAKzM,KAAK4H,YAAYb,KAAO0F,EAAczM,KAAK4H,YAAYX,MAAQ,EAC1F,EAAOwF,EAAa,EAAIzM,KAAK4H,YAAYb,KAAO,EAAK/G,KAAK4H,YAAYX,MAAQwF,EAClFgC,QAAQC,IAAR,kBAAuB,EAAvB,mBAAwC,IACxC,IAAK,IAAI,EAAQ,EAAQ,GAAS,IAAQ,EACxC,IAAK,IAAI,EAAQ1O,KAAK4H,YAAYZ,IAAK,GAAShH,KAAK4H,YAAYV,SAAU,EAAO,CAChF,IAAM,EAAiB,CAAC,EAAO,GAAO2D,WACtC4D,QAAQC,IAAI,GACR1O,KAAKiI,sBAAsB7H,IAAI,IACjCJ,KAAKiI,sBAAsB6C,IAAI,GAAiBzB,SAAQ,SAAA4B,GAClDA,EAAe5D,UACjB4D,EAAerG,UAAU2G,kBAAkB,GAC3CN,EAAe5D,SAAU,OAQvC,GAAmB,IAAfqF,EAAkB,CAKlB,IAFA,IAAIiC,EAASjC,EAAa,EAAK1M,KAAK4H,YAAYV,OAASwF,EAAc,EAAI1M,KAAK4H,YAAYZ,IACxF4H,EAAOlC,EAAa,EAAI1M,KAAK4H,YAAYV,OAAUlH,KAAK4H,YAAYZ,IAAM0F,EAAc,EACnF,EAAQiC,EAAQ,GAASC,IAAQ,EACxC,IAAK,IAAI,EAAQ5O,KAAK4H,YAAYb,KAAM,GAAS/G,KAAK4H,YAAYX,QAAS,EAAO,CAChF,IAAM,EAAiB,CAAC,EAAO,GAAO4D,WAClC7K,KAAKiI,sBAAsB7H,IAAI,IACjCJ,KAAKiI,sBAAsB6C,IAAI,GAAiBzB,SAAQ,SAAA4B,GACjDA,EAAe5D,UAClB4D,EAAerG,UAAU0G,aAAa,GACtCL,EAAe5D,SAAU,MAWnC,IAFA,IAAI,EAASqF,EAAa,EAAK1M,KAAK4H,YAAYZ,IAAM0F,EAAc1M,KAAK4H,YAAYV,OAAS,EAC1F,EAAOwF,EAAa,EAAI1M,KAAK4H,YAAYZ,IAAM,EAAKhH,KAAK4H,YAAYV,OAASwF,EACzE,EAAQ,EAAQ,GAAS,IAAQ,EACxC,IAAK,IAAI,EAAQ1M,KAAK4H,YAAYb,KAAM,GAAS/G,KAAK4H,YAAYX,QAAS,EAAO,CAChF,IAAM,EAAiB,CAAC,EAAO,GAAO4D,WAClC7K,KAAKiI,sBAAsB7H,IAAI,IACjCJ,KAAKiI,sBAAsB6C,IAAI,GAAiBzB,SAAQ,SAAA4B,GAClDA,EAAe5D,UACjB4D,EAAerG,UAAU2G,kBAAkB,GAC3CN,EAAe5D,SAAU,YAzd3C,GAA2B,gB,YCNrB,E,WAIJ,aAA8C,IAA1BwH,EAA0B,uDAAjBC,YAAYC,MAAK,uBAA1B,KAAAF,SAHZ,KAAAG,GAAK,EACL,KAAAC,QAAU,EACX,KAAAzM,UAAY,E,iDAEZ,WACL,IAAMuM,EAAMD,YAAYC,MACxB/O,KAAKgP,IAAOD,EAAM/O,KAAK6O,OACvB7O,KAAK6O,OAASE,IACZ/O,KAAKiP,QACHjP,KAAKiP,SAAW,KAClBjP,KAAKwC,UAAYxC,KAAKgP,GAAKhP,KAAKiP,QAChCjP,KAAKiP,QAAU,EACfjP,KAAKgP,GAAK,O,KAKD,eAAIE,OAAO,CACxB/E,KADwB,WAUtB,MAAO,CACLgF,QAAS,KACTC,cAAe,KACfvK,MAAO,KACPoB,aAAc,IAAItG,EAAA,KAClB4C,WAAY,IAAI,EAChB8M,WAAY,GACZC,aAAa,IAGjBC,QApBwB,WAoBjB,WACL,cAAcC,WAAaC,OAAOC,iBAClC,cAAcC,WAAa,iBAAiBC,QAG5CH,OAAOI,UAAY7P,KAAK8P,UACxBL,OAAOM,QAAU/P,KAAKgQ,QAEtB,IAAMC,EAAM,CACVjN,MAAO,IACPC,OAAQ,IACRiN,aAAa,GAEflQ,KAAKmP,QAAU,IAAI,iBAAiBc,GACpCjQ,KAAKmP,QAAQgB,OAAOC,OAAS,GAC7BpQ,KAAKmP,QAAQgB,OAAOE,OAAS,GAE7B,IAAMC,EAAYtQ,KAAKuQ,MAAM,aAC7BD,EAAUE,YAAYxQ,KAAKmP,QAAQsB,MAGnC,IAAMC,EAAK,IAAI,YAAY,aAAaC,OACxCD,EAAG1N,MAAQ,IACX0N,EAAGzN,OAAS,IACZyN,EAAG/H,KAAO,SACV3I,KAAKmP,QAAQyB,MAAM7L,SAAS2L,GAE5B,WAAWG,oBACX,YAAYC,OACTC,QACA9Q,IAAI,8CACJA,IAAI,8CACJA,IAAI,iDACJA,IAAI,gDACJA,IAAI,mDACJA,IAAI,8CACJA,IAAI,+CACJA,IAAI,6CACJ+Q,MAAK,WAGJ,EAAK5B,cAAgB,mBAAmB6B,OAAO,CAAEjO,MAAO,KAAMC,OAAQ,OACjD,YAAY9C,KAAK,EAAKiP,eAA3C,IAGM8B,EAAgB,YAAY/Q,KAAK,YAAY2Q,OAAOK,UAAU,8CAA8CrO,SAClH,EAAKqM,QAASiC,SAASvP,OAAOqP,EAAe,EAAK9B,eAAe,GAEjE,IAAMiC,EAAW,YAAYlR,KAAK,YAAY2Q,OAAOK,UAAU,8CAA8CrO,SAC7GuO,EAAS7L,SAASxB,IAAI,IAAK,GAC3B,EAAKmL,QAASiC,SAASvP,OAAOwP,EAAU,EAAKjC,eAAe,GAE5D,IAAMkC,EAAW,YAAYnR,KAAK,YAAY2Q,OAAOK,UAAU,8CAA8CrO,SAC7GwO,EAAS9L,SAASxB,IAAI,IAAW,GACjC,EAAKmL,QAASiC,SAASvP,OAAOyP,EAAU,EAAKlC,eAAe,GAE5D,IAAMmC,EAAW,YAAYpR,KAAK,YAAY2Q,OAAOK,UAAU,iDAAiDrO,SAChHyO,EAAS/L,SAASxB,IAAI,IAAe,GACrC,EAAKmL,QAASiC,SAASvP,OAAO0P,EAAU,EAAKnC,eAAe,GAE5D,IAAMoC,EAAW,YAAYrR,KAAK,YAAY2Q,OAAOK,UAAU,gDAAgDrO,SAC/G0O,EAAShM,SAASxB,IAAI,IAAe,IACrC,EAAKmL,QAASiC,SAASvP,OAAO2P,EAAU,EAAKpC,eAAe,GAE5D,IAAMqC,EAAW,YAAYtR,KAAK,YAAY2Q,OAAOK,UAAU,mDAAmDrO,SAClH2O,EAASjM,SAASxB,IAAI,IAAe,IACrC,EAAKmL,QAASiC,SAASvP,OAAO4P,EAAU,EAAKrC,eAAe,GAG5D,EAAKvK,MAAQ,IAAI,EACf,EAAKuK,cACL,YAAY0B,OAAOK,UAAU,+CAA+ChH,KAC5E,YAAY2G,OAAOK,UAAU,6CAA6ChH,MAC5E,EAAKgF,QAASyB,MAAM7L,SAAS,EAAKF,OAGlC,EAAK6M,kBAAkB,GACvB,EAAKA,kBAAkB,GACvB,EAAKA,kBAAkB,GACvB,EAAKA,kBAAkB,GACvB,EAAKA,kBAAkB,GACvB,EAAK7M,MAAOsG,mBAAmB,EAAKkE,WAAW,OAInDrP,KAAKmP,QAAQgB,OAAOlQ,IAAID,KAAKoL,SAE/BuG,QAAS,CACP7B,UADO,SACG8B,GACR5R,KAAKiG,aAAa6J,UAAU8B,EAAM7R,UAEpCiQ,QAJO,SAIC4B,GACN5R,KAAKiG,aAAa+J,QAAQ4B,EAAM7R,UAElCqL,OAPO,SAOAyG,GAAa,WAClB7R,KAAKuC,WAAWuP,aAEZ9R,KAAKiG,aAAa8L,WAAW,KAC/B/R,KAAKgS,kBAGHhS,KAAKiG,aAAa8L,WAAW,KAC/B/R,KAAKiS,yBAGHjS,KAAKiG,aAAa8L,WAAW,MAC/B/R,KAAKqP,WAAarP,KAAKqP,WAAWhO,QAAO,SAAAuD,GAAS,OAAIA,IAAc,EAAKC,MAAO6C,mBAChF1H,KAAK6E,MAAOqN,gBAAgBlS,KAAK6E,MAAO6C,iBACpC1H,KAAKqP,WAAWnO,OAAS,GAC3BlB,KAAKgS,mBAGS,MAAdhS,KAAK6E,OACP7E,KAAK6E,MAAMuG,SAEbpL,KAAKiG,aAAakM,WAEpBF,uBA9BO,WA+BLjS,KAAKsP,aAAetP,KAAKsP,YACzBtP,KAAK6E,MAAOuN,aAAapS,KAAKsP,cAEhC+C,mBAlCO,SAkCYzN,GACjB,OAAO5E,KAAK6E,MAAO6C,kBAAoB9C,GAEzC0N,qBArCO,SAqCc1N,GACnB5E,KAAK6E,MAAOsG,mBAAmBvG,IAEjC2N,uBAxCO,SAwCgB3N,GACrB5E,KAAKqP,WAAarP,KAAKqP,WAAWhO,QAAO,SAAAkJ,GAAC,OAAIA,IAAM3F,KACpD5E,KAAK6E,MAAOqN,gBAAgBtN,IAE9B8M,kBA5CO,SA4CW5K,GAChB,IAAI0L,EAAmC,KAClCxP,EAAgC,EAAzBC,EAA4B,EAApBC,EAAuB,EAC3C,OAAO4D,GACL,KAAK,EACL,KAAK,EACH9D,EAAQ,GACRC,EAAS,GACTC,EAAe,EACf,MACF,KAAK,EACL,KAAK,EACL,KAAK,EACHF,EAAQ,GACRC,EAAS,GACTC,EAAe,EACf,MAEJ,OAAO4D,GACL,KAAK,EACH0L,EAAgB,IAAI,WAAW,IAAK,GACpC,MACF,KAAK,EACHA,EAAgB,IAAI,WAAW,IAAW,GAC1C,MACF,KAAK,EACHA,EAAgB,IAAI,WAAW,IAAe,GAC9C,MACF,KAAK,EACHA,EAAgB,IAAI,WAAW,IAAe,IAC9C,MACF,KAAK,EACHA,EAAgB,IAAI,WAAW,IAAe,IAC9C,MAGJ,IAAM5N,EAAY,IAAI,EAAU,IAAI,EAAY5E,KAAKoP,cAAgBoD,EAAgBxP,EAAOC,EAAQC,IAGpG,IAFA0B,EAAU6N,QAAoB,IAAT3L,EAAc,IAAI,EAAc9G,KAAKiG,cAAgB,IAAI,EAC9ErB,EAAUQ,iBAAmB,IACrB,CACNR,EAAUxB,EAAI,GAAK,GAAKkD,KAAKC,MAAMD,KAAKE,UAAYxG,KAAK6E,MAAO2C,kBAAoB,IACpF5C,EAAUvB,EAAI,GAAK,GAAKiD,KAAKC,MAAMD,KAAKE,UAAYxG,KAAK6E,MAAO4C,gBAAkB,IAClFzH,KAAK6E,MAAO6N,aAAa9N,GAAW,GAH9B,MAIc5E,KAAK6E,MAAOgH,QAAQjH,EAAW,EAAG,GAJhD,sBAICkH,EAJD,eAKN,IAAKA,EACH,MAEA9L,KAAK6E,MAAOqN,gBAAgBtN,GAC5B6J,QAAQC,IAAI5C,GAGhB9L,KAAKqP,WAAWvF,KAAKlF,GACnBA,EAAkBkC,KAAOA,GAE7BkL,gBAlGO,WAkGQ,WACPW,EAAQ,EACZ3S,KAAKqP,WAAWhG,SAAQ,SAACkB,EAAGqI,GACtBrI,IAAM,EAAK1F,MAAO6C,kBACpBiL,EAAQC,MAGZ,IAAMC,GAAaF,EAAQ,GAAK3S,KAAKqP,WAAWnO,OAC1C4R,EAAe9S,KAAKqP,WAAWsD,GAC/BI,EAAe/S,KAAKqP,WAAWwD,GACrCC,EAAaL,QAAU,IAAI,EAC3BM,EAAaN,QAAU,IAAI,EAAczS,KAAKiG,cAC9CjG,KAAK6E,MAAOsG,mBAAmB4H,KAGrCC,cA5NwB,WA8NtBhT,KAAKmP,QAAS7F,SAAQ,IAExB2J,WAAY,GAEZC,SAAU,GACVC,MAAO,KC7QwY,I,wBCQ7YC,EAAY,eACd,EACAvR,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAA0Q,E,6CClBf,IAAI9S,EAAI,EAAQ,QACZ+S,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAiB,EAAQ,QACzBC,EAAqB,EAAQ,QAC7BrS,EAA+B,EAAQ,QACvCsS,EAAkB,EAAQ,QAC1BC,EAAa,EAAQ,QAErBC,EAAuBF,EAAgB,sBACvCG,EAAmB,iBACnBC,EAAiC,iCAKjCC,EAA+BJ,GAAc,KAAOR,GAAM,WAC5D,IAAIa,EAAQ,GAEZ,OADAA,EAAMJ,IAAwB,EACvBI,EAAMC,SAAS,KAAOD,KAG3BE,EAAkB9S,EAA6B,UAE/C+S,EAAqB,SAAUC,GACjC,IAAKf,EAASe,GAAI,OAAO,EACzB,IAAIC,EAAaD,EAAER,GACnB,YAAsB3S,IAAfoT,IAA6BA,EAAajB,EAAQgB,IAGvDE,GAAUP,IAAiCG,EAK/C9T,EAAE,CAAEO,OAAQ,QAASC,OAAO,EAAMC,OAAQyT,GAAU,CAClDL,OAAQ,SAAgBM,GACtB,IAGI7B,EAAG8B,EAAGxT,EAAQyT,EAAKC,EAHnBN,EAAId,EAASxT,MACb6U,EAAIlB,EAAmBW,EAAG,GAC1BQ,EAAI,EAER,IAAKlC,GAAK,EAAG1R,EAASD,UAAUC,OAAQ0R,EAAI1R,EAAQ0R,IAElD,GADAgC,GAAW,IAAPhC,EAAW0B,EAAIrT,UAAU2R,GACzByB,EAAmBO,GAAI,CAEzB,GADAD,EAAMlB,EAASmB,EAAE1T,QACb4T,EAAIH,EAAMZ,EAAkB,MAAMgB,UAAUf,GAChD,IAAKU,EAAI,EAAGA,EAAIC,EAAKD,IAAKI,IAASJ,KAAKE,GAAGlB,EAAemB,EAAGC,EAAGF,EAAEF,QAC7D,CACL,GAAII,GAAKf,EAAkB,MAAMgB,UAAUf,GAC3CN,EAAemB,EAAGC,IAAKF,GAI3B,OADAC,EAAE3T,OAAS4T,EACJD,M,yDCzDX","file":"js/chunk-73961d92.dde32f43.js","sourcesContent":["export default class InputManager {\r\n  private lastPressedKeyCodeSet: Set<number> = new Set()\r\n  private nowPressedKeyCodeSet: Set<number> = new Set()\r\n  public onKeyDown(keyCode: number) {\r\n    this.nowPressedKeyCodeSet.add(keyCode)\r\n  }\r\n  public onKeyUp(keyCode: number) {\r\n    this.nowPressedKeyCodeSet.delete(keyCode)\r\n  }\r\n  public endTurn() {\r\n    this.lastPressedKeyCodeSet = new Set(Array.from(this.nowPressedKeyCodeSet))\r\n  }\r\n  public isPressing(keyCode: number) {\r\n    return this.nowPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public isPressed(keyCode: number) {\r\n    return this.nowPressedKeyCodeSet.has(keyCode) && !this.lastPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public isReleased(keyCode: number) {\r\n    return !this.nowPressedKeyCodeSet.has(keyCode) && this.lastPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public reset() {\r\n    this.lastPressedKeyCodeSet.clear()\r\n    this.nowPressedKeyCodeSet.clear()\r\n  }\r\n}","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\"}}),(true)?_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"4px\",\"top\":\"4px\",\"color\":\"#fff\"}},[_vm._v(_vm._s((1000 / _vm.fpsCounter.averageMs).toFixed(2))+\" fps\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\nimport InputManager from '@/stages/014/InputManager'\r\nimport { Field } from '@/stages/014/Field'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\nexport class TextureInfo {\r\n  constructor(\r\n    public texture: PIXI.Texture,\r\n    public offset: PIXI.Point,\r\n    public width: number,\r\n    public height: number,\r\n    public directionNum: number\r\n  ) {}\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  public hitRect: PIXI.Rectangle = new PIXI.Rectangle(-12, -12, 24, 24)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: SortableSprite\r\n  public debugCircle!: PIXI.Graphics\r\n  public debugRect!: PIXI.Graphics\r\n  private _routine!: BaseRoutine\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  set routine(value: BaseRoutine) {\r\n    this._routine = value\r\n    this._routine.character = this\r\n  }\r\n  private animationStep = 0\r\n  constructor(private textureInfo: TextureInfo) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(textureInfo.offset.x, textureInfo.offset.y, textureInfo.width, textureInfo.height))\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(224, 0, 32, 32))\r\n    this.shadowSprite = new SortableSprite()\r\n    this.shadowSprite.texture = shadowTexture\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.alpha = 0.7\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n    this.debugRect = new PIXI.Graphics()\r\n    this.debugRect.lineStyle(2, 0x5555FF, 1)\r\n    this.debugRect.alpha = 0.7\r\n    this.debugRect.drawRect(this.hitRect.x, this.hitRect.y, this.hitRect.width, this.hitRect.height)\r\n  }\r\n  public onAddToField(field: Field) {\r\n      field.debugLayerContainer.addChild(this.debugCircle)\r\n      field.debugLayerContainer.addChild(this.debugRect)\r\n      field.layerContainer.addChild(this.shadowSprite)\r\n      field.layerContainer.addChild(this.bodySprite)\r\n  }\r\n  public onRemoveFromField(field: Field) {\r\n    field.debugLayerContainer.removeChild(this.debugCircle)\r\n    field.debugLayerContainer.removeChild(this.debugRect)\r\n    field.layerContainer.removeChild(this.shadowSprite)\r\n    field.layerContainer.removeChild(this.bodySprite)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    if (this.textureInfo.directionNum === 8) {\r\n      switch(this.currentDirection) {\r\n        case 1:\r\n          offsetX = 96\r\n          break;\r\n        case 2:\r\n          break;\r\n        case 3:\r\n          offsetX = 96\r\n          offsetY = 64\r\n          break;\r\n        case 4:\r\n          offsetY = 64\r\n          break;\r\n        case 6:\r\n          offsetY = 128\r\n          break;\r\n        case 7:\r\n          offsetX = 96\r\n          offsetY = 128\r\n          break;\r\n        case 8:\r\n          offsetY = 192\r\n          break;\r\n        case 9:\r\n          offsetX = 96\r\n          offsetY = 192\r\n          break;\r\n      }\r\n    }\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * this.textureInfo.width\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureInfo.offset.x + offsetX,\r\n      this.textureInfo.offset.y + offsetY,\r\n      this.textureInfo.width,\r\n      this.textureInfo.height\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    this._routine.preUpdate()\r\n  }\r\n  public update() {\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    ;[this.hitRect.x, this.hitRect.y] = [this.x - 12, this.y - 12]\r\n    ;[this.debugRect.x, this.debugRect.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.shadowSprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private inputManager: InputManager) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    let direction: number | null = null \r\n    // 向き取得\r\n    if (this.inputManager.isPressing(KEY_CODE_LEFT)) {\r\n      if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n        direction = 1\r\n      } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n        direction = 7\r\n      } else {\r\n        direction = 4\r\n      }\r\n    } else if (this.inputManager.isPressing(KEY_CODE_RIGHT)) {\r\n      if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n        direction = 3\r\n      } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n        direction = 9\r\n      } else {\r\n        direction = 6\r\n      }\r\n    } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n      direction = 8\r\n    } else if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n      direction = 2\r\n    }\r\n    // 向かせたり歩かせたり\r\n    if (direction != null) {\r\n      const [moveX, moveY] = calcMoveXY(direction, 3)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 1)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}","import { Character } from '@/stages/014/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport * as PIXITilemap from '@/pixi-tilemap/index'\r\n\r\nconst AREA_DIVIDE_GRID_NUM = 3\r\nconst GAME_AREA_WIDTH = 640\r\nconst GAME_AREA_HEIGHT = 480\r\nconst SIGHT_MOVE_X = GAME_AREA_WIDTH / 3\r\nconst SIGHT_MOVE_Y = GAME_AREA_HEIGHT / 3\r\n\r\nclass Collosion {\r\n  constructor(\r\n    public type: number,\r\n    public left: number,\r\n    public top: number,\r\n    public right: number,\r\n    public bottom: number\r\n  ) {}\r\n}\r\n\r\nclass FieldCharacter {\r\n  public isAdded: boolean = false\r\n  constructor(\r\n    public character: Character,\r\n    public areaGridX: number,\r\n    public areaGridY: number,\r\n  ) {}\r\n}\r\n\r\nexport class Field extends PIXI.Container {\r\n  public bgLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  public airLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  public layerContainer!: SortableParticleContainer\r\n  public debugLayerContainer!: PIXI.Container\r\n  public horizontalGridNum = 200\r\n  public verticalGridNum = 200\r\n  public targetCharacter: Character | null = null\r\n  private fieldCharacters: Array<FieldCharacter> = []\r\n  private inSightArea: PIXI.Rectangle = new PIXI.Rectangle()\r\n  private walls: Array<PIXI.Rectangle> = []\r\n  private collisions: Array<Collosion> = []\r\n  private collisionsByArea: Map<string, Array<Collosion>> = new Map()\r\n  private fieldCharactersByArea: Map<string, Array<FieldCharacter>> = new Map()\r\n  private textureMap: Map<string, PIXI.Texture> = new Map()\r\n  private textureList: Array<PIXI.Texture> = []\r\n  private frameCount = 0\r\n  constructor(private texture: PIXI.Texture, private mapChipData: any, private mapData: any) {\r\n    super()\r\n\r\n    // 150,000チップ以上使えるようにする\r\n    PIXITilemap.Constant.use32bitIndex = true;\r\n\r\n    this.sortableChildren = true\r\n    this.bgLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true })\r\n    this.airLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.airLayerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n\r\n    this.generateMap()\r\n    this.inSightArea.width = Math.ceil(GAME_AREA_WIDTH / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) + 4\r\n    this.inSightArea.height = Math.ceil(GAME_AREA_HEIGHT / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) + 4\r\n    this.updateInSightArea()\r\n    this.on('added', () => {\r\n      // 親に追加されたときになにかやるならここで\r\n    })\r\n  }\r\n  public reloadMap(mapData: any) {\r\n    this.mapData = mapData\r\n    this.clearMap()\r\n    this.generateMap()\r\n  }\r\n  public clearMap() {\r\n    this.textureMap.forEach(value => value.destroy())\r\n    this.textureMap.clear()\r\n    this.bgLayerContainer.clear()\r\n    this.airLayerContainer.clear()\r\n    this.walls.length = 0\r\n  }\r\n  public generateMap() {\r\n    // まずは全てのチップをテクスチャ化\r\n    this.textureList.forEach(texture => texture.destroy())\r\n    this.textureList.length = 0\r\n\r\n    for (let gridY = 0, gridYCount = Math.floor(this.mapChipData.imageheight / this.mapChipData.tileheight); gridY < gridYCount; ++gridY) {\r\n      for (let gridX = 0, gridXCount = Math.floor(this.mapChipData.imagewidth / this.mapChipData.tilewidth); gridX < gridXCount; ++gridX) {\r\n        const texture = this.texture.clone()\r\n        texture.frame = new PIXI.Rectangle(\r\n          this.mapChipData.tilewidth * gridX,\r\n          this.mapChipData.tileheight * gridY,\r\n          this.mapChipData.tilewidth,\r\n          this.mapChipData.tileheight)\r\n        this.textureList.push(texture)\r\n      }\r\n    }\r\n    // チップを配置\r\n    {\r\n      this.horizontalGridNum = this.mapData.width\r\n      this.verticalGridNum = this.mapData.height\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const mapChipIndex = gridX + gridY * this.horizontalGridNum\r\n          // 下層、中層、上層地形\r\n          for (let layerIndex = 0; layerIndex < 3; ++layerIndex) {\r\n            const textureIndex = this.mapData.layers[layerIndex].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.bgLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 上空\r\n          {\r\n            const textureIndex = this.mapData.layers[3].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.airLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 衝突判定\r\n          {\r\n            // 衝突判定用チップの開始indexを取得しておく\r\n            const firstIndex = this.mapData.tilesets.filter((v: any) => v.source === 'collosion.json')[0].firstgid\r\n            const textureIndex = this.mapData.layers[4].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.collisions[gridY * this.horizontalGridNum + gridX] = new Collosion(\r\n                textureIndex - firstIndex,\r\n                gridX * this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight,\r\n                gridX * this.mapData.tilewidth + this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight + this.mapData.tileheight\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 衝突判定を4x4グリッド毎にエリア分け\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const collision = this.collisions[gridY * this.horizontalGridNum + gridX]\r\n          if (collision != null) {\r\n            const areaGridString = this.gridToAreaGrid(gridX, gridY).toString()\r\n            if (this.collisionsByArea.has(areaGridString)) {\r\n              this.collisionsByArea.get(areaGridString)!.push(collision)\r\n            } else {\r\n              this.collisionsByArea.set(areaGridString, [collision])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.log(`衝突判定のエリア分けの数:${this.collisionsByArea.size}`)\r\n    }\r\n  }\r\n  public setTargetCharacter(character: Character) {\r\n    this.targetCharacter = character\r\n  }\r\n  public addCharacter(character: Character, isTarget = false) {\r\n    const [areaGridX, areaGridY] = this.positionToAreaGrid(character.x, character.y)\r\n    const fieldCharacter = new FieldCharacter(character, areaGridX, areaGridY)\r\n    this.fieldCharacters.push(fieldCharacter)\r\n    this.addFieldCharacterToArea(fieldCharacter, areaGridX, areaGridY)\r\n    if (isTarget) {\r\n      this.setTargetCharacter(character)\r\n    }\r\n    character.update()\r\n    // 追加時に視界内かを判定して処理\r\n    if (this.isInSight(fieldCharacter)) {\r\n      character.onAddToField(this)\r\n      fieldCharacter.isAdded = true\r\n    }\r\n  }\r\n  public removeCharacter(character: Character) {\r\n    if (this.targetCharacter === character) {\r\n      this.targetCharacter = null\r\n    }\r\n    character.onRemoveFromField(this)\r\n    this.fieldCharacters = this.fieldCharacters.filter(fieldCharacter => {\r\n      if (fieldCharacter.character === character) {\r\n        this.removeFieldCharacterFromArea(fieldCharacter, fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  public update() {\r\n    // const t1 = performance.now()\r\n    const fieldCharacters = this.getInSightFieldCharacters()\r\n    // preUpdate\r\n    fieldCharacters.forEach(fieldCharacter => fieldCharacter.character.preUpdate())\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    fieldCharacters.forEach(fieldCharacter => {\r\n      if (fieldCharacter.character.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [fieldCharacter.character.preUpdateInfo.moveX, fieldCharacter.character.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0)) {\r\n          // キャラ\r\n          // const t1 = performance.now()\r\n          const [hitCharacter, hitDistanceRate] = this.hitOtherCaracter(fieldCharacter, moveX, moveY)\r\n          // t1sum += (performance.now() - t1)\r\n          if (hitCharacter) {\r\n            // キャラにめり込んだ分を戻す\r\n            moveX = (moveX - (moveX * hitDistanceRate))\r\n            moveY = (moveY - (moveY * hitDistanceRate))\r\n          }\r\n          // 地形\r\n          {\r\n            // const t2 = performance.now()\r\n            const [hit, excessX, excessY] = this.hitWall(fieldCharacter.character, moveX, moveY)\r\n            // t2sum += (performance.now() - t2)\r\n            // ぶつからなかった\r\n            if (!hit) {\r\n              fieldCharacter.character.x += moveX\r\n              fieldCharacter.character.y += moveY\r\n            }\r\n            // ぶつかった \r\n            else {\r\n              // 上下左右移動時は押し戻しに従う\r\n              if (excessX === 0 || excessY === 0) {\r\n                fieldCharacter.character.x += (moveX - excessX)\r\n                fieldCharacter.character.y += (moveY - excessY)\r\n              }\r\n              // 斜め移動時は片方のみの移動を試みる\r\n              else {\r\n                if (!this.hitWall(fieldCharacter.character, 0, moveY)[0]) {\r\n                  fieldCharacter.character.y += moveY\r\n                  fieldCharacter.character.x += (moveX - excessX) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n                else if (!this.hitWall(fieldCharacter.character, moveX, 0)[0]) {\r\n                  fieldCharacter.character.x += moveX\r\n                  fieldCharacter.character.y += (moveY - excessY) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        fieldCharacter.character.currentDirection = fieldCharacter.character.preUpdateInfo.nextDirection\r\n        fieldCharacter.character.preUpdateInfo = null\r\n\r\n        const [oldAreaGridX, oldAreaGridY] = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n        fieldCharacter.character.update()\r\n        ;[fieldCharacter.areaGridX, fieldCharacter.areaGridY] = this.positionToAreaGrid(fieldCharacter.character.x, fieldCharacter.character.y)\r\n        // キャラの所属AreaGridの変更検知\r\n        if (fieldCharacter.areaGridX !== oldAreaGridX || fieldCharacter.areaGridY !== oldAreaGridY) {\r\n          this.removeFieldCharacterFromArea(fieldCharacter, oldAreaGridX, oldAreaGridY)\r\n          this.addFieldCharacterToArea(fieldCharacter,fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n          // 視界外になったら非表示\r\n          if (!this.isInSight(fieldCharacter)) {\r\n            fieldCharacter.character.onRemoveFromField(this)\r\n            fieldCharacter.isAdded = false\r\n          }\r\n        }\r\n        // console.log(`キャラの所属AreaGrid(${fieldCharacter.areaGridX}, ${fieldCharacter.areaGridY})`)\r\n      } else {\r\n        fieldCharacter.character.update()\r\n      }\r\n    })\r\n\r\n    // 視点移動\r\n    const rightLimitX = GAME_AREA_WIDTH - SIGHT_MOVE_X\r\n    const leftLimitX = SIGHT_MOVE_X\r\n    const bottomLimitY = GAME_AREA_HEIGHT - SIGHT_MOVE_Y\r\n    const topLimitY = SIGHT_MOVE_Y\r\n    if (this.targetCharacter) {\r\n      const offsetX = this.targetCharacter.x + this.x\r\n      if (offsetX > rightLimitX) {\r\n        this.x = -(this.targetCharacter.x - rightLimitX)\r\n      }\r\n      else if (offsetX < leftLimitX) {\r\n        this.x = -(this.targetCharacter.x - leftLimitX)\r\n      }\r\n      const offsetY = this.targetCharacter.y + this.y\r\n      if (offsetY > bottomLimitY) {\r\n        this.y = -(this.targetCharacter.y - bottomLimitY)\r\n      }\r\n      else if (offsetY < topLimitY) {\r\n        this.y = -(this.targetCharacter.y - topLimitY)\r\n      }\r\n      const [oldInSightAreaX, oldInSightAreaY] = [this.inSightArea.x, this.inSightArea.y]\r\n      this.updateInSightArea()\r\n      // 視界外になった領域のキャラを非表示に、視界内になった領域のキャラを表示に\r\n      const movedAreaX = this.inSightArea.x - oldInSightAreaX\r\n      const movedAreaY = this.inSightArea.y - oldInSightAreaY\r\n      this.updateCharacterVisibilityByMovedAreaOffset(movedAreaX, movedAreaY)\r\n    }\r\n    this.x = Math.floor(Math.min(0, Math.max(-(this.mapData.tilewidth * this.horizontalGridNum - GAME_AREA_WIDTH), this.x)))\r\n    this.y = Math.floor(Math.min(0, Math.max(-(this.mapData.tileheight * this.verticalGridNum - GAME_AREA_HEIGHT), this.y)))\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n\r\n    // if (this.frameCount % 200 === 0) {\r\n      // console.log(`${performance.now() - t1}`)\r\n    // }\r\n    ++ this.frameCount\r\n\r\n  }\r\n  // 他キャラとの衝突判定\r\n  private hitOtherCaracter(targetFieldCharacter: FieldCharacter, offsetX: number, offsetY: number): [boolean, number] {\r\n    const targetCircle = targetFieldCharacter.character.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    let hitDistance = 0\r\n    const otherFieldCharacters = this.getOtherFieldCharactersByAreaGrid(targetFieldCharacter)\r\n    // const otherFieldCharacters = this.fieldCharacters.filter(fieldCharacter => targetFieldCharacter != fieldCharacter)\r\n    // console.log(otherFieldCharacters.length)\r\n    const hit = otherFieldCharacters.some(fieldCharacter => {\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, fieldCharacter.character.hitCircle.x, fieldCharacter.character.hitCircle.y]\r\n      // めり込んだ距離(の2乗)\r\n      hitDistance = (targetCircle.radius + fieldCharacter.character.hitCircle.radius) - Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n      const hit = hitDistance >= 0\r\n      return hit\r\n    })\r\n    return [hit, hit ? hitDistance / Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)) : 0]\r\n  }\r\n  public hitWall(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number, number] {\r\n    const areaGrid = this.positionToAreaGrid(targetCharacter.x, targetCharacter.y)\r\n    const collisions = this.getCollisionsByAreaGrid(areaGrid)\r\n    // const collisions = this.collisions\r\n    // console.log(collisions.length)\r\n\r\n    const targetRect = targetCharacter.hitRect.clone()\r\n    targetRect.x += offsetX\r\n    targetRect.y += offsetY\r\n    let excessX = 0 // めり込んだ量X\r\n    let excessY = 0 // めり込んだ量Y\r\n\r\n    // そのキャラの周辺のcollisionを抽出\r\n    const hit = collisions.some(collision => {\r\n      const hHit = targetRect.left < collision.right && targetRect.right > collision.left\r\n      const vHit = targetRect.top < collision.bottom && targetRect.bottom > collision.top\r\n      const hit = hHit && vHit\r\n      // 衝突した場合はめり込み量計算\r\n      if (hit) {\r\n        if (offsetX < 0) {\r\n          excessX = targetRect.left - collision.right\r\n        } else if (offsetX > 0) {\r\n          excessX = targetRect.right - collision.left\r\n        }\r\n        if (offsetY < 0) {\r\n          excessY = targetRect.top - collision.bottom\r\n        } else if (offsetY > 0) {\r\n          excessY = targetRect.bottom - collision.top\r\n        }\r\n      }\r\n      return hit\r\n    })\r\n    return [hit, excessX, excessY]\r\n  }\r\n  private getOtherFieldCharactersByAreaGrid(fieldCharacter: FieldCharacter) {\r\n    const otherFieldCharacters: Array<FieldCharacter> = []\r\n    const areaGrid = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.fieldCharactersByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(otherFieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return otherFieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter)\r\n  }\r\n  private getCollisionsByAreaGrid(areaGrid: Array<number>): Array<Collosion> {\r\n    const collisions: Array<Collosion> = []\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.collisionsByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(collisions, this.collisionsByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return collisions\r\n  }\r\n  private addFieldCharacterToArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    if (this.fieldCharactersByArea.has(areaGridString)) {\r\n      this.fieldCharactersByArea.get(areaGridString)!.push(fieldCharacter)\r\n    } else {\r\n      this.fieldCharactersByArea.set(areaGridString, [fieldCharacter])\r\n    }\r\n  }\r\n  private removeFieldCharacterFromArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    const fieldCharacters = this.fieldCharactersByArea.get(areaGridString)!\r\n    this.fieldCharactersByArea.set(areaGridString, fieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter))\r\n  }\r\n  private gridToAreaGrid(gridX: number, gridY: number) {\r\n    return [Math.floor(gridX / AREA_DIVIDE_GRID_NUM), Math.floor(gridY / AREA_DIVIDE_GRID_NUM)]\r\n  }\r\n  private positionToAreaGrid(x: number, y: number) {\r\n    return [Math.floor(x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)), Math.floor(y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight))]\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n  }\r\n  // 視界内のキャラクター一覧取得\r\n  private getInSightFieldCharacters(): Array<FieldCharacter> {\r\n    const fieldCharacters: Array<FieldCharacter> = []\r\n    for (let areaGridY = this.inSightArea.top; areaGridY <= this.inSightArea.bottom; ++areaGridY) {\r\n      for (let areaGridX = this.inSightArea.left; areaGridX <= this.inSightArea.right; ++areaGridX) {\r\n        const areaGridString = [areaGridX, areaGridY].toString()\r\n        if (this.fieldCharactersByArea.has(areaGridString)) {\r\n          Array.prototype.push.apply(fieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n        }\r\n      }\r\n    }\r\n    return fieldCharacters\r\n  }\r\n  private updateInSightArea() {\r\n    this.inSightArea.x = Math.max(0, -Math.floor(this.x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) - 2)\r\n    this.inSightArea.y = Math.max(0, -Math.floor(this.y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) - 2)\r\n  }\r\n  private isInSight(fieldCharacter: FieldCharacter): boolean {\r\n    return fieldCharacter.areaGridX >= this.inSightArea.left && fieldCharacter.areaGridX <= this.inSightArea.right && fieldCharacter.areaGridY >= this.inSightArea.top && fieldCharacter.areaGridY <= this.inSightArea.bottom \r\n  }\r\n  private updateCharacterVisibilityByMovedAreaOffset(movedAreaX: number, movedAreaY: number) {\r\n    if (movedAreaX !== 0) {\r\n      // 横方向で視界内になったキャラを表示\r\n      {\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.right - movedAreaX) + 1 : this.inSightArea.left\r\n        let endX = movedAreaX > 0 ? this.inSightArea.right : (this.inSightArea.left - movedAreaX) - 1\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onAddToField(this)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 横方向で視界外になったキャラを非表示\r\n      {\r\n        console.log(`movedAreaX = ${movedAreaX}`)\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.left - movedAreaX) : this.inSightArea.right + 1\r\n        let endX = movedAreaX > 0 ? this.inSightArea.left - 1 : (this.inSightArea.right - movedAreaX)\r\n        console.log(`startX: ${startX}, endX: ${endX}`)\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            console.log(areaGridString)\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onRemoveFromField(this)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (movedAreaY !== 0) {\r\n      // 縦方向で視界内になったキャラを表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.bottom - movedAreaY) + 1 : this.inSightArea.top\r\n        let endY = movedAreaY > 0 ? this.inSightArea.bottom : (this.inSightArea.top - movedAreaY) - 1\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onAddToField(this)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 縦方向で視界外になったキャラを非表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.top - movedAreaY) : this.inSightArea.bottom + 1\r\n        let endY = movedAreaY > 0 ? this.inSightArea.top - 1 : (this.inSightArea.bottom - movedAreaY)\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onRemoveFromField(this)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 高速歩きで壁にぶつかった場合、移動しないのではなくx, yについて移動できるところまで戻してあげる。\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine, TextureInfo } from '@/stages/014/Character'\r\nimport { Field } from '@/stages/014/Field'\r\nimport InputManager from '@/stages/014/InputManager'\r\n\r\nclass FpsCounter {\r\n  private ms = 0\r\n  private counter = 0\r\n  public averageMs = 0\r\n  constructor(private oldNow = performance.now()) {}\r\n  public checkPoint() {\r\n    const now = performance.now()\r\n    this.ms += (now - this.oldNow)\r\n    this.oldNow = now\r\n    ++this.counter\r\n    if (this.counter >= 60) {\r\n      this.averageMs = this.ms / this.counter\r\n      this.counter = 0\r\n      this.ms = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    renderTexture: PIXI.RenderTexture | null;\r\n    field: Field | null;\r\n    inputManager: InputManager;\r\n    fpsCounter: FpsCounter;\r\n    characters: Array<Character>;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      renderTexture: null,\r\n      field: null,\r\n      inputManager: new InputManager(),\r\n      fpsCounter: new FpsCounter(),\r\n      characters: [],\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n    // PIXI.settings.TARGET_FPMS = 1\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const opt = { \r\n      width: 640,\r\n      height: 480,\r\n      autoDensity: true\r\n    }\r\n    this.pixiApp = new PIXI.Application(opt)\r\n    this.pixiApp.ticker.maxFPS = 60\r\n    this.pixiApp.ticker.minFPS = 60\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/014/chara01.png\")\r\n      .add(\"/arpg-sample/images/stages/014/chara02.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-blue.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-red.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-yellow.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.json\")\r\n      .add(\"/arpg-sample/images/stages/013/map01.json\")\r\n      .load(() => {\r\n\r\n        // RenderTextureに必要な画像すべてを描き込む\r\n        this.renderTexture = PIXI.RenderTexture.create({ width: 1024, height: 1024 })\r\n        const renderSprite = PIXI.Sprite.from(this.renderTexture)\r\n\r\n        // mapchipを描き込む\r\n        const spriteMapChip = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.png\"].texture)\r\n        this.pixiApp!.renderer.render(spriteMapChip, this.renderTexture, false)\r\n        // chara01を書き込む\r\n        const sprite01 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara01.png\"].texture)\r\n        sprite01.position.set(256, 0)\r\n        this.pixiApp!.renderer.render(sprite01, this.renderTexture, false)\r\n        // chara02を書き込む\r\n        const sprite02 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara02.png\"].texture)\r\n        sprite02.position.set(256 + 192, 0)\r\n        this.pixiApp!.renderer.render(sprite02, this.renderTexture, false)\r\n        // slimeを書き込む\r\n        const sprite03 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-blue.png\"].texture)\r\n        sprite03.position.set(256 + 192 * 2, 0)\r\n        this.pixiApp!.renderer.render(sprite03, this.renderTexture, false)\r\n\r\n        const sprite04 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-red.png\"].texture)\r\n        sprite04.position.set(256 + 192 * 2, 32)\r\n        this.pixiApp!.renderer.render(sprite04, this.renderTexture, false)\r\n\r\n        const sprite05 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-yellow.png\"].texture)\r\n        sprite05.position.set(256 + 192 * 2, 64)\r\n        this.pixiApp!.renderer.render(sprite05, this.renderTexture, false)\r\n\r\n        // フィールド\r\n        this.field = new Field(\r\n          this.renderTexture,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.json\"].data,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/map01.json\"].data)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n\r\n        // NPC\r\n        this.generateCharacter(0)\r\n        this.generateCharacter(1)\r\n        this.generateCharacter(2)\r\n        this.generateCharacter(3)\r\n        this.generateCharacter(4)\r\n        this.field!.setTargetCharacter(this.characters[0])\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.inputManager.onKeyDown(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.inputManager.onKeyUp(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      this.fpsCounter.checkPoint()\r\n      // Spaceキーでキャラ切り替え\r\n      if (this.inputManager.isReleased(32)) {\r\n        this.toggleCharacter()\r\n      }\r\n      // 1キーでデバッグ表示切り替え\r\n      if (this.inputManager.isReleased(49)) {\r\n        this.onClickToggleDebugMode()\r\n      }\r\n      // DELキーでキャラ削除\r\n      if (this.inputManager.isReleased(46)) {\r\n        this.characters = this.characters.filter(character => character !== this.field!.targetCharacter!)\r\n        this.field!.removeCharacter(this.field!.targetCharacter!)\r\n        if (this.characters.length > 0) {\r\n          this.toggleCharacter()\r\n        }\r\n      }\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n      this.inputManager.endTurn()\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    },\r\n    isFocusedCharacter(character: Character) {\r\n      return this.field!.targetCharacter === character\r\n    },\r\n    onClickCharacterCell(character: Character) {\r\n      this.field!.setTargetCharacter(character)\r\n    },\r\n    onClickDeleteCharacter(character: Character) {\r\n      this.characters = this.characters.filter(v => v !== character)\r\n      this.field!.removeCharacter(character)\r\n    },\r\n    generateCharacter(type: number) {\r\n      let textureOffset: PIXI.Point | null = null\r\n      let [width, height, directionNum] = [0, 0, 0]\r\n      switch(type) {\r\n        case 0:\r\n        case 1:\r\n          width = 32\r\n          height = 64\r\n          directionNum = 8\r\n          break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n          width = 32\r\n          height = 32\r\n          directionNum = 1\r\n          break;\r\n      }\r\n      switch(type) {\r\n        case 0:\r\n          textureOffset = new PIXI.Point(256, 0)\r\n          break;\r\n        case 1:\r\n          textureOffset = new PIXI.Point(256 + 192, 0)\r\n          break;\r\n        case 2:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 0)\r\n          break;\r\n        case 3:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 32)\r\n          break;\r\n        case 4:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 64)\r\n          break;\r\n      }\r\n\r\n      const character = new Character(new TextureInfo(this.renderTexture!, textureOffset!, width, height, directionNum))\r\n      character.routine = (type === 0) ? new PlayerRoutine(this.inputManager) : new UroUroRoutine()\r\n      character.currentDirection = 4\r\n      for(;;) {\r\n        character.x = 32 + 16 * Math.floor(Math.random() * (this.field!.horizontalGridNum - 4))\r\n        character.y = 32 + 16 * Math.floor(Math.random() * (this.field!.verticalGridNum - 4))\r\n        this.field!.addCharacter(character, false)\r\n        const [hit, x, y] = this.field!.hitWall(character, 0, 0)\r\n        if (!hit) {\r\n          break;\r\n        } else {\r\n          this.field!.removeCharacter(character)\r\n          console.log(hit)\r\n        }\r\n      }\r\n      this.characters.push(character)\r\n      ;(character as any).type = type\r\n    },\r\n    toggleCharacter() {\r\n        let index = 0\r\n        this.characters.forEach((v, i) => {\r\n          if (v === this.field!.targetCharacter) {\r\n            index = i\r\n          }\r\n        })\r\n        const nextIndex = (index + 1) % this.characters.length\r\n        const oldCharacter = this.characters[index]\r\n        const newCharacter = this.characters[nextIndex]\r\n        oldCharacter.routine = new UroUroRoutine()\r\n        newCharacter.routine = new PlayerRoutine(this.inputManager)\r\n        this.field!.setTargetCharacter(newCharacter)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {\r\n  },\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=fb090738&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./View.vue?vue&type=style&index=0&id=fb090738&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fb090738\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=style&index=0&id=fb090738&scoped=true&lang=scss&\""],"sourceRoot":""}