{"version":3,"sources":["webpack:///./src/stages/014/InputManager.ts","webpack:///./src/stages/015/View.vue?751f","webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/stages/015/View.vue?c336","webpack:///./src/stages/015/Character.ts","webpack:///./src/stages/015/Field.ts","webpack:///./src/stages/015/View.vue?302a","webpack:///./src/stages/015/View.vue?bd73","webpack:///./src/stages/015/View.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js"],"names":["InputManager","lastPressedKeyCodeSet","Set","nowPressedKeyCodeSet","keyCode","this","add","Array","from","has","clear","$","$some","some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","collection","collectionStrong","module","exports","init","render","_vm","_h","$createElement","_c","_self","staticStyle","ref","_v","_s","fpsCounter","averageMs","toFixed","staticRenderFns","moveX","moveY","nextDirection","texture","offset","width","height","directionNum","toRadian","degree","Math","PI","DIRECTION_RADIAN_MAP","Map","DIRECTION_OFFSET_MAP","textureInfo","frameCount","isAttacking","attackCircles","attackCircleGraphics","sprite","SortableSprite","baseTexture","x","y","anchor","set","get","character","currentDirection","Weapon","DISTANCE","HIT_OFFSET_Y","position","frame","rotation","field","layerContainer","addChildZ","zOrder","removeChild","push","attackCircleGraphic","lineStyle","alpha","drawCircle","debugLayerContainer","addChild","forEach","onRemoveFromField","hitCircle","hitRect","animationFrame","_currentDirection","preUpdateInfo","_weapon","animationStep","bodySprite","shadowTexture","shadowSprite","debugCircle","debugRect","drawRect","value","syncTexture","_routine","offsetX","offsetY","preUpdate","update","onAddToField","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","calcMoveXY","direction","speed","slantSpeed","inputManager","isPressing","isReleased","attack","isMoving","frameCountToWait","frameCountToMove","floor","random","AREA_DIVIDE_GRID_NUM","GAME_AREA_WIDTH","GAME_AREA_HEIGHT","SIGHT_MOVE_X","SIGHT_MOVE_Y","type","left","top","right","bottom","areaGridX","areaGridY","isAdded","mapChipData","mapData","horizontalGridNum","verticalGridNum","targetCharacter","fieldCharacters","inSightArea","walls","collisions","collisionsByArea","fieldCharactersByArea","textureMap","textureList","use32bitIndex","sortableChildren","bgLayerContainer","SortableParticleContainer","uvs","vertices","tint","airLayerContainer","visible","generateMap","ceil","tilewidth","tileheight","updateInSightArea","on","clearMap","destroy","gridY","gridYCount","imageheight","gridX","gridXCount","imagewidth","clone","mapChipIndex","layerIndex","textureIndex","layers","data","addFrame","firstIndex","tilesets","v","source","firstgid","collision","areaGridString","gridToAreaGrid","toString","isTarget","positionToAreaGrid","fieldCharacter","addFieldCharacterToArea","setTargetCharacter","isInSight","removeFieldCharacterFromArea","getInSightFieldCharacters","hitOtherCaracter","hitCharacter","hitDistanceRate","hitWall","hit","excessX","excessY","oldAreaGridX","oldAreaGridY","rightLimitX","leftLimitX","bottomLimitY","topLimitY","oldInSightAreaX","oldInSightAreaY","movedAreaX","movedAreaY","updateCharacterVisibilityByMovedAreaOffset","min","max","sortChildren","targetFieldCharacter","targetCircle","hitDistance","otherFieldCharacters","getOtherFieldCharactersByAreaGrid","x1","y1","x2","y2","radius","sqrt","pow","areaGrid","getCollisionsByAreaGrid","targetRect","hHit","vHit","areaGridStrings","prototype","apply","fieldCharacter2","flag","startX","endX","areaX","areaY","console","log","startY","endY","oldNow","performance","now","ms","counter","extend","pixiApp","renderTexture","characters","isDebugMode","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","opt","autoDensity","ticker","maxFPS","minFPS","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","load","create","spriteMapChip","resources","renderer","sprite01","sprite02","sprite03","sprite04","sprite05","spriteKnife","spriteSword","generateCharacter","weapon","methods","event","delta","checkPoint","toggleCharacter","onClickToggleDebugMode","removeCharacter","endTurn","setDebugMode","isFocusedCharacter","onClickCharacterCell","onClickDeleteCharacter","textureOffset","routine","addCharacter","index","i","nextIndex","oldCharacter","newCharacter","beforeDestroy","components","computed","props","component","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","arg","k","len","E","A","n","TypeError"],"mappings":"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","file":"js/chunk-42beaf9a.68590142.js","sourcesContent":["export default class InputManager {\r\n  private lastPressedKeyCodeSet: Set<number> = new Set()\r\n  private nowPressedKeyCodeSet: Set<number> = new Set()\r\n  public onKeyDown(keyCode: number) {\r\n    this.nowPressedKeyCodeSet.add(keyCode)\r\n  }\r\n  public onKeyUp(keyCode: number) {\r\n    this.nowPressedKeyCodeSet.delete(keyCode)\r\n  }\r\n  public endTurn() {\r\n    this.lastPressedKeyCodeSet = new Set(Array.from(this.nowPressedKeyCodeSet))\r\n  }\r\n  public isPressing(keyCode: number) {\r\n    return this.nowPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public isPressed(keyCode: number) {\r\n    return this.nowPressedKeyCodeSet.has(keyCode) && !this.lastPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public isReleased(keyCode: number) {\r\n    return !this.nowPressedKeyCodeSet.has(keyCode) && this.lastPressedKeyCodeSet.has(keyCode)\r\n  }\r\n  public reset() {\r\n    this.lastPressedKeyCodeSet.clear()\r\n    this.nowPressedKeyCodeSet.clear()\r\n  }\r\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=style&index=0&id=61311f8e&scoped=true&lang=scss&\"","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\"}}),(true)?_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"4px\",\"top\":\"4px\",\"color\":\"#fff\"}},[_vm._v(_vm._s((1000 / _vm.fpsCounter.averageMs).toFixed(2))+\" fps\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\nimport InputManager from '@/stages/014/InputManager'\r\nimport { Field } from '@/stages/015/Field'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\nexport class TextureInfo {\r\n  constructor(\r\n    public texture: PIXI.Texture,\r\n    public offset: PIXI.Point,\r\n    public width: number,\r\n    public height: number,\r\n    public directionNum: number\r\n  ) {}\r\n}\r\n\r\nfunction toRadian(degree: number) {\r\n  return degree * (Math.PI / 180)\r\n}\r\n\r\nconst DIRECTION_RADIAN_MAP = new Map(\r\n  [\r\n    [8, 0],\r\n    [9, toRadian(45)],\r\n    [6, toRadian(45 * 2)],\r\n    [3, toRadian(45 * 3)],\r\n    [2, toRadian(45 * 4)],\r\n    [1, toRadian(45 * 5)],\r\n    [4, toRadian(45 * 6)],\r\n    [7, toRadian(45 * 7)]\r\n  ])\r\n\r\nconst DIRECTION_OFFSET_MAP = new Map(\r\n  [\r\n    [8, new PIXI.Point(0, -1)],\r\n    [9, new PIXI.Point(0.7, -0.7)],\r\n    [6, new PIXI.Point(1, 0)],\r\n    [3, new PIXI.Point(0.7, 0.7)],\r\n    [2, new PIXI.Point(0, 1)],\r\n    [1, new PIXI.Point(-0.7, 0.7)],\r\n    [4, new PIXI.Point(-1, 0)],\r\n    [7, new PIXI.Point(-0.7, -0.7)]\r\n  ])\r\n\r\nexport class Weapon {\r\n  public character!: Character\r\n  public field!: Field\r\n  private sprite!: SortableSprite\r\n  private frameCount = -1\r\n  public isAttacking = false\r\n  public attackCircles: Array<PIXI.Circle> = []\r\n  public attackCircleGraphics: Array<PIXI.Graphics> = []\r\n  static HIT_OFFSET_Y = 10\r\n  static DISTANCE = 26\r\n  constructor(private textureInfo: TextureInfo) {\r\n    this.sprite = new SortableSprite()\r\n    this.sprite.texture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(textureInfo.offset.x, textureInfo.offset.y, textureInfo.width, textureInfo.height))\r\n    this.sprite.anchor.set(0.5, 0.5)\r\n  }\r\n  public onAddToField() {\r\n    this.isAttacking = true\r\n    this.frameCount = 0\r\n    const offset = DIRECTION_OFFSET_MAP.get(this.character.currentDirection)!\r\n    ;[this.sprite.position.x, this.sprite.position.y] = [this.character.x + offset.x * Weapon.DISTANCE, this.character.y + offset.y * Weapon.DISTANCE - Weapon.HIT_OFFSET_Y]\r\n    this.sprite.texture.frame = new PIXI.Rectangle(this.textureInfo.offset.x, this.textureInfo.offset.y, this.textureInfo.width, this.textureInfo.height)\r\n    this.sprite.rotation = DIRECTION_RADIAN_MAP.get(this.character.currentDirection)!\r\n    this.field.layerContainer.addChildZ(this.sprite, 0)\r\n    this.sprite.zOrder = this.sprite.y\r\n  }\r\n  public onRemoveFromField() {\r\n    this.isAttacking = false\r\n    this.field.layerContainer.removeChild(this.sprite)\r\n  }\r\n  public update() {\r\n    // 攻撃してない\r\n    if (this.frameCount < 0) {\r\n      return\r\n    }\r\n    if (this.frameCount === 5) {\r\n      this.sprite.texture.frame = new PIXI.Rectangle(this.textureInfo.offset.x + this.textureInfo.width, this.textureInfo.offset.y, this.textureInfo.width, this.textureInfo.height)\r\n    }\r\n    else if (this.frameCount === 10) {\r\n      // 攻撃判定出現\r\n      this.attackCircles.push(new PIXI.Circle(0, 0, 5))\r\n      const attackCircleGraphic = new PIXI.Graphics()\r\n      attackCircleGraphic.lineStyle(2, 0x55FF55, 1)\r\n      attackCircleGraphic.alpha = 0.7\r\n      attackCircleGraphic.drawCircle(0, 0, 5)\r\n      attackCircleGraphic.position.set(this.sprite.x, this.sprite.y + Weapon.HIT_OFFSET_Y)\r\n      this.attackCircleGraphics.push(attackCircleGraphic)\r\n      this.field.debugLayerContainer.addChild(attackCircleGraphic)\r\n      this.sprite.texture.frame = new PIXI.Rectangle(this.textureInfo.offset.x + this.textureInfo.width * 2, this.textureInfo.offset.y, this.textureInfo.width, this.textureInfo.height)\r\n    }\r\n    else if (this.frameCount === 15) {\r\n      this.sprite.texture.frame = new PIXI.Rectangle(this.textureInfo.offset.x + this.textureInfo.width * 3, this.textureInfo.offset.y, this.textureInfo.width, this.textureInfo.height)\r\n      this.attackCircleGraphics.forEach(attackCircleGraphic => this.field.debugLayerContainer.removeChild(attackCircleGraphic))\r\n    }\r\n    else if (this.frameCount === 20) {\r\n      this.sprite.texture.frame = new PIXI.Rectangle(this.textureInfo.offset.x + this.textureInfo.width * 4, this.textureInfo.offset.y, this.textureInfo.width, this.textureInfo.height)\r\n    }\r\n    else if (this.frameCount === 25) {\r\n      this.field.layerContainer.removeChild(this.sprite)\r\n      this.frameCount = -1\r\n      this.onRemoveFromField()\r\n      return\r\n    }\r\n    ++this.frameCount\r\n  }\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  public hitRect: PIXI.Rectangle = new PIXI.Rectangle(-12, -12, 24, 24)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: SortableSprite\r\n  public debugCircle!: PIXI.Graphics\r\n  public debugRect!: PIXI.Graphics\r\n  private _routine!: BaseRoutine\r\n  private _weapon: Weapon | null = null\r\n  set weapon(value: Weapon) {\r\n    this._weapon = value\r\n    this._weapon.character = this\r\n    this._weapon.field = this.field\r\n  }\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  set routine(value: BaseRoutine) {\r\n    this._routine = value\r\n    this._routine.character = this\r\n  }\r\n  private animationStep = 0\r\n  constructor(private textureInfo: TextureInfo, private field: Field) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(textureInfo.offset.x, textureInfo.offset.y, textureInfo.width, textureInfo.height))\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(224, 0, 32, 32))\r\n    this.shadowSprite = new SortableSprite()\r\n    this.shadowSprite.texture = shadowTexture\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.alpha = 0.7\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n    this.debugRect = new PIXI.Graphics()\r\n    this.debugRect.lineStyle(2, 0x5555FF, 1)\r\n    this.debugRect.alpha = 0.7\r\n    this.debugRect.drawRect(this.hitRect.x, this.hitRect.y, this.hitRect.width, this.hitRect.height)\r\n  }\r\n  public onAddToField() {\r\n    this.field.debugLayerContainer.addChild(this.debugCircle)\r\n    this.field.debugLayerContainer.addChild(this.debugRect)\r\n    this.field.layerContainer.addChildZ(this.shadowSprite, 0)\r\n    this.field.layerContainer.addChildZ(this.bodySprite, 0)\r\n  }\r\n  public onRemoveFromField() {\r\n    this.field.debugLayerContainer.removeChild(this.debugCircle)\r\n    this.field.debugLayerContainer.removeChild(this.debugRect)\r\n    this.field.layerContainer.removeChild(this.shadowSprite)\r\n    this.field.layerContainer.removeChild(this.bodySprite)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    if (this.textureInfo.directionNum === 8) {\r\n      switch(this.currentDirection) {\r\n        case 1:\r\n          offsetX = 96\r\n          break;\r\n        case 2:\r\n          break;\r\n        case 3:\r\n          offsetX = 96\r\n          offsetY = 64\r\n          break;\r\n        case 4:\r\n          offsetY = 64\r\n          break;\r\n        case 6:\r\n          offsetY = 128\r\n          break;\r\n        case 7:\r\n          offsetX = 96\r\n          offsetY = 128\r\n          break;\r\n        case 8:\r\n          offsetY = 192\r\n          break;\r\n        case 9:\r\n          offsetX = 96\r\n          offsetY = 192\r\n          break;\r\n      }\r\n    }\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * this.textureInfo.width\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureInfo.offset.x + offsetX,\r\n      this.textureInfo.offset.y + offsetY,\r\n      this.textureInfo.width,\r\n      this.textureInfo.height\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    if (this._weapon == null || !this._weapon.isAttacking) {\r\n      this._routine.preUpdate()\r\n    }\r\n  }\r\n  public update() {\r\n    if (this._weapon != null && this._weapon.isAttacking) {\r\n      this._weapon.update()\r\n    }\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    ;[this.hitRect.x, this.hitRect.y] = [this.x - 12, this.y - 12]\r\n    ;[this.debugRect.x, this.debugRect.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.shadowSprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n  public attack() {\r\n    if (this._weapon != null) {\r\n      this._weapon.onAddToField()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private inputManager: InputManager) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    // 移動\r\n    {\r\n      let direction: number | null = null \r\n      // 向き取得\r\n      if (this.inputManager.isPressing(KEY_CODE_LEFT)) {\r\n        if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n          direction = 1\r\n        } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n          direction = 7\r\n        } else {\r\n          direction = 4\r\n        }\r\n      } else if (this.inputManager.isPressing(KEY_CODE_RIGHT)) {\r\n        if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n          direction = 3\r\n        } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n          direction = 9\r\n        } else {\r\n          direction = 6\r\n        }\r\n      } else if (this.inputManager.isPressing(KEY_CODE_UP)) {\r\n        direction = 8\r\n      } else if (this.inputManager.isPressing(KEY_CODE_DOWN)) {\r\n        direction = 2\r\n      }\r\n      // 向かせたり歩かせたり\r\n      if (direction != null) {\r\n        const [moveX, moveY] = calcMoveXY(direction, 3)\r\n        this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n      }\r\n    }\r\n    // 攻撃\r\n    {\r\n      if (this.inputManager.isReleased(90)) {\r\n        this.character.attack()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 1)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}","import { Character } from '@/stages/015/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport * as PIXITilemap from '@/pixi-tilemap/index'\r\n\r\nconst AREA_DIVIDE_GRID_NUM = 3\r\nconst GAME_AREA_WIDTH = 640\r\nconst GAME_AREA_HEIGHT = 480\r\nconst SIGHT_MOVE_X = GAME_AREA_WIDTH / 3\r\nconst SIGHT_MOVE_Y = GAME_AREA_HEIGHT / 3\r\n\r\nclass Collosion {\r\n  constructor(\r\n    public type: number,\r\n    public left: number,\r\n    public top: number,\r\n    public right: number,\r\n    public bottom: number\r\n  ) {}\r\n}\r\n\r\nclass FieldCharacter {\r\n  public isAdded: boolean = false\r\n  constructor(\r\n    public character: Character,\r\n    public areaGridX: number,\r\n    public areaGridY: number,\r\n  ) {}\r\n}\r\n\r\nexport class Field extends PIXI.Container {\r\n  public bgLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  public airLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  public layerContainer!: SortableParticleContainer\r\n  public debugLayerContainer!: PIXI.Container\r\n  public horizontalGridNum = 200\r\n  public verticalGridNum = 200\r\n  public targetCharacter: Character | null = null\r\n  private fieldCharacters: Array<FieldCharacter> = []\r\n  private inSightArea: PIXI.Rectangle = new PIXI.Rectangle()\r\n  private walls: Array<PIXI.Rectangle> = []\r\n  private collisions: Array<Collosion> = []\r\n  private collisionsByArea: Map<string, Array<Collosion>> = new Map()\r\n  private fieldCharactersByArea: Map<string, Array<FieldCharacter>> = new Map()\r\n  private textureMap: Map<string, PIXI.Texture> = new Map()\r\n  private textureList: Array<PIXI.Texture> = []\r\n  private frameCount = 0\r\n  constructor(private texture: PIXI.Texture, private mapChipData: any, private mapData: any) {\r\n    super()\r\n\r\n    // 150,000チップ以上使えるようにする\r\n    PIXITilemap.Constant.use32bitIndex = true;\r\n\r\n    this.sortableChildren = true\r\n    this.bgLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true, rotation: true })\r\n    this.airLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.airLayerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n\r\n    this.generateMap()\r\n    this.inSightArea.width = Math.ceil(GAME_AREA_WIDTH / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) + 4\r\n    this.inSightArea.height = Math.ceil(GAME_AREA_HEIGHT / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) + 4\r\n    this.updateInSightArea()\r\n    this.on('added', () => {\r\n      // 親に追加されたときになにかやるならここで\r\n    })\r\n  }\r\n  public reloadMap(mapData: any) {\r\n    this.mapData = mapData\r\n    this.clearMap()\r\n    this.generateMap()\r\n  }\r\n  public clearMap() {\r\n    this.textureMap.forEach(value => value.destroy())\r\n    this.textureMap.clear()\r\n    this.bgLayerContainer.clear()\r\n    this.airLayerContainer.clear()\r\n    this.walls.length = 0\r\n  }\r\n  public generateMap() {\r\n    // まずは全てのチップをテクスチャ化\r\n    this.textureList.forEach(texture => texture.destroy())\r\n    this.textureList.length = 0\r\n\r\n    for (let gridY = 0, gridYCount = Math.floor(this.mapChipData.imageheight / this.mapChipData.tileheight); gridY < gridYCount; ++gridY) {\r\n      for (let gridX = 0, gridXCount = Math.floor(this.mapChipData.imagewidth / this.mapChipData.tilewidth); gridX < gridXCount; ++gridX) {\r\n        const texture = this.texture.clone()\r\n        texture.frame = new PIXI.Rectangle(\r\n          this.mapChipData.tilewidth * gridX,\r\n          this.mapChipData.tileheight * gridY,\r\n          this.mapChipData.tilewidth,\r\n          this.mapChipData.tileheight)\r\n        this.textureList.push(texture)\r\n      }\r\n    }\r\n    // チップを配置\r\n    {\r\n      this.horizontalGridNum = this.mapData.width\r\n      this.verticalGridNum = this.mapData.height\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const mapChipIndex = gridX + gridY * this.horizontalGridNum\r\n          // 下層、中層、上層地形\r\n          for (let layerIndex = 0; layerIndex < 3; ++layerIndex) {\r\n            const textureIndex = this.mapData.layers[layerIndex].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.bgLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 上空\r\n          {\r\n            const textureIndex = this.mapData.layers[3].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.airLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 衝突判定\r\n          {\r\n            // 衝突判定用チップの開始indexを取得しておく\r\n            const firstIndex = this.mapData.tilesets.filter((v: any) => v.source === 'collosion.json')[0].firstgid\r\n            const textureIndex = this.mapData.layers[4].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.collisions[gridY * this.horizontalGridNum + gridX] = new Collosion(\r\n                textureIndex - firstIndex,\r\n                gridX * this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight,\r\n                gridX * this.mapData.tilewidth + this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight + this.mapData.tileheight\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 衝突判定を4x4グリッド毎にエリア分け\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const collision = this.collisions[gridY * this.horizontalGridNum + gridX]\r\n          if (collision != null) {\r\n            const areaGridString = this.gridToAreaGrid(gridX, gridY).toString()\r\n            if (this.collisionsByArea.has(areaGridString)) {\r\n              this.collisionsByArea.get(areaGridString)!.push(collision)\r\n            } else {\r\n              this.collisionsByArea.set(areaGridString, [collision])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.log(`衝突判定のエリア分けの数:${this.collisionsByArea.size}`)\r\n    }\r\n  }\r\n  public setTargetCharacter(character: Character) {\r\n    this.targetCharacter = character\r\n  }\r\n  public addCharacter(character: Character, isTarget = false) {\r\n    const [areaGridX, areaGridY] = this.positionToAreaGrid(character.x, character.y)\r\n    const fieldCharacter = new FieldCharacter(character, areaGridX, areaGridY)\r\n    this.fieldCharacters.push(fieldCharacter)\r\n    this.addFieldCharacterToArea(fieldCharacter, areaGridX, areaGridY)\r\n    if (isTarget) {\r\n      this.setTargetCharacter(character)\r\n    }\r\n    character.update()\r\n    // 追加時に視界内かを判定して処理\r\n    if (this.isInSight(fieldCharacter)) {\r\n      character.onAddToField()\r\n      fieldCharacter.isAdded = true\r\n    }\r\n  }\r\n  public removeCharacter(character: Character) {\r\n    if (this.targetCharacter === character) {\r\n      this.targetCharacter = null\r\n    }\r\n    character.onRemoveFromField()\r\n    this.fieldCharacters = this.fieldCharacters.filter(fieldCharacter => {\r\n      if (fieldCharacter.character === character) {\r\n        this.removeFieldCharacterFromArea(fieldCharacter, fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  public update() {\r\n    // const t1 = performance.now()\r\n    const fieldCharacters = this.getInSightFieldCharacters()\r\n    // preUpdate\r\n    fieldCharacters.forEach(fieldCharacter => fieldCharacter.character.preUpdate())\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    fieldCharacters.forEach(fieldCharacter => {\r\n      if (fieldCharacter.character.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [fieldCharacter.character.preUpdateInfo.moveX, fieldCharacter.character.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0)) {\r\n          // キャラ\r\n          // const t1 = performance.now()\r\n          const [hitCharacter, hitDistanceRate] = this.hitOtherCaracter(fieldCharacter, moveX, moveY)\r\n          // t1sum += (performance.now() - t1)\r\n          if (hitCharacter) {\r\n            // キャラにめり込んだ分を戻す\r\n            moveX = (moveX - (moveX * hitDistanceRate))\r\n            moveY = (moveY - (moveY * hitDistanceRate))\r\n          }\r\n          // 地形\r\n          {\r\n            // const t2 = performance.now()\r\n            const [hit, excessX, excessY] = this.hitWall(fieldCharacter.character, moveX, moveY)\r\n            // t2sum += (performance.now() - t2)\r\n            // ぶつからなかった\r\n            if (!hit) {\r\n              fieldCharacter.character.x += moveX\r\n              fieldCharacter.character.y += moveY\r\n            }\r\n            // ぶつかった \r\n            else {\r\n              // 上下左右移動時は押し戻しに従う\r\n              if (excessX === 0 || excessY === 0) {\r\n                fieldCharacter.character.x += (moveX - excessX)\r\n                fieldCharacter.character.y += (moveY - excessY)\r\n              }\r\n              // 斜め移動時は片方のみの移動を試みる\r\n              else {\r\n                if (!this.hitWall(fieldCharacter.character, 0, moveY)[0]) {\r\n                  fieldCharacter.character.y += moveY\r\n                  fieldCharacter.character.x += (moveX - excessX) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n                else if (!this.hitWall(fieldCharacter.character, moveX, 0)[0]) {\r\n                  fieldCharacter.character.x += moveX\r\n                  fieldCharacter.character.y += (moveY - excessY) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        fieldCharacter.character.currentDirection = fieldCharacter.character.preUpdateInfo.nextDirection\r\n        fieldCharacter.character.preUpdateInfo = null\r\n\r\n        const [oldAreaGridX, oldAreaGridY] = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n        fieldCharacter.character.update()\r\n        ;[fieldCharacter.areaGridX, fieldCharacter.areaGridY] = this.positionToAreaGrid(fieldCharacter.character.x, fieldCharacter.character.y)\r\n        // キャラの所属AreaGridの変更検知\r\n        if (fieldCharacter.areaGridX !== oldAreaGridX || fieldCharacter.areaGridY !== oldAreaGridY) {\r\n          this.removeFieldCharacterFromArea(fieldCharacter, oldAreaGridX, oldAreaGridY)\r\n          this.addFieldCharacterToArea(fieldCharacter,fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n          // 視界外になったら非表示\r\n          if (!this.isInSight(fieldCharacter)) {\r\n            fieldCharacter.character.onRemoveFromField()\r\n            fieldCharacter.isAdded = false\r\n          }\r\n        }\r\n        // console.log(`キャラの所属AreaGrid(${fieldCharacter.areaGridX}, ${fieldCharacter.areaGridY})`)\r\n      } else {\r\n        fieldCharacter.character.update()\r\n      }\r\n    })\r\n\r\n    // 視点移動\r\n    const rightLimitX = GAME_AREA_WIDTH - SIGHT_MOVE_X\r\n    const leftLimitX = SIGHT_MOVE_X\r\n    const bottomLimitY = GAME_AREA_HEIGHT - SIGHT_MOVE_Y\r\n    const topLimitY = SIGHT_MOVE_Y\r\n    if (this.targetCharacter) {\r\n      const offsetX = this.targetCharacter.x + this.x\r\n      if (offsetX > rightLimitX) {\r\n        this.x = -(this.targetCharacter.x - rightLimitX)\r\n      }\r\n      else if (offsetX < leftLimitX) {\r\n        this.x = -(this.targetCharacter.x - leftLimitX)\r\n      }\r\n      const offsetY = this.targetCharacter.y + this.y\r\n      if (offsetY > bottomLimitY) {\r\n        this.y = -(this.targetCharacter.y - bottomLimitY)\r\n      }\r\n      else if (offsetY < topLimitY) {\r\n        this.y = -(this.targetCharacter.y - topLimitY)\r\n      }\r\n      const [oldInSightAreaX, oldInSightAreaY] = [this.inSightArea.x, this.inSightArea.y]\r\n      this.updateInSightArea()\r\n      // 視界外になった領域のキャラを非表示に、視界内になった領域のキャラを表示に\r\n      const movedAreaX = this.inSightArea.x - oldInSightAreaX\r\n      const movedAreaY = this.inSightArea.y - oldInSightAreaY\r\n      this.updateCharacterVisibilityByMovedAreaOffset(movedAreaX, movedAreaY)\r\n    }\r\n    this.x = Math.floor(Math.min(0, Math.max(-(this.mapData.tilewidth * this.horizontalGridNum - GAME_AREA_WIDTH), this.x)))\r\n    this.y = Math.floor(Math.min(0, Math.max(-(this.mapData.tileheight * this.verticalGridNum - GAME_AREA_HEIGHT), this.y)))\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n\r\n    // if (this.frameCount % 200 === 0) {\r\n      // console.log(`${performance.now() - t1}`)\r\n    // }\r\n    ++ this.frameCount\r\n\r\n  }\r\n  // 他キャラとの衝突判定\r\n  private hitOtherCaracter(targetFieldCharacter: FieldCharacter, offsetX: number, offsetY: number): [boolean, number] {\r\n    const targetCircle = targetFieldCharacter.character.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    let hitDistance = 0\r\n    const otherFieldCharacters = this.getOtherFieldCharactersByAreaGrid(targetFieldCharacter)\r\n    // const otherFieldCharacters = this.fieldCharacters.filter(fieldCharacter => targetFieldCharacter != fieldCharacter)\r\n    // console.log(otherFieldCharacters.length)\r\n    const hit = otherFieldCharacters.some(fieldCharacter => {\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, fieldCharacter.character.hitCircle.x, fieldCharacter.character.hitCircle.y]\r\n      // めり込んだ距離(の2乗)\r\n      hitDistance = (targetCircle.radius + fieldCharacter.character.hitCircle.radius) - Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n      const hit = hitDistance >= 0\r\n      return hit\r\n    })\r\n    return [hit, hit ? hitDistance / Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)) : 0]\r\n  }\r\n  public hitWall(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number, number] {\r\n    const areaGrid = this.positionToAreaGrid(targetCharacter.x, targetCharacter.y)\r\n    const collisions = this.getCollisionsByAreaGrid(areaGrid)\r\n    // const collisions = this.collisions\r\n    // console.log(collisions.length)\r\n\r\n    const targetRect = targetCharacter.hitRect.clone()\r\n    targetRect.x += offsetX\r\n    targetRect.y += offsetY\r\n    let excessX = 0 // めり込んだ量X\r\n    let excessY = 0 // めり込んだ量Y\r\n\r\n    // そのキャラの周辺のcollisionを抽出\r\n    const hit = collisions.some(collision => {\r\n      const hHit = targetRect.left < collision.right && targetRect.right > collision.left\r\n      const vHit = targetRect.top < collision.bottom && targetRect.bottom > collision.top\r\n      const hit = hHit && vHit\r\n      // 衝突した場合はめり込み量計算\r\n      if (hit) {\r\n        if (offsetX < 0) {\r\n          excessX = targetRect.left - collision.right\r\n        } else if (offsetX > 0) {\r\n          excessX = targetRect.right - collision.left\r\n        }\r\n        if (offsetY < 0) {\r\n          excessY = targetRect.top - collision.bottom\r\n        } else if (offsetY > 0) {\r\n          excessY = targetRect.bottom - collision.top\r\n        }\r\n      }\r\n      return hit\r\n    })\r\n    return [hit, excessX, excessY]\r\n  }\r\n  private getOtherFieldCharactersByAreaGrid(fieldCharacter: FieldCharacter) {\r\n    const otherFieldCharacters: Array<FieldCharacter> = []\r\n    const areaGrid = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.fieldCharactersByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(otherFieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return otherFieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter)\r\n  }\r\n  private getCollisionsByAreaGrid(areaGrid: Array<number>): Array<Collosion> {\r\n    const collisions: Array<Collosion> = []\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.collisionsByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(collisions, this.collisionsByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return collisions\r\n  }\r\n  private addFieldCharacterToArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    if (this.fieldCharactersByArea.has(areaGridString)) {\r\n      this.fieldCharactersByArea.get(areaGridString)!.push(fieldCharacter)\r\n    } else {\r\n      this.fieldCharactersByArea.set(areaGridString, [fieldCharacter])\r\n    }\r\n  }\r\n  private removeFieldCharacterFromArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    const fieldCharacters = this.fieldCharactersByArea.get(areaGridString)!\r\n    this.fieldCharactersByArea.set(areaGridString, fieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter))\r\n  }\r\n  private gridToAreaGrid(gridX: number, gridY: number) {\r\n    return [Math.floor(gridX / AREA_DIVIDE_GRID_NUM), Math.floor(gridY / AREA_DIVIDE_GRID_NUM)]\r\n  }\r\n  private positionToAreaGrid(x: number, y: number) {\r\n    return [Math.floor(x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)), Math.floor(y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight))]\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n  }\r\n  // 視界内のキャラクター一覧取得\r\n  private getInSightFieldCharacters(): Array<FieldCharacter> {\r\n    const fieldCharacters: Array<FieldCharacter> = []\r\n    for (let areaGridY = this.inSightArea.top; areaGridY <= this.inSightArea.bottom; ++areaGridY) {\r\n      for (let areaGridX = this.inSightArea.left; areaGridX <= this.inSightArea.right; ++areaGridX) {\r\n        const areaGridString = [areaGridX, areaGridY].toString()\r\n        if (this.fieldCharactersByArea.has(areaGridString)) {\r\n          Array.prototype.push.apply(fieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n        }\r\n      }\r\n    }\r\n    return fieldCharacters\r\n  }\r\n  private updateInSightArea() {\r\n    this.inSightArea.x = Math.max(0, -Math.floor(this.x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) - 2)\r\n    this.inSightArea.y = Math.max(0, -Math.floor(this.y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) - 2)\r\n  }\r\n  private isInSight(fieldCharacter: FieldCharacter): boolean {\r\n    return fieldCharacter.areaGridX >= this.inSightArea.left && fieldCharacter.areaGridX <= this.inSightArea.right && fieldCharacter.areaGridY >= this.inSightArea.top && fieldCharacter.areaGridY <= this.inSightArea.bottom \r\n  }\r\n  private updateCharacterVisibilityByMovedAreaOffset(movedAreaX: number, movedAreaY: number) {\r\n    if (movedAreaX !== 0) {\r\n      // 横方向で視界内になったキャラを表示\r\n      {\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.right - movedAreaX) + 1 : this.inSightArea.left\r\n        let endX = movedAreaX > 0 ? this.inSightArea.right : (this.inSightArea.left - movedAreaX) - 1\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onAddToField()\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 横方向で視界外になったキャラを非表示\r\n      {\r\n        console.log(`movedAreaX = ${movedAreaX}`)\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.left - movedAreaX) : this.inSightArea.right + 1\r\n        let endX = movedAreaX > 0 ? this.inSightArea.left - 1 : (this.inSightArea.right - movedAreaX)\r\n        console.log(`startX: ${startX}, endX: ${endX}`)\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            console.log(areaGridString)\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onRemoveFromField()\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (movedAreaY !== 0) {\r\n      // 縦方向で視界内になったキャラを表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.bottom - movedAreaY) + 1 : this.inSightArea.top\r\n        let endY = movedAreaY > 0 ? this.inSightArea.bottom : (this.inSightArea.top - movedAreaY) - 1\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onAddToField()\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 縦方向で視界外になったキャラを非表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.top - movedAreaY) : this.inSightArea.bottom + 1\r\n        let endY = movedAreaY > 0 ? this.inSightArea.top - 1 : (this.inSightArea.bottom - movedAreaY)\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  fieldCharacter.character.onRemoveFromField()\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 高速歩きで壁にぶつかった場合、移動しないのではなくx, yについて移動できるところまで戻してあげる。\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine, TextureInfo, Weapon } from '@/stages/015/Character'\r\nimport { Field } from '@/stages/015/Field'\r\nimport InputManager from '@/stages/014/InputManager'\r\n\r\nclass FpsCounter {\r\n  private ms = 0\r\n  private counter = 0\r\n  public averageMs = 0\r\n  constructor(private oldNow = performance.now()) {}\r\n  public checkPoint() {\r\n    const now = performance.now()\r\n    this.ms += (now - this.oldNow)\r\n    this.oldNow = now\r\n    ++this.counter\r\n    if (this.counter >= 60) {\r\n      this.averageMs = this.ms / this.counter\r\n      this.counter = 0\r\n      this.ms = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    renderTexture: PIXI.RenderTexture | null;\r\n    field: Field | null;\r\n    inputManager: InputManager;\r\n    fpsCounter: FpsCounter;\r\n    characters: Array<Character>;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      renderTexture: null,\r\n      field: null,\r\n      inputManager: new InputManager(),\r\n      fpsCounter: new FpsCounter(),\r\n      characters: [],\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n    // PIXI.settings.TARGET_FPMS = 1\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const opt = { \r\n      width: 640,\r\n      height: 480,\r\n      autoDensity: true\r\n    }\r\n    this.pixiApp = new PIXI.Application(opt)\r\n    this.pixiApp.ticker.maxFPS = 60\r\n    this.pixiApp.ticker.minFPS = 60\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/014/chara01.png\")\r\n      .add(\"/arpg-sample/images/stages/014/chara02.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-blue.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-red.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-yellow.png\")\r\n      .add(\"/arpg-sample/images/stages/015/sword.png\")\r\n      .add(\"/arpg-sample/images/stages/015/knife.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.json\")\r\n      .add(\"/arpg-sample/images/stages/013/map01.json\")\r\n      .load(() => {\r\n\r\n        // RenderTextureに必要な画像すべてを描き込む\r\n        this.renderTexture = PIXI.RenderTexture.create({ width: 1024, height: 1024 })\r\n        const renderSprite = PIXI.Sprite.from(this.renderTexture)\r\n\r\n        // mapchipを描き込む\r\n        const spriteMapChip = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.png\"].texture)\r\n        this.pixiApp!.renderer.render(spriteMapChip, this.renderTexture, false)\r\n        // chara01を書き込む\r\n        const sprite01 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara01.png\"].texture)\r\n        sprite01.position.set(256, 0)\r\n        this.pixiApp!.renderer.render(sprite01, this.renderTexture, false)\r\n        // chara02を書き込む\r\n        const sprite02 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara02.png\"].texture)\r\n        sprite02.position.set(256 + 192, 0)\r\n        this.pixiApp!.renderer.render(sprite02, this.renderTexture, false)\r\n        // slimeを書き込む\r\n        const sprite03 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-blue.png\"].texture)\r\n        sprite03.position.set(256 + 192 * 2, 0)\r\n        this.pixiApp!.renderer.render(sprite03, this.renderTexture, false)\r\n\r\n        const sprite04 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-red.png\"].texture)\r\n        sprite04.position.set(256 + 192 * 2, 32)\r\n        this.pixiApp!.renderer.render(sprite04, this.renderTexture, false)\r\n\r\n        const sprite05 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-yellow.png\"].texture)\r\n        sprite05.position.set(256 + 192 * 2, 64)\r\n        this.pixiApp!.renderer.render(sprite05, this.renderTexture, false)\r\n\r\n        // Knifeを書き込む\r\n        const spriteKnife = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/015/knife.png\"].texture)\r\n        spriteKnife.position.set(256 + 192 * 2, 96)\r\n        this.pixiApp!.renderer.render(spriteKnife, this.renderTexture, false)\r\n\r\n        const spriteSword = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/015/sword.png\"].texture)\r\n        spriteSword.position.set(256 + 192 * 2, 96 + 64)\r\n        this.pixiApp!.renderer.render(spriteSword, this.renderTexture, false)\r\n\r\n        // フィールド\r\n        this.field = new Field(\r\n          this.renderTexture,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.json\"].data,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/map01.json\"].data)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n\r\n        // NPC\r\n        this.generateCharacter(0)\r\n        this.generateCharacter(1)\r\n        this.generateCharacter(2)\r\n        this.generateCharacter(3)\r\n        this.generateCharacter(4)\r\n        this.field!.setTargetCharacter(this.characters[0])\r\n        // this.characters[0].weapon = new Weapon(new TextureInfo(this.renderTexture, new PIXI.Point(256 + 192 * 2, 96), 64, 64, 1))\r\n        this.characters[0].weapon = new Weapon(new TextureInfo(this.renderTexture, new PIXI.Point(256 + 192 * 2, 96), 64, 64, 1))\r\n        this.characters[1].weapon = new Weapon(new TextureInfo(this.renderTexture, new PIXI.Point(256 + 192 * 2, 96 + 64), 64, 64, 1))\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.inputManager.onKeyDown(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.inputManager.onKeyUp(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      this.fpsCounter.checkPoint()\r\n      // Spaceキーでキャラ切り替え\r\n      if (this.inputManager.isReleased(32)) {\r\n        this.toggleCharacter()\r\n      }\r\n      // 1キーでデバッグ表示切り替え\r\n      if (this.inputManager.isReleased(49)) {\r\n        this.onClickToggleDebugMode()\r\n      }\r\n      // DELキーでキャラ削除\r\n      if (this.inputManager.isReleased(46)) {\r\n        this.characters = this.characters.filter(character => character !== this.field!.targetCharacter!)\r\n        this.field!.removeCharacter(this.field!.targetCharacter!)\r\n        if (this.characters.length > 0) {\r\n          this.toggleCharacter()\r\n        }\r\n      }\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n      this.inputManager.endTurn()\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    },\r\n    isFocusedCharacter(character: Character) {\r\n      return this.field!.targetCharacter === character\r\n    },\r\n    onClickCharacterCell(character: Character) {\r\n      this.field!.setTargetCharacter(character)\r\n    },\r\n    onClickDeleteCharacter(character: Character) {\r\n      this.characters = this.characters.filter(v => v !== character)\r\n      this.field!.removeCharacter(character)\r\n    },\r\n    generateCharacter(type: number) {\r\n      let textureOffset: PIXI.Point | null = null\r\n      let [width, height, directionNum] = [0, 0, 0]\r\n      switch(type) {\r\n        case 0:\r\n        case 1:\r\n          width = 32\r\n          height = 64\r\n          directionNum = 8\r\n          break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n          width = 32\r\n          height = 32\r\n          directionNum = 1\r\n          break;\r\n      }\r\n      switch(type) {\r\n        case 0:\r\n          textureOffset = new PIXI.Point(256, 0)\r\n          break;\r\n        case 1:\r\n          textureOffset = new PIXI.Point(256 + 192, 0)\r\n          break;\r\n        case 2:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 0)\r\n          break;\r\n        case 3:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 32)\r\n          break;\r\n        case 4:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 64)\r\n          break;\r\n      }\r\n\r\n      const character = new Character(new TextureInfo(this.renderTexture!, textureOffset!, width, height, directionNum), this.field!)\r\n      character.routine = (type === 0) ? new PlayerRoutine(this.inputManager) : new UroUroRoutine()\r\n      character.currentDirection = 4\r\n      for(;;) {\r\n        character.x = 32 + 16 * Math.floor(Math.random() * (this.field!.horizontalGridNum - 4))\r\n        character.y = 32 + 16 * Math.floor(Math.random() * (this.field!.verticalGridNum - 4))\r\n        this.field!.addCharacter(character, false)\r\n        const [hit, x, y] = this.field!.hitWall(character, 0, 0)\r\n        if (!hit) {\r\n          break;\r\n        } else {\r\n          this.field!.removeCharacter(character)\r\n          console.log(hit)\r\n        }\r\n      }\r\n      this.characters.push(character)\r\n      ;(character as any).type = type\r\n    },\r\n    toggleCharacter() {\r\n        let index = 0\r\n        this.characters.forEach((v, i) => {\r\n          if (v === this.field!.targetCharacter) {\r\n            index = i\r\n          }\r\n        })\r\n        const nextIndex = (index + 1) % this.characters.length\r\n        const oldCharacter = this.characters[index]\r\n        const newCharacter = this.characters[nextIndex]\r\n        oldCharacter.routine = new UroUroRoutine()\r\n        newCharacter.routine = new PlayerRoutine(this.inputManager)\r\n        this.field!.setTargetCharacter(newCharacter)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {\r\n  },\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=61311f8e&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./View.vue?vue&type=style&index=0&id=61311f8e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61311f8e\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}