{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/stages/013/components/CharacterCell.vue?5f46","webpack:///./src/stages/013/View.vue?5b00","webpack:///./src/stages/013/View.vue?5520","webpack:///./src/stages/013/Character.ts","webpack:///./src/stages/013/Field.ts","webpack:///./src/stages/013/components/CharacterCell.vue?e86d","webpack:///./src/stages/013/components/CharacterCell.vue?4307","webpack:///./src/stages/013/components/CharacterCell.vue?88e1","webpack:///./src/stages/013/components/CharacterCell.vue","webpack:///./src/stages/013/View.vue?de2b","webpack:///./src/stages/013/View.vue?508a","webpack:///./src/stages/013/View.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js"],"names":["$","$some","some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","collection","collectionStrong","module","exports","init","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","on","$event","generateCharacter","attrs","_l","character","index","key","isFocusedCharacter","onClickCharacterCell","onClickDeleteCharacter","ref","_v","_s","fpsCounter","averageMs","toFixed","staticRenderFns","moveX","moveY","nextDirection","texture","textureOffset","routine","x","y","hitCircle","hitRect","animationFrame","_currentDirection","preUpdateInfo","animationStep","bodySprite","SortableSprite","baseTexture","anchor","set","shadowTexture","shadowSprite","alpha","debugCircle","lineStyle","drawCircle","debugRect","drawRect","width","height","value","syncTexture","offsetX","offsetY","currentDirection","frame","preUpdate","zOrder","position","calcMoveXY","direction","speed","slantSpeed","isMoving","frameCountToWait","frameCountToMove","Math","floor","random","AREA_DIVIDE_GRID_NUM","GAME_AREA_WIDTH","GAME_AREA_HEIGHT","SIGHT_MOVE_X","SIGHT_MOVE_Y","type","left","top","right","bottom","areaGridX","areaGridY","isAdded","mapChipData","mapData","horizontalGridNum","verticalGridNum","targetCharacter","fieldCharacters","inSightArea","targetArrow","walls","collisions","collisionsByArea","Map","fieldCharactersByArea","textureMap","textureList","frameCount","use32bitIndex","sortableChildren","bgLayerContainer","layerContainer","SortableParticleContainer","uvs","vertices","tint","airLayerContainer","debugLayerContainer","visible","addChild","arrowTexture","clone","generateMap","ceil","tilewidth","tileheight","updateInSightArea","clearMap","forEach","destroy","clear","gridY","gridYCount","imageheight","gridX","gridXCount","imagewidth","push","mapChipIndex","layerIndex","textureIndex","layers","data","addFrame","firstIndex","tilesets","v","source","firstgid","collision","areaGridString","gridToAreaGrid","toString","has","get","isTarget","positionToAreaGrid","fieldCharacter","addFieldCharacterToArea","setTargetCharacter","update","isInSight","removeChild","removeFieldCharacterFromArea","getInSightFieldCharacters","hitOtherCaracter","hitCharacter","hitDistanceRate","hitWall","hit","excessX","excessY","oldAreaGridX","oldAreaGridY","rightLimitX","leftLimitX","bottomLimitY","topLimitY","oldInSightAreaX","oldInSightAreaY","movedAreaX","movedAreaY","updateCharacterVisibilityByMovedAreaOffset","min","max","sortChildren","targetFieldCharacter","targetCircle","hitDistance","otherFieldCharacters","getOtherFieldCharactersByAreaGrid","x1","y1","x2","y2","radius","sqrt","pow","areaGrid","getCollisionsByAreaGrid","targetRect","hHit","vHit","areaGridStrings","Array","prototype","apply","fieldCharacter2","flag","startX","endX","areaX","areaY","console","log","startY","endY","class","focused","$emit","stopPropagation","extend","props","methods","onShow","onHide","component","oldNow","performance","now","ms","counter","pixiApp","renderTexture","field","pressedKeyCodeSet","Set","characters","isDebugMode","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","opt","autoDensity","ticker","maxFPS","minFPS","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","add","load","create","from","spriteMapChip","resources","renderer","sprite01","sprite02","i","event","keyCode","delta","checkPoint","onClickToggleDebugMode","setDebugMode","removeCharacter","addCharacter","beforeDestroy","components","CharacterCell","computed","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","arg","k","len","E","A","n","TypeError"],"mappings":"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","file":"js/chunk-2306fe73.c1637de0.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CharacterCell.vue?vue&type=style&index=0&id=0aaf4441&scoped=true&lang=scss&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=style&index=0&id=fa13033c&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"root\"},[_c('div',{staticClass:\"left-pane\"},[_c('div',{staticClass:\"add-button-area\"},[_c('b-button',{staticStyle:{\"margin\":\"4px\"},on:{\"click\":function($event){return _vm.generateCharacter(0)}}},[_c('img',{attrs:{\"src\":\"/arpg-sample/images/stages/013/chara1-icon.png\"}})]),_c('b-button',{staticStyle:{\"margin\":\"4px\"},on:{\"click\":function($event){return _vm.generateCharacter(1)}}},[_c('img',{attrs:{\"src\":\"/arpg-sample/images/stages/013/chara2-icon.png\"}})])],1),_c('div',{staticClass:\"character-area\"},_vm._l((_vm.characters),function(character,index){return _c('div',{key:index},[_c('CharacterCell',{attrs:{\"character\":character,\"focused\":_vm.isFocusedCharacter(character)},on:{\"click\":function($event){return _vm.onClickCharacterCell(character)},\"delete\":function($event){return _vm.onClickDeleteCharacter(character)}}})],1)}),0)]),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\"}}),(true)?_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"4px\",\"top\":\"4px\",\"color\":\"#fff\"}},[_vm._v(_vm._s((1000 / _vm.fpsCounter.averageMs).toFixed(2))+\" fps\")]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  public hitRect: PIXI.Rectangle = new PIXI.Rectangle(-12, -12, 24, 24)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: SortableSprite\r\n  public debugCircle!: PIXI.Graphics\r\n  public debugRect!: PIXI.Graphics\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  private animationStep = 0\r\n  constructor(texture: PIXI.Texture, private textureOffset: PIXI.Point, public routine: BaseRoutine) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(textureOffset.x, textureOffset.y, 32, 64))\r\n    routine.character = this\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(224, 0, 32, 32))\r\n    this.shadowSprite = new SortableSprite()\r\n    this.shadowSprite.texture = shadowTexture\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.alpha = 0.7\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n    this.debugRect = new PIXI.Graphics()\r\n    this.debugRect.lineStyle(2, 0x5555FF, 1)\r\n    this.debugRect.alpha = 0.7\r\n    this.debugRect.drawRect(this.hitRect.x, this.hitRect.y, this.hitRect.width, this.hitRect.height)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    switch(this.currentDirection) {\r\n      case 1:\r\n        offsetX = 96\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        offsetX = 96\r\n        offsetY = 64\r\n        break;\r\n      case 4:\r\n        offsetY = 64\r\n        break;\r\n      case 6:\r\n        offsetY = 128\r\n        break;\r\n      case 7:\r\n        offsetX = 96\r\n        offsetY = 128\r\n        break;\r\n      case 8:\r\n        offsetY = 192\r\n        break;\r\n      case 9:\r\n        offsetX = 96\r\n        offsetY = 192\r\n        break;\r\n    }\r\n\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * 32\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureOffset.x + offsetX,\r\n      this.textureOffset.y + offsetY,\r\n      32,\r\n      64\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    this.routine.preUpdate()\r\n  }\r\n  public update() {\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    ;[this.hitRect.x, this.hitRect.y] = [this.x - 12, this.y - 12]\r\n    ;[this.debugRect.x, this.debugRect.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.shadowSprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private pressedKeyCodeSet: Set<number>) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    let direction: number | null = null \r\n    // 向き取得\r\n    if (this.pressedKeyCodeSet.has(KEY_CODE_LEFT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 1\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 7\r\n      } else {\r\n        direction = 4\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_RIGHT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 3\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 9\r\n      } else {\r\n        direction = 6\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n      direction = 8\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n      direction = 2\r\n    }\r\n    // 向かせたり歩かせたり\r\n    if (direction != null) {\r\n      const [moveX, moveY] = calcMoveXY(direction, 3)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 1)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}","import { Character } from '@/stages/013/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport * as PIXITilemap from '@/pixi-tilemap/index'\r\n\r\nconst AREA_DIVIDE_GRID_NUM = 3\r\nconst GAME_AREA_WIDTH = 640\r\nconst GAME_AREA_HEIGHT = 480\r\nconst SIGHT_MOVE_X = GAME_AREA_WIDTH / 3\r\nconst SIGHT_MOVE_Y = GAME_AREA_HEIGHT / 3\r\n\r\nclass Collosion {\r\n  constructor(\r\n    public type: number,\r\n    public left: number,\r\n    public top: number,\r\n    public right: number,\r\n    public bottom: number\r\n  ) {}\r\n}\r\n\r\nclass FieldCharacter {\r\n  public isAdded: boolean = false\r\n  constructor(\r\n    public character: Character,\r\n    public areaGridX: number,\r\n    public areaGridY: number,\r\n  ) {}\r\n}\r\n\r\nexport class Field extends PIXI.Container {\r\n  private bgLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private airLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private layerContainer!: SortableParticleContainer\r\n  private debugLayerContainer!: PIXI.Container\r\n  public horizontalGridNum = 200\r\n  public verticalGridNum = 200\r\n  public targetCharacter: Character | null = null\r\n  private fieldCharacters: Array<FieldCharacter> = []\r\n  private inSightArea: PIXI.Rectangle = new PIXI.Rectangle()\r\n  private targetArrow: PIXI.Sprite | null = null\r\n  private walls: Array<PIXI.Rectangle> = []\r\n  private collisions: Array<Collosion> = []\r\n  private collisionsByArea: Map<string, Array<Collosion>> = new Map()\r\n  private fieldCharactersByArea: Map<string, Array<FieldCharacter>> = new Map()\r\n  private textureMap: Map<string, PIXI.Texture> = new Map()\r\n  private textureList: Array<PIXI.Texture> = []\r\n  private frameCount = 0\r\n  constructor(private texture: PIXI.Texture, private mapChipData: any, private mapData: any) {\r\n    super()\r\n\r\n    // 150,000チップ以上使えるようにする\r\n    PIXITilemap.Constant.use32bitIndex = true;\r\n\r\n    this.sortableChildren = true\r\n    this.bgLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true })\r\n    this.airLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.airLayerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n\r\n    // 矢印\r\n    {\r\n      const arrowTexture = this.texture.clone()\r\n      arrowTexture.frame = new PIXI.Rectangle(224, 32, 16, 16)\r\n      this.targetArrow = new PIXI.Sprite(arrowTexture)\r\n      this.targetArrow.anchor.set(0.5, 0.5)\r\n      this.targetArrow.alpha = 0\r\n      this.layerContainer.addChild(this.targetArrow!)\r\n    }\r\n\r\n    this.generateMap()\r\n    this.inSightArea.width = Math.ceil(GAME_AREA_WIDTH / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) + 4\r\n    this.inSightArea.height = Math.ceil(GAME_AREA_HEIGHT / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) + 4\r\n    this.updateInSightArea()\r\n    this.on('added', () => {\r\n      // 親に追加されたときになにかやるならここで\r\n    })\r\n  }\r\n  public reloadMap(mapData: any) {\r\n    this.mapData = mapData\r\n    this.clearMap()\r\n    this.generateMap()\r\n  }\r\n  public clearMap() {\r\n    this.textureMap.forEach(value => value.destroy())\r\n    this.textureMap.clear()\r\n    this.bgLayerContainer.clear()\r\n    this.airLayerContainer.clear()\r\n    this.walls.length = 0\r\n  }\r\n  public generateMap() {\r\n    // まずは全てのチップをテクスチャ化\r\n    this.textureList.forEach(texture => texture.destroy())\r\n    this.textureList.length = 0\r\n\r\n    for (let gridY = 0, gridYCount = Math.floor(this.mapChipData.imageheight / this.mapChipData.tileheight); gridY < gridYCount; ++gridY) {\r\n      for (let gridX = 0, gridXCount = Math.floor(this.mapChipData.imagewidth / this.mapChipData.tilewidth); gridX < gridXCount; ++gridX) {\r\n        const texture = this.texture.clone()\r\n        texture.frame = new PIXI.Rectangle(\r\n          this.mapChipData.tilewidth * gridX,\r\n          this.mapChipData.tileheight * gridY,\r\n          this.mapChipData.tilewidth,\r\n          this.mapChipData.tileheight)\r\n        this.textureList.push(texture)\r\n      }\r\n    }\r\n    // チップを配置\r\n    {\r\n      this.horizontalGridNum = this.mapData.width\r\n      this.verticalGridNum = this.mapData.height\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const mapChipIndex = gridX + gridY * this.horizontalGridNum\r\n          // 下層、中層、上層地形\r\n          for (let layerIndex = 0; layerIndex < 3; ++layerIndex) {\r\n            const textureIndex = this.mapData.layers[layerIndex].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.bgLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 上空\r\n          {\r\n            const textureIndex = this.mapData.layers[3].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.airLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 衝突判定\r\n          {\r\n            // 衝突判定用チップの開始indexを取得しておく\r\n            const firstIndex = this.mapData.tilesets.filter((v: any) => v.source === 'collosion.json')[0].firstgid\r\n            const textureIndex = this.mapData.layers[4].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.collisions[gridY * this.horizontalGridNum + gridX] = new Collosion(\r\n                textureIndex - firstIndex,\r\n                gridX * this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight,\r\n                gridX * this.mapData.tilewidth + this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight + this.mapData.tileheight\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 衝突判定を4x4グリッド毎にエリア分け\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const collision = this.collisions[gridY * this.horizontalGridNum + gridX]\r\n          if (collision != null) {\r\n            const areaGridString = this.gridToAreaGrid(gridX, gridY).toString()\r\n            if (this.collisionsByArea.has(areaGridString)) {\r\n              this.collisionsByArea.get(areaGridString)!.push(collision)\r\n            } else {\r\n              this.collisionsByArea.set(areaGridString, [collision])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.log(`衝突判定のエリア分けの数:${this.collisionsByArea.size}`)\r\n    }\r\n  }\r\n  public setTargetCharacter(character: Character) {\r\n    this.targetCharacter = character\r\n    this.targetArrow!.alpha = 1\r\n  }\r\n  public addCharacter(character: Character, isTarget = false) {\r\n    const [areaGridX, areaGridY] = this.positionToAreaGrid(character.x, character.y)\r\n    const fieldCharacter = new FieldCharacter(character, areaGridX, areaGridY)\r\n    this.fieldCharacters.push(fieldCharacter)\r\n    this.addFieldCharacterToArea(fieldCharacter, areaGridX, areaGridY)\r\n    if (isTarget) {\r\n      this.setTargetCharacter(character)\r\n    }\r\n    character.update()\r\n    this.debugLayerContainer.addChild(character.debugCircle)\r\n    this.debugLayerContainer.addChild(character.debugRect)\r\n    // TODO:追加時に視界内かを判定して処理\r\n    if (this.isInSight(fieldCharacter)) {\r\n      this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n      this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n      fieldCharacter.isAdded = true\r\n    }\r\n  }\r\n  public removeCharacter(character: Character) {\r\n    if (this.targetCharacter === character) {\r\n      this.targetCharacter = null\r\n      this.targetArrow!.alpha = 0\r\n    }\r\n    this.debugLayerContainer.removeChild(character.debugCircle)\r\n    this.debugLayerContainer.removeChild(character.debugRect)\r\n    this.layerContainer.removeChild(character.shadowSprite)\r\n    this.layerContainer.removeChild(character.bodySprite)\r\n    this.fieldCharacters = this.fieldCharacters.filter(fieldCharacter => {\r\n      if (fieldCharacter.character === character) {\r\n        this.removeFieldCharacterFromArea(fieldCharacter, fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  public update() {\r\n    // const t1 = performance.now()\r\n    const fieldCharacters = this.getInSightFieldCharacters()\r\n    // preUpdate\r\n    fieldCharacters.forEach(fieldCharacter => fieldCharacter.character.preUpdate())\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    fieldCharacters.forEach(fieldCharacter => {\r\n      if (fieldCharacter.character.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [fieldCharacter.character.preUpdateInfo.moveX, fieldCharacter.character.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0)) {\r\n          // キャラ\r\n          // const t1 = performance.now()\r\n          const [hitCharacter, hitDistanceRate] = this.hitOtherCaracter(fieldCharacter, moveX, moveY)\r\n          // t1sum += (performance.now() - t1)\r\n          if (hitCharacter) {\r\n            // キャラにめり込んだ分を戻す\r\n            moveX = (moveX - (moveX * hitDistanceRate))\r\n            moveY = (moveY - (moveY * hitDistanceRate))\r\n          }\r\n          // 地形\r\n          {\r\n            // const t2 = performance.now()\r\n            const [hit, excessX, excessY] = this.hitWall(fieldCharacter.character, moveX, moveY)\r\n            // t2sum += (performance.now() - t2)\r\n            // ぶつからなかった\r\n            if (!hit) {\r\n              fieldCharacter.character.x += moveX\r\n              fieldCharacter.character.y += moveY\r\n            }\r\n            // ぶつかった \r\n            else {\r\n              // 上下左右移動時は押し戻しに従う\r\n              if (excessX === 0 || excessY === 0) {\r\n                fieldCharacter.character.x += (moveX - excessX)\r\n                fieldCharacter.character.y += (moveY - excessY)\r\n              }\r\n              // 斜め移動時は片方のみの移動を試みる\r\n              else {\r\n                if (!this.hitWall(fieldCharacter.character, 0, moveY)[0]) {\r\n                  fieldCharacter.character.y += moveY\r\n                  fieldCharacter.character.x += (moveX - excessX) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n                else if (!this.hitWall(fieldCharacter.character, moveX, 0)[0]) {\r\n                  fieldCharacter.character.x += moveX\r\n                  fieldCharacter.character.y += (moveY - excessY) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        fieldCharacter.character.currentDirection = fieldCharacter.character.preUpdateInfo.nextDirection\r\n        fieldCharacter.character.preUpdateInfo = null\r\n\r\n        const [oldAreaGridX, oldAreaGridY] = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n        fieldCharacter.character.update()\r\n        ;[fieldCharacter.areaGridX, fieldCharacter.areaGridY] = this.positionToAreaGrid(fieldCharacter.character.x, fieldCharacter.character.y)\r\n        // キャラの所属AreaGridの変更検知\r\n        if (fieldCharacter.areaGridX !== oldAreaGridX || fieldCharacter.areaGridY !== oldAreaGridY) {\r\n          this.removeFieldCharacterFromArea(fieldCharacter, oldAreaGridX, oldAreaGridY)\r\n          this.addFieldCharacterToArea(fieldCharacter,fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n          // 視界外になったら非表示\r\n          if (!this.isInSight(fieldCharacter)) {\r\n            this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n            this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n            fieldCharacter.isAdded = false\r\n          }\r\n        }\r\n        // console.log(`キャラの所属AreaGrid(${fieldCharacter.areaGridX}, ${fieldCharacter.areaGridY})`)\r\n      } else {\r\n        fieldCharacter.character.update()\r\n      }\r\n    })\r\n\r\n    // 視点移動\r\n    const rightLimitX = GAME_AREA_WIDTH - SIGHT_MOVE_X\r\n    const leftLimitX = SIGHT_MOVE_X\r\n    const bottomLimitY = GAME_AREA_HEIGHT - SIGHT_MOVE_Y\r\n    const topLimitY = SIGHT_MOVE_Y\r\n    if (this.targetCharacter) {\r\n      // 矢印の位置を更新\r\n      this.targetArrow!.position.set(this.targetCharacter.x, this.targetCharacter.y - 64)\r\n      const offsetX = this.targetCharacter.x + this.x\r\n      if (offsetX > rightLimitX) {\r\n        this.x = -(this.targetCharacter.x - rightLimitX)\r\n      }\r\n      else if (offsetX < leftLimitX) {\r\n        this.x = -(this.targetCharacter.x - leftLimitX)\r\n      }\r\n      const offsetY = this.targetCharacter.y + this.y\r\n      if (offsetY > bottomLimitY) {\r\n        this.y = -(this.targetCharacter.y - bottomLimitY)\r\n      }\r\n      else if (offsetY < topLimitY) {\r\n        this.y = -(this.targetCharacter.y - topLimitY)\r\n      }\r\n      const [oldInSightAreaX, oldInSightAreaY] = [this.inSightArea.x, this.inSightArea.y]\r\n      this.updateInSightArea()\r\n      // 視界外になった領域のキャラを非表示に、視界内になった領域のキャラを表示に\r\n      const movedAreaX = this.inSightArea.x - oldInSightAreaX\r\n      const movedAreaY = this.inSightArea.y - oldInSightAreaY\r\n      this.updateCharacterVisibilityByMovedAreaOffset(movedAreaX, movedAreaY)\r\n    }\r\n    this.x = Math.floor(Math.min(0, Math.max(-(this.mapData.tilewidth * this.horizontalGridNum - GAME_AREA_WIDTH), this.x)))\r\n    this.y = Math.floor(Math.min(0, Math.max(-(this.mapData.tileheight * this.verticalGridNum - GAME_AREA_HEIGHT), this.y)))\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n\r\n    // if (this.frameCount % 200 === 0) {\r\n      // console.log(`${performance.now() - t1}`)\r\n    // }\r\n    ++ this.frameCount\r\n\r\n  }\r\n  // 他キャラとの衝突判定\r\n  private hitOtherCaracter(targetFieldCharacter: FieldCharacter, offsetX: number, offsetY: number): [boolean, number] {\r\n    const targetCircle = targetFieldCharacter.character.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    let hitDistance = 0\r\n    const otherFieldCharacters = this.getOtherFieldCharactersByAreaGrid(targetFieldCharacter)\r\n    // const otherFieldCharacters = this.fieldCharacters.filter(fieldCharacter => targetFieldCharacter != fieldCharacter)\r\n    // console.log(otherFieldCharacters.length)\r\n    const hit = otherFieldCharacters.some(fieldCharacter => {\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, fieldCharacter.character.hitCircle.x, fieldCharacter.character.hitCircle.y]\r\n      // めり込んだ距離(の2乗)\r\n      hitDistance = (targetCircle.radius + fieldCharacter.character.hitCircle.radius) - Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n      const hit = hitDistance >= 0\r\n      return hit\r\n    })\r\n    return [hit, hit ? hitDistance / Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)) : 0]\r\n  }\r\n  public hitWall(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number, number] {\r\n    const areaGrid = this.positionToAreaGrid(targetCharacter.x, targetCharacter.y)\r\n    const collisions = this.getCollisionsByAreaGrid(areaGrid)\r\n    // const collisions = this.collisions\r\n    // console.log(collisions.length)\r\n\r\n    const targetRect = targetCharacter.hitRect.clone()\r\n    targetRect.x += offsetX\r\n    targetRect.y += offsetY\r\n    let excessX = 0 // めり込んだ量X\r\n    let excessY = 0 // めり込んだ量Y\r\n\r\n    // そのキャラの周辺のcollisionを抽出\r\n    const hit = collisions.some(collision => {\r\n      const hHit = targetRect.left < collision.right && targetRect.right > collision.left\r\n      const vHit = targetRect.top < collision.bottom && targetRect.bottom > collision.top\r\n      const hit = hHit && vHit\r\n      // 衝突した場合はめり込み量計算\r\n      if (hit) {\r\n        if (offsetX < 0) {\r\n          excessX = targetRect.left - collision.right\r\n        } else if (offsetX > 0) {\r\n          excessX = targetRect.right - collision.left\r\n        }\r\n        if (offsetY < 0) {\r\n          excessY = targetRect.top - collision.bottom\r\n        } else if (offsetY > 0) {\r\n          excessY = targetRect.bottom - collision.top\r\n        }\r\n      }\r\n      return hit\r\n    })\r\n    return [hit, excessX, excessY]\r\n  }\r\n  private getOtherFieldCharactersByAreaGrid(fieldCharacter: FieldCharacter) {\r\n    const otherFieldCharacters: Array<FieldCharacter> = []\r\n    const areaGrid = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.fieldCharactersByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(otherFieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return otherFieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter)\r\n  }\r\n  private getCollisionsByAreaGrid(areaGrid: Array<number>): Array<Collosion> {\r\n    const collisions: Array<Collosion> = []\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.collisionsByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(collisions, this.collisionsByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return collisions\r\n  }\r\n  private addFieldCharacterToArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    if (this.fieldCharactersByArea.has(areaGridString)) {\r\n      this.fieldCharactersByArea.get(areaGridString)!.push(fieldCharacter)\r\n    } else {\r\n      this.fieldCharactersByArea.set(areaGridString, [fieldCharacter])\r\n    }\r\n  }\r\n  private removeFieldCharacterFromArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    const fieldCharacters = this.fieldCharactersByArea.get(areaGridString)!\r\n    this.fieldCharactersByArea.set(areaGridString, fieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter))\r\n  }\r\n  private gridToAreaGrid(gridX: number, gridY: number) {\r\n    return [Math.floor(gridX / AREA_DIVIDE_GRID_NUM), Math.floor(gridY / AREA_DIVIDE_GRID_NUM)]\r\n  }\r\n  private positionToAreaGrid(x: number, y: number) {\r\n    return [Math.floor(x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)), Math.floor(y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight))]\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n  }\r\n  // 視界内のキャラクター一覧取得\r\n  private getInSightFieldCharacters(): Array<FieldCharacter> {\r\n    const fieldCharacters: Array<FieldCharacter> = []\r\n    for (let areaGridY = this.inSightArea.top; areaGridY <= this.inSightArea.bottom; ++areaGridY) {\r\n      for (let areaGridX = this.inSightArea.left; areaGridX <= this.inSightArea.right; ++areaGridX) {\r\n        const areaGridString = [areaGridX, areaGridY].toString()\r\n        if (this.fieldCharactersByArea.has(areaGridString)) {\r\n          Array.prototype.push.apply(fieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n        }\r\n      }\r\n    }\r\n    return fieldCharacters\r\n  }\r\n  private updateInSightArea() {\r\n    this.inSightArea.x = Math.max(0, -Math.floor(this.x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) - 2)\r\n    this.inSightArea.y = Math.max(0, -Math.floor(this.y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) - 2)\r\n  }\r\n  private isInSight(fieldCharacter: FieldCharacter): boolean {\r\n    return fieldCharacter.areaGridX >= this.inSightArea.left && fieldCharacter.areaGridX <= this.inSightArea.right && fieldCharacter.areaGridY >= this.inSightArea.top && fieldCharacter.areaGridY <= this.inSightArea.bottom \r\n  }\r\n  private updateCharacterVisibilityByMovedAreaOffset(movedAreaX: number, movedAreaY: number) {\r\n    if (movedAreaX !== 0) {\r\n      // 横方向で視界内になったキャラを表示\r\n      {\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.right - movedAreaX) + 1 : this.inSightArea.left\r\n        let endX = movedAreaX > 0 ? this.inSightArea.right : (this.inSightArea.left - movedAreaX) - 1\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 横方向で視界外になったキャラを非表示\r\n      {\r\n        console.log(`movedAreaX = ${movedAreaX}`)\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.left - movedAreaX) : this.inSightArea.right + 1\r\n        let endX = movedAreaX > 0 ? this.inSightArea.left - 1 : (this.inSightArea.right - movedAreaX)\r\n        console.log(`startX: ${startX}, endX: ${endX}`)\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            console.log(areaGridString)\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (movedAreaY !== 0) {\r\n      // 縦方向で視界内になったキャラを表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.bottom - movedAreaY) + 1 : this.inSightArea.top\r\n        let endY = movedAreaY > 0 ? this.inSightArea.bottom : (this.inSightArea.top - movedAreaY) - 1\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 縦方向で視界外になったキャラを非表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.top - movedAreaY) : this.inSightArea.bottom + 1\r\n        let endY = movedAreaY > 0 ? this.inSightArea.top - 1 : (this.inSightArea.bottom - movedAreaY)\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"root\",class:{ 'focused': _vm.focused },on:{\"click\":function($event){return _vm.$emit('click')}}},[_c('img',{staticStyle:{\"margin-left\":\"6px\",\"margin-top\":\"6px\",\"width\":\"32px\",\"height\":\"32px\"},attrs:{\"src\":(\"/arpg-sample/images/stages/013/chara\" + (_vm.character.type + 1) + \"-icon.png\")}}),_c('div',{staticClass:\"position\"},[_vm._v(\" x: \"+_vm._s(_vm.character.x.toFixed(0))),_c('br'),_vm._v(\" y: \"+_vm._s(_vm.character.y.toFixed(0))+\" \")]),_c('b-button',{staticStyle:{\"margin-right\":\"4px\",\"margin-top\":\"8px\",\"height\":\"32px\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.$emit('delete')}}},[_vm._v(\"削除\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport * as PIXI from \"pixi.js\"\r\n\r\nexport default Vue.extend({\r\n  props: [\r\n    'character', 'focused'\r\n  ],\r\n  methods: {\r\n    onShow() {\r\n      this.character.bodySprite.alpha = 1\r\n    },\r\n    onHide() {\r\n      this.character.bodySprite.alpha = 0\r\n    },\r\n  }\r\n});\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CharacterCell.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CharacterCell.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CharacterCell.vue?vue&type=template&id=0aaf4441&scoped=true&\"\nimport script from \"./CharacterCell.vue?vue&type=script&lang=ts&\"\nexport * from \"./CharacterCell.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CharacterCell.vue?vue&type=style&index=0&id=0aaf4441&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0aaf4441\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 高速歩きで壁にぶつかった場合、移動しないのではなくx, yについて移動できるところまで戻してあげる。\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine } from '@/stages/013/Character'\r\nimport { Field } from '@/stages/013/Field'\r\nimport CharacterCell from '@/stages/013/components/CharacterCell.vue'\r\n\r\nclass FpsCounter {\r\n  private ms = 0\r\n  private counter = 0\r\n  public averageMs = 0\r\n  constructor(private oldNow = performance.now()) {}\r\n  public checkPoint() {\r\n    const now = performance.now()\r\n    this.ms += (now - this.oldNow)\r\n    this.oldNow = now\r\n    ++this.counter\r\n    if (this.counter >= 60) {\r\n      this.averageMs = this.ms / this.counter\r\n      this.counter = 0\r\n      this.ms = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    renderTexture: PIXI.RenderTexture | null;\r\n    field: Field | null;\r\n    pressedKeyCodeSet: Set<number>;\r\n    fpsCounter: FpsCounter;\r\n    characters: Array<Character>;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      renderTexture: null,\r\n      field: null,\r\n      pressedKeyCodeSet: new Set(),\r\n      fpsCounter: new FpsCounter(),\r\n      characters: [],\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n    // PIXI.settings.TARGET_FPMS = 1\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const opt = { \r\n      width: 640,\r\n      height: 480,\r\n      autoDensity: true\r\n    }\r\n    this.pixiApp = new PIXI.Application(opt)\r\n    this.pixiApp.ticker.maxFPS = 60\r\n    this.pixiApp.ticker.minFPS = 60\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/009/chara01.png\")\r\n      .add(\"/arpg-sample/images/stages/009/chara02.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.json\")\r\n      .add(\"/arpg-sample/images/stages/013/map01.json\")\r\n      .load(() => {\r\n\r\n        // RenderTextureに必要な画像すべてを描き込む\r\n        this.renderTexture = PIXI.RenderTexture.create({ width: 1024, height: 1024 })\r\n        const renderSprite = PIXI.Sprite.from(this.renderTexture)\r\n\r\n        // mapchipを描き込む\r\n        const spriteMapChip = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.png\"].texture)\r\n        this.pixiApp!.renderer.render(spriteMapChip, this.renderTexture, false)\r\n        // chara01を書き込む\r\n        const sprite01 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/009/chara01.png\"].texture)\r\n        sprite01.position.set(256, 0)\r\n        this.pixiApp!.renderer.render(sprite01, this.renderTexture, false)\r\n        // chara02を書き込む\r\n        const sprite02 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/009/chara02.png\"].texture)\r\n        sprite02.position.set(256 + 192, 0)\r\n        this.pixiApp!.renderer.render(sprite02, this.renderTexture, false)\r\n\r\n\r\n        // フィールド\r\n        this.field = new Field(\r\n          this.renderTexture,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.json\"].data,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/map01.json\"].data)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n\r\n        // NPC\r\n        for (let i = 0; i < 4; ++i) {\r\n          this.generateCharacter(i % 2)\r\n        }\r\n        this.field!.setTargetCharacter(this.characters[0])\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.pressedKeyCodeSet.add(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.pressedKeyCodeSet.delete(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      this.fpsCounter.checkPoint()\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    },\r\n    isFocusedCharacter(character: Character) {\r\n      return this.field!.targetCharacter === character\r\n    },\r\n    onClickCharacterCell(character: Character) {\r\n      this.field!.setTargetCharacter(character)\r\n    },\r\n    onClickDeleteCharacter(character: Character) {\r\n      this.characters = this.characters.filter(v => v !== character)\r\n      this.field!.removeCharacter(character)\r\n    },\r\n    generateCharacter(type: number) {\r\n      const textureOffset = (type === 0) ? new PIXI.Point(256, 0) : new PIXI.Point(256 + 192, 0)\r\n      const character = new Character(this.renderTexture!, textureOffset, new UroUroRoutine())\r\n      character.currentDirection = 4\r\n      for(;;) {\r\n        character.x = 32 + 16 * Math.floor(Math.random() * (this.field!.horizontalGridNum - 4))\r\n        character.y = 32 + 16 * Math.floor(Math.random() * (this.field!.verticalGridNum - 4))\r\n        this.field!.addCharacter(character, false)\r\n        const [hit, x, y] = this.field!.hitWall(character, 0, 0)\r\n        if (!hit) {\r\n          break;\r\n        } else {\r\n          this.field!.removeCharacter(character)\r\n          console.log(hit)\r\n        }\r\n      }\r\n      this.characters.push(character)\r\n      ;(character as any).type = type\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {\r\n    CharacterCell\r\n  },\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=fa13033c&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./View.vue?vue&type=style&index=0&id=fa13033c&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fa13033c\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}