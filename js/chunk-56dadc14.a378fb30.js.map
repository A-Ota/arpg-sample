{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.some.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/stages/014/View.vue?585c","webpack:///./src/stages/014/View.vue?1d57","webpack:///./src/stages/014/Character.ts","webpack:///./src/stages/014/Field.ts","webpack:///./src/stages/014/View.vue?37d3","webpack:///./src/stages/014/View.vue?465a","webpack:///./src/stages/014/View.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js"],"names":["$","$some","some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","collection","collectionStrong","module","exports","init","render","_vm","_h","$createElement","_c","_self","staticStyle","ref","_v","_s","fpsCounter","averageMs","toFixed","staticRenderFns","moveX","moveY","nextDirection","texture","offset","width","height","directionNum","textureInfo","x","y","hitCircle","hitRect","animationFrame","_currentDirection","preUpdateInfo","animationStep","bodySprite","SortableSprite","baseTexture","anchor","set","shadowTexture","shadowSprite","alpha","debugCircle","lineStyle","drawCircle","debugRect","drawRect","value","syncTexture","_routine","character","offsetX","offsetY","currentDirection","frame","preUpdate","zOrder","position","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","calcMoveXY","direction","speed","slantSpeed","pressedKeyCodeSet","has","isMoving","frameCountToWait","frameCountToMove","Math","floor","random","AREA_DIVIDE_GRID_NUM","GAME_AREA_WIDTH","GAME_AREA_HEIGHT","SIGHT_MOVE_X","SIGHT_MOVE_Y","type","left","top","right","bottom","areaGridX","areaGridY","isAdded","mapChipData","mapData","horizontalGridNum","verticalGridNum","targetCharacter","fieldCharacters","inSightArea","walls","collisions","collisionsByArea","Map","fieldCharactersByArea","textureMap","textureList","frameCount","use32bitIndex","sortableChildren","bgLayerContainer","layerContainer","SortableParticleContainer","uvs","vertices","tint","airLayerContainer","debugLayerContainer","visible","addChild","generateMap","ceil","tilewidth","tileheight","updateInSightArea","on","clearMap","forEach","destroy","clear","gridY","gridYCount","imageheight","gridX","gridXCount","imagewidth","clone","push","mapChipIndex","layerIndex","textureIndex","layers","data","addFrame","firstIndex","tilesets","v","source","firstgid","collision","areaGridString","gridToAreaGrid","toString","get","isTarget","positionToAreaGrid","fieldCharacter","addFieldCharacterToArea","setTargetCharacter","update","isInSight","removeChild","removeFieldCharacterFromArea","getInSightFieldCharacters","hitOtherCaracter","hitCharacter","hitDistanceRate","hitWall","hit","excessX","excessY","oldAreaGridX","oldAreaGridY","rightLimitX","leftLimitX","bottomLimitY","topLimitY","oldInSightAreaX","oldInSightAreaY","movedAreaX","movedAreaY","updateCharacterVisibilityByMovedAreaOffset","min","max","sortChildren","targetFieldCharacter","targetCircle","hitDistance","otherFieldCharacters","getOtherFieldCharactersByAreaGrid","x1","y1","x2","y2","radius","sqrt","pow","areaGrid","getCollisionsByAreaGrid","targetRect","hHit","vHit","areaGridStrings","Array","prototype","apply","fieldCharacter2","flag","startX","endX","areaX","areaY","console","log","startY","endY","oldNow","performance","now","ms","counter","extend","pixiApp","renderTexture","field","lastPressedKeyCodeSet","Set","nowPressedKeyCodeSet","characters","isDebugMode","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","opt","autoDensity","ticker","maxFPS","minFPS","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","add","load","create","from","spriteMapChip","resources","renderer","sprite01","sprite02","sprite03","sprite04","sprite05","generateCharacter","methods","event","keyCode","delta","checkPoint","toggleCharacter","onClickToggleDebugMode","setDebugMode","isFocusedCharacter","onClickCharacterCell","onClickDeleteCharacter","removeCharacter","textureOffset","routine","addCharacter","index","i","nextIndex","oldCharacter","newCharacter","beforeDestroy","components","computed","props","component","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","arg","k","len","E","A","n","TypeError"],"mappings":"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","file":"js/chunk-56dadc14.a378fb30.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=style&index=0&id=1b334ec1&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"width\":\"640px\",\"height\":\"480px\"}}),(true)?_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"4px\",\"top\":\"4px\",\"color\":\"#fff\"}},[_vm._v(_vm._s((1000 / _vm.fpsCounter.averageMs).toFixed(2))+\" fps\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\nexport class TextureInfo {\r\n  constructor(\r\n    public texture: PIXI.Texture,\r\n    public offset: PIXI.Point,\r\n    public width: number,\r\n    public height: number,\r\n    public directionNum: number\r\n  ) {}\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  public hitRect: PIXI.Rectangle = new PIXI.Rectangle(-12, -12, 24, 24)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: SortableSprite\r\n  public debugCircle!: PIXI.Graphics\r\n  public debugRect!: PIXI.Graphics\r\n  private _routine!: BaseRoutine\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  set routine(value: BaseRoutine) {\r\n    this._routine = value\r\n    this._routine.character = this\r\n  }\r\n  private animationStep = 0\r\n  constructor(private textureInfo: TextureInfo) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(textureInfo.offset.x, textureInfo.offset.y, textureInfo.width, textureInfo.height))\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(textureInfo.texture.baseTexture, new PIXI.Rectangle(224, 0, 32, 32))\r\n    this.shadowSprite = new SortableSprite()\r\n    this.shadowSprite.texture = shadowTexture\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.alpha = 0.7\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n    this.debugRect = new PIXI.Graphics()\r\n    this.debugRect.lineStyle(2, 0x5555FF, 1)\r\n    this.debugRect.alpha = 0.7\r\n    this.debugRect.drawRect(this.hitRect.x, this.hitRect.y, this.hitRect.width, this.hitRect.height)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    if (this.textureInfo.directionNum === 8) {\r\n      switch(this.currentDirection) {\r\n        case 1:\r\n          offsetX = 96\r\n          break;\r\n        case 2:\r\n          break;\r\n        case 3:\r\n          offsetX = 96\r\n          offsetY = 64\r\n          break;\r\n        case 4:\r\n          offsetY = 64\r\n          break;\r\n        case 6:\r\n          offsetY = 128\r\n          break;\r\n        case 7:\r\n          offsetX = 96\r\n          offsetY = 128\r\n          break;\r\n        case 8:\r\n          offsetY = 192\r\n          break;\r\n        case 9:\r\n          offsetX = 96\r\n          offsetY = 192\r\n          break;\r\n      }\r\n    }\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * this.textureInfo.width\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureInfo.offset.x + offsetX,\r\n      this.textureInfo.offset.y + offsetY,\r\n      this.textureInfo.width,\r\n      this.textureInfo.height\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    this._routine.preUpdate()\r\n  }\r\n  public update() {\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    ;[this.hitRect.x, this.hitRect.y] = [this.x - 12, this.y - 12]\r\n    ;[this.debugRect.x, this.debugRect.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.shadowSprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private pressedKeyCodeSet: Set<number>) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    let direction: number | null = null \r\n    // 向き取得\r\n    if (this.pressedKeyCodeSet.has(KEY_CODE_LEFT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 1\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 7\r\n      } else {\r\n        direction = 4\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_RIGHT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 3\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 9\r\n      } else {\r\n        direction = 6\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n      direction = 8\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n      direction = 2\r\n    }\r\n    // 向かせたり歩かせたり\r\n    if (direction != null) {\r\n      const [moveX, moveY] = calcMoveXY(direction, 3)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 1)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}","import { Character } from '@/stages/014/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport * as PIXITilemap from '@/pixi-tilemap/index'\r\n\r\nconst AREA_DIVIDE_GRID_NUM = 3\r\nconst GAME_AREA_WIDTH = 640\r\nconst GAME_AREA_HEIGHT = 480\r\nconst SIGHT_MOVE_X = GAME_AREA_WIDTH / 3\r\nconst SIGHT_MOVE_Y = GAME_AREA_HEIGHT / 3\r\n\r\nclass Collosion {\r\n  constructor(\r\n    public type: number,\r\n    public left: number,\r\n    public top: number,\r\n    public right: number,\r\n    public bottom: number\r\n  ) {}\r\n}\r\n\r\nclass FieldCharacter {\r\n  public isAdded: boolean = false\r\n  constructor(\r\n    public character: Character,\r\n    public areaGridX: number,\r\n    public areaGridY: number,\r\n  ) {}\r\n}\r\n\r\nexport class Field extends PIXI.Container {\r\n  private bgLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private airLayerContainer!: PIXITilemap.CompositeRectTileLayer\r\n  private layerContainer!: SortableParticleContainer\r\n  private debugLayerContainer!: PIXI.Container\r\n  public horizontalGridNum = 200\r\n  public verticalGridNum = 200\r\n  public targetCharacter: Character | null = null\r\n  private fieldCharacters: Array<FieldCharacter> = []\r\n  private inSightArea: PIXI.Rectangle = new PIXI.Rectangle()\r\n  private walls: Array<PIXI.Rectangle> = []\r\n  private collisions: Array<Collosion> = []\r\n  private collisionsByArea: Map<string, Array<Collosion>> = new Map()\r\n  private fieldCharactersByArea: Map<string, Array<FieldCharacter>> = new Map()\r\n  private textureMap: Map<string, PIXI.Texture> = new Map()\r\n  private textureList: Array<PIXI.Texture> = []\r\n  private frameCount = 0\r\n  constructor(private texture: PIXI.Texture, private mapChipData: any, private mapData: any) {\r\n    super()\r\n\r\n    // 150,000チップ以上使えるようにする\r\n    PIXITilemap.Constant.use32bitIndex = true;\r\n\r\n    this.sortableChildren = true\r\n    this.bgLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true })\r\n    this.airLayerContainer = new PIXITilemap.CompositeRectTileLayer(0, [texture])\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.airLayerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n\r\n    this.generateMap()\r\n    this.inSightArea.width = Math.ceil(GAME_AREA_WIDTH / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) + 4\r\n    this.inSightArea.height = Math.ceil(GAME_AREA_HEIGHT / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) + 4\r\n    this.updateInSightArea()\r\n    this.on('added', () => {\r\n      // 親に追加されたときになにかやるならここで\r\n    })\r\n  }\r\n  public reloadMap(mapData: any) {\r\n    this.mapData = mapData\r\n    this.clearMap()\r\n    this.generateMap()\r\n  }\r\n  public clearMap() {\r\n    this.textureMap.forEach(value => value.destroy())\r\n    this.textureMap.clear()\r\n    this.bgLayerContainer.clear()\r\n    this.airLayerContainer.clear()\r\n    this.walls.length = 0\r\n  }\r\n  public generateMap() {\r\n    // まずは全てのチップをテクスチャ化\r\n    this.textureList.forEach(texture => texture.destroy())\r\n    this.textureList.length = 0\r\n\r\n    for (let gridY = 0, gridYCount = Math.floor(this.mapChipData.imageheight / this.mapChipData.tileheight); gridY < gridYCount; ++gridY) {\r\n      for (let gridX = 0, gridXCount = Math.floor(this.mapChipData.imagewidth / this.mapChipData.tilewidth); gridX < gridXCount; ++gridX) {\r\n        const texture = this.texture.clone()\r\n        texture.frame = new PIXI.Rectangle(\r\n          this.mapChipData.tilewidth * gridX,\r\n          this.mapChipData.tileheight * gridY,\r\n          this.mapChipData.tilewidth,\r\n          this.mapChipData.tileheight)\r\n        this.textureList.push(texture)\r\n      }\r\n    }\r\n    // チップを配置\r\n    {\r\n      this.horizontalGridNum = this.mapData.width\r\n      this.verticalGridNum = this.mapData.height\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const mapChipIndex = gridX + gridY * this.horizontalGridNum\r\n          // 下層、中層、上層地形\r\n          for (let layerIndex = 0; layerIndex < 3; ++layerIndex) {\r\n            const textureIndex = this.mapData.layers[layerIndex].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.bgLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 上空\r\n          {\r\n            const textureIndex = this.mapData.layers[3].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.airLayerContainer.addFrame(this.textureList[textureIndex - 1], gridX * this.mapChipData.tilewidth, gridY * this.mapChipData.tileheight)\r\n            }\r\n          }\r\n          // 衝突判定\r\n          {\r\n            // 衝突判定用チップの開始indexを取得しておく\r\n            const firstIndex = this.mapData.tilesets.filter((v: any) => v.source === 'collosion.json')[0].firstgid\r\n            const textureIndex = this.mapData.layers[4].data[mapChipIndex]\r\n            if (textureIndex > 0) {\r\n              this.collisions[gridY * this.horizontalGridNum + gridX] = new Collosion(\r\n                textureIndex - firstIndex,\r\n                gridX * this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight,\r\n                gridX * this.mapData.tilewidth + this.mapData.tilewidth,\r\n                gridY * this.mapData.tileheight + this.mapData.tileheight\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 衝突判定を4x4グリッド毎にエリア分け\r\n      for (let gridY = 0; gridY < this.verticalGridNum; ++gridY) {\r\n        for (let gridX = 0; gridX < this.horizontalGridNum; ++gridX) {\r\n          const collision = this.collisions[gridY * this.horizontalGridNum + gridX]\r\n          if (collision != null) {\r\n            const areaGridString = this.gridToAreaGrid(gridX, gridY).toString()\r\n            if (this.collisionsByArea.has(areaGridString)) {\r\n              this.collisionsByArea.get(areaGridString)!.push(collision)\r\n            } else {\r\n              this.collisionsByArea.set(areaGridString, [collision])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.log(`衝突判定のエリア分けの数:${this.collisionsByArea.size}`)\r\n    }\r\n  }\r\n  public setTargetCharacter(character: Character) {\r\n    this.targetCharacter = character\r\n  }\r\n  public addCharacter(character: Character, isTarget = false) {\r\n    const [areaGridX, areaGridY] = this.positionToAreaGrid(character.x, character.y)\r\n    const fieldCharacter = new FieldCharacter(character, areaGridX, areaGridY)\r\n    this.fieldCharacters.push(fieldCharacter)\r\n    this.addFieldCharacterToArea(fieldCharacter, areaGridX, areaGridY)\r\n    if (isTarget) {\r\n      this.setTargetCharacter(character)\r\n    }\r\n    character.update()\r\n    this.debugLayerContainer.addChild(character.debugCircle)\r\n    this.debugLayerContainer.addChild(character.debugRect)\r\n    // TODO:追加時に視界内かを判定して処理\r\n    if (this.isInSight(fieldCharacter)) {\r\n      this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n      this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n      fieldCharacter.isAdded = true\r\n    }\r\n  }\r\n  public removeCharacter(character: Character) {\r\n    if (this.targetCharacter === character) {\r\n      this.targetCharacter = null\r\n    }\r\n    this.debugLayerContainer.removeChild(character.debugCircle)\r\n    this.debugLayerContainer.removeChild(character.debugRect)\r\n    this.layerContainer.removeChild(character.shadowSprite)\r\n    this.layerContainer.removeChild(character.bodySprite)\r\n    this.fieldCharacters = this.fieldCharacters.filter(fieldCharacter => {\r\n      if (fieldCharacter.character === character) {\r\n        this.removeFieldCharacterFromArea(fieldCharacter, fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  public update() {\r\n    // const t1 = performance.now()\r\n    const fieldCharacters = this.getInSightFieldCharacters()\r\n    // preUpdate\r\n    fieldCharacters.forEach(fieldCharacter => fieldCharacter.character.preUpdate())\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    fieldCharacters.forEach(fieldCharacter => {\r\n      if (fieldCharacter.character.preUpdateInfo != null) {\r\n        let [moveX, moveY] = [fieldCharacter.character.preUpdateInfo.moveX, fieldCharacter.character.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0)) {\r\n          // キャラ\r\n          // const t1 = performance.now()\r\n          const [hitCharacter, hitDistanceRate] = this.hitOtherCaracter(fieldCharacter, moveX, moveY)\r\n          // t1sum += (performance.now() - t1)\r\n          if (hitCharacter) {\r\n            // キャラにめり込んだ分を戻す\r\n            moveX = (moveX - (moveX * hitDistanceRate))\r\n            moveY = (moveY - (moveY * hitDistanceRate))\r\n          }\r\n          // 地形\r\n          {\r\n            // const t2 = performance.now()\r\n            const [hit, excessX, excessY] = this.hitWall(fieldCharacter.character, moveX, moveY)\r\n            // t2sum += (performance.now() - t2)\r\n            // ぶつからなかった\r\n            if (!hit) {\r\n              fieldCharacter.character.x += moveX\r\n              fieldCharacter.character.y += moveY\r\n            }\r\n            // ぶつかった \r\n            else {\r\n              // 上下左右移動時は押し戻しに従う\r\n              if (excessX === 0 || excessY === 0) {\r\n                fieldCharacter.character.x += (moveX - excessX)\r\n                fieldCharacter.character.y += (moveY - excessY)\r\n              }\r\n              // 斜め移動時は片方のみの移動を試みる\r\n              else {\r\n                if (!this.hitWall(fieldCharacter.character, 0, moveY)[0]) {\r\n                  fieldCharacter.character.y += moveY\r\n                  fieldCharacter.character.x += (moveX - excessX) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n                else if (!this.hitWall(fieldCharacter.character, moveX, 0)[0]) {\r\n                  fieldCharacter.character.x += moveX\r\n                  fieldCharacter.character.y += (moveY - excessY) // 移動しなかった方向についても押し戻しは適用\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        fieldCharacter.character.currentDirection = fieldCharacter.character.preUpdateInfo.nextDirection\r\n        fieldCharacter.character.preUpdateInfo = null\r\n\r\n        const [oldAreaGridX, oldAreaGridY] = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n        fieldCharacter.character.update()\r\n        ;[fieldCharacter.areaGridX, fieldCharacter.areaGridY] = this.positionToAreaGrid(fieldCharacter.character.x, fieldCharacter.character.y)\r\n        // キャラの所属AreaGridの変更検知\r\n        if (fieldCharacter.areaGridX !== oldAreaGridX || fieldCharacter.areaGridY !== oldAreaGridY) {\r\n          this.removeFieldCharacterFromArea(fieldCharacter, oldAreaGridX, oldAreaGridY)\r\n          this.addFieldCharacterToArea(fieldCharacter,fieldCharacter.areaGridX, fieldCharacter.areaGridY)\r\n          // 視界外になったら非表示\r\n          if (!this.isInSight(fieldCharacter)) {\r\n            this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n            this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n            fieldCharacter.isAdded = false\r\n          }\r\n        }\r\n        // console.log(`キャラの所属AreaGrid(${fieldCharacter.areaGridX}, ${fieldCharacter.areaGridY})`)\r\n      } else {\r\n        fieldCharacter.character.update()\r\n      }\r\n    })\r\n\r\n    // 視点移動\r\n    const rightLimitX = GAME_AREA_WIDTH - SIGHT_MOVE_X\r\n    const leftLimitX = SIGHT_MOVE_X\r\n    const bottomLimitY = GAME_AREA_HEIGHT - SIGHT_MOVE_Y\r\n    const topLimitY = SIGHT_MOVE_Y\r\n    if (this.targetCharacter) {\r\n      const offsetX = this.targetCharacter.x + this.x\r\n      if (offsetX > rightLimitX) {\r\n        this.x = -(this.targetCharacter.x - rightLimitX)\r\n      }\r\n      else if (offsetX < leftLimitX) {\r\n        this.x = -(this.targetCharacter.x - leftLimitX)\r\n      }\r\n      const offsetY = this.targetCharacter.y + this.y\r\n      if (offsetY > bottomLimitY) {\r\n        this.y = -(this.targetCharacter.y - bottomLimitY)\r\n      }\r\n      else if (offsetY < topLimitY) {\r\n        this.y = -(this.targetCharacter.y - topLimitY)\r\n      }\r\n      const [oldInSightAreaX, oldInSightAreaY] = [this.inSightArea.x, this.inSightArea.y]\r\n      this.updateInSightArea()\r\n      // 視界外になった領域のキャラを非表示に、視界内になった領域のキャラを表示に\r\n      const movedAreaX = this.inSightArea.x - oldInSightAreaX\r\n      const movedAreaY = this.inSightArea.y - oldInSightAreaY\r\n      this.updateCharacterVisibilityByMovedAreaOffset(movedAreaX, movedAreaY)\r\n    }\r\n    this.x = Math.floor(Math.min(0, Math.max(-(this.mapData.tilewidth * this.horizontalGridNum - GAME_AREA_WIDTH), this.x)))\r\n    this.y = Math.floor(Math.min(0, Math.max(-(this.mapData.tileheight * this.verticalGridNum - GAME_AREA_HEIGHT), this.y)))\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n\r\n    // if (this.frameCount % 200 === 0) {\r\n      // console.log(`${performance.now() - t1}`)\r\n    // }\r\n    ++ this.frameCount\r\n\r\n  }\r\n  // 他キャラとの衝突判定\r\n  private hitOtherCaracter(targetFieldCharacter: FieldCharacter, offsetX: number, offsetY: number): [boolean, number] {\r\n    const targetCircle = targetFieldCharacter.character.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    let hitDistance = 0\r\n    const otherFieldCharacters = this.getOtherFieldCharactersByAreaGrid(targetFieldCharacter)\r\n    // const otherFieldCharacters = this.fieldCharacters.filter(fieldCharacter => targetFieldCharacter != fieldCharacter)\r\n    // console.log(otherFieldCharacters.length)\r\n    const hit = otherFieldCharacters.some(fieldCharacter => {\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, fieldCharacter.character.hitCircle.x, fieldCharacter.character.hitCircle.y]\r\n      // めり込んだ距離(の2乗)\r\n      hitDistance = (targetCircle.radius + fieldCharacter.character.hitCircle.radius) - Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n      const hit = hitDistance >= 0\r\n      return hit\r\n    })\r\n    return [hit, hit ? hitDistance / Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)) : 0]\r\n  }\r\n  public hitWall(targetCharacter: Character, offsetX: number, offsetY: number): [boolean, number, number] {\r\n    const areaGrid = this.positionToAreaGrid(targetCharacter.x, targetCharacter.y)\r\n    const collisions = this.getCollisionsByAreaGrid(areaGrid)\r\n    // const collisions = this.collisions\r\n    // console.log(collisions.length)\r\n\r\n    const targetRect = targetCharacter.hitRect.clone()\r\n    targetRect.x += offsetX\r\n    targetRect.y += offsetY\r\n    let excessX = 0 // めり込んだ量X\r\n    let excessY = 0 // めり込んだ量Y\r\n\r\n    // そのキャラの周辺のcollisionを抽出\r\n    const hit = collisions.some(collision => {\r\n      const hHit = targetRect.left < collision.right && targetRect.right > collision.left\r\n      const vHit = targetRect.top < collision.bottom && targetRect.bottom > collision.top\r\n      const hit = hHit && vHit\r\n      // 衝突した場合はめり込み量計算\r\n      if (hit) {\r\n        if (offsetX < 0) {\r\n          excessX = targetRect.left - collision.right\r\n        } else if (offsetX > 0) {\r\n          excessX = targetRect.right - collision.left\r\n        }\r\n        if (offsetY < 0) {\r\n          excessY = targetRect.top - collision.bottom\r\n        } else if (offsetY > 0) {\r\n          excessY = targetRect.bottom - collision.top\r\n        }\r\n      }\r\n      return hit\r\n    })\r\n    return [hit, excessX, excessY]\r\n  }\r\n  private getOtherFieldCharactersByAreaGrid(fieldCharacter: FieldCharacter) {\r\n    const otherFieldCharacters: Array<FieldCharacter> = []\r\n    const areaGrid = [fieldCharacter.areaGridX, fieldCharacter.areaGridY]\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.fieldCharactersByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(otherFieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return otherFieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter)\r\n  }\r\n  private getCollisionsByAreaGrid(areaGrid: Array<number>): Array<Collosion> {\r\n    const collisions: Array<Collosion> = []\r\n    const areaGridStrings = [\r\n      areaGrid.toString(),\r\n      [areaGrid[0] - 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0], areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] - 1].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1]].toString(),\r\n      [areaGrid[0] + 1, areaGrid[1] + 1].toString(),\r\n      [areaGrid[0], areaGrid[1] + 1].toString(),\r\n      [areaGrid[0] - 1, areaGrid[1] + 1].toString()\r\n    ]\r\n    areaGridStrings.forEach(areaGridString => {\r\n      if (this.collisionsByArea.has(areaGridString)) {\r\n        Array.prototype.push.apply(collisions, this.collisionsByArea.get(areaGridString)!)\r\n      }\r\n    })\r\n    return collisions\r\n  }\r\n  private addFieldCharacterToArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    if (this.fieldCharactersByArea.has(areaGridString)) {\r\n      this.fieldCharactersByArea.get(areaGridString)!.push(fieldCharacter)\r\n    } else {\r\n      this.fieldCharactersByArea.set(areaGridString, [fieldCharacter])\r\n    }\r\n  }\r\n  private removeFieldCharacterFromArea(fieldCharacter: FieldCharacter, areaGridX: number, areaGridY: number) {\r\n    const areaGridString = [areaGridX, areaGridY].toString()\r\n    const fieldCharacters = this.fieldCharactersByArea.get(areaGridString)!\r\n    this.fieldCharactersByArea.set(areaGridString, fieldCharacters.filter(fieldCharacter2 => fieldCharacter2 !== fieldCharacter))\r\n  }\r\n  private gridToAreaGrid(gridX: number, gridY: number) {\r\n    return [Math.floor(gridX / AREA_DIVIDE_GRID_NUM), Math.floor(gridY / AREA_DIVIDE_GRID_NUM)]\r\n  }\r\n  private positionToAreaGrid(x: number, y: number) {\r\n    return [Math.floor(x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)), Math.floor(y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight))]\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n  }\r\n  // 視界内のキャラクター一覧取得\r\n  private getInSightFieldCharacters(): Array<FieldCharacter> {\r\n    const fieldCharacters: Array<FieldCharacter> = []\r\n    for (let areaGridY = this.inSightArea.top; areaGridY <= this.inSightArea.bottom; ++areaGridY) {\r\n      for (let areaGridX = this.inSightArea.left; areaGridX <= this.inSightArea.right; ++areaGridX) {\r\n        const areaGridString = [areaGridX, areaGridY].toString()\r\n        if (this.fieldCharactersByArea.has(areaGridString)) {\r\n          Array.prototype.push.apply(fieldCharacters, this.fieldCharactersByArea.get(areaGridString)!)\r\n        }\r\n      }\r\n    }\r\n    return fieldCharacters\r\n  }\r\n  private updateInSightArea() {\r\n    this.inSightArea.x = Math.max(0, -Math.floor(this.x / (AREA_DIVIDE_GRID_NUM * this.mapData.tilewidth)) - 2)\r\n    this.inSightArea.y = Math.max(0, -Math.floor(this.y / (AREA_DIVIDE_GRID_NUM * this.mapData.tileheight)) - 2)\r\n  }\r\n  private isInSight(fieldCharacter: FieldCharacter): boolean {\r\n    return fieldCharacter.areaGridX >= this.inSightArea.left && fieldCharacter.areaGridX <= this.inSightArea.right && fieldCharacter.areaGridY >= this.inSightArea.top && fieldCharacter.areaGridY <= this.inSightArea.bottom \r\n  }\r\n  private updateCharacterVisibilityByMovedAreaOffset(movedAreaX: number, movedAreaY: number) {\r\n    if (movedAreaX !== 0) {\r\n      // 横方向で視界内になったキャラを表示\r\n      {\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.right - movedAreaX) + 1 : this.inSightArea.left\r\n        let endX = movedAreaX > 0 ? this.inSightArea.right : (this.inSightArea.left - movedAreaX) - 1\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 横方向で視界外になったキャラを非表示\r\n      {\r\n        console.log(`movedAreaX = ${movedAreaX}`)\r\n        let startX = movedAreaX > 0 ? (this.inSightArea.left - movedAreaX) : this.inSightArea.right + 1\r\n        let endX = movedAreaX > 0 ? this.inSightArea.left - 1 : (this.inSightArea.right - movedAreaX)\r\n        console.log(`startX: ${startX}, endX: ${endX}`)\r\n        for (let areaX = startX; areaX <= endX; ++areaX) {\r\n          for (let areaY = this.inSightArea.top; areaY <= this.inSightArea.bottom; ++areaY) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            console.log(areaGridString)\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (movedAreaY !== 0) {\r\n      // 縦方向で視界内になったキャラを表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.bottom - movedAreaY) + 1 : this.inSightArea.top\r\n        let endY = movedAreaY > 0 ? this.inSightArea.bottom : (this.inSightArea.top - movedAreaY) - 1\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (!fieldCharacter.isAdded) {\r\n                  this.layerContainer.addChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.addChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = true\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 縦方向で視界外になったキャラを非表示\r\n      {\r\n        let startY = movedAreaY > 0 ? (this.inSightArea.top - movedAreaY) : this.inSightArea.bottom + 1\r\n        let endY = movedAreaY > 0 ? this.inSightArea.top - 1 : (this.inSightArea.bottom - movedAreaY)\r\n        for (let areaY = startY; areaY <= endY; ++areaY) {\r\n          for (let areaX = this.inSightArea.left; areaX <= this.inSightArea.right; ++areaX) {\r\n            const areaGridString = [areaX, areaY].toString()\r\n            if (this.fieldCharactersByArea.has(areaGridString)) {\r\n              this.fieldCharactersByArea.get(areaGridString)!.forEach(fieldCharacter => {\r\n                if (fieldCharacter.isAdded) {\r\n                  this.layerContainer.removeChild(fieldCharacter.character.shadowSprite)\r\n                  this.layerContainer.removeChild(fieldCharacter.character.bodySprite)\r\n                  fieldCharacter.isAdded = false\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n// 高速歩きで壁にぶつかった場合、移動しないのではなくx, yについて移動できるところまで戻してあげる。\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine, TextureInfo } from '@/stages/014/Character'\r\nimport { Field } from '@/stages/014/Field'\r\nclass FpsCounter {\r\n  private ms = 0\r\n  private counter = 0\r\n  public averageMs = 0\r\n  constructor(private oldNow = performance.now()) {}\r\n  public checkPoint() {\r\n    const now = performance.now()\r\n    this.ms += (now - this.oldNow)\r\n    this.oldNow = now\r\n    ++this.counter\r\n    if (this.counter >= 60) {\r\n      this.averageMs = this.ms / this.counter\r\n      this.counter = 0\r\n      this.ms = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    renderTexture: PIXI.RenderTexture | null;\r\n    field: Field | null;\r\n    lastPressedKeyCodeSet: Set<number>;\r\n    nowPressedKeyCodeSet: Set<number>;\r\n    fpsCounter: FpsCounter;\r\n    characters: Array<Character>;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      renderTexture: null,\r\n      field: null,\r\n      lastPressedKeyCodeSet: new Set(),\r\n      nowPressedKeyCodeSet: new Set(),\r\n      fpsCounter: new FpsCounter(),\r\n      characters: [],\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n    // PIXI.settings.TARGET_FPMS = 1\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const opt = { \r\n      width: 640,\r\n      height: 480,\r\n      autoDensity: true\r\n    }\r\n    this.pixiApp = new PIXI.Application(opt)\r\n    this.pixiApp.ticker.maxFPS = 60\r\n    this.pixiApp.ticker.minFPS = 60\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/014/chara01.png\")\r\n      .add(\"/arpg-sample/images/stages/014/chara02.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-blue.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-red.png\")\r\n      .add(\"/arpg-sample/images/stages/014/slime-yellow.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.png\")\r\n      .add(\"/arpg-sample/images/stages/013/mapchip.json\")\r\n      .add(\"/arpg-sample/images/stages/013/map01.json\")\r\n      .load(() => {\r\n\r\n        // RenderTextureに必要な画像すべてを描き込む\r\n        this.renderTexture = PIXI.RenderTexture.create({ width: 1024, height: 1024 })\r\n        const renderSprite = PIXI.Sprite.from(this.renderTexture)\r\n\r\n        // mapchipを描き込む\r\n        const spriteMapChip = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.png\"].texture)\r\n        this.pixiApp!.renderer.render(spriteMapChip, this.renderTexture, false)\r\n        // chara01を書き込む\r\n        const sprite01 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara01.png\"].texture)\r\n        sprite01.position.set(256, 0)\r\n        this.pixiApp!.renderer.render(sprite01, this.renderTexture, false)\r\n        // chara02を書き込む\r\n        const sprite02 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/chara02.png\"].texture)\r\n        sprite02.position.set(256 + 192, 0)\r\n        this.pixiApp!.renderer.render(sprite02, this.renderTexture, false)\r\n        // slimeを書き込む\r\n        const sprite03 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-blue.png\"].texture)\r\n        sprite03.position.set(256 + 192 * 2, 0)\r\n        this.pixiApp!.renderer.render(sprite03, this.renderTexture, false)\r\n\r\n        const sprite04 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-red.png\"].texture)\r\n        sprite04.position.set(256 + 192 * 2, 32)\r\n        this.pixiApp!.renderer.render(sprite04, this.renderTexture, false)\r\n\r\n        const sprite05 = PIXI.Sprite.from(PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/014/slime-yellow.png\"].texture)\r\n        sprite05.position.set(256 + 192 * 2, 64)\r\n        this.pixiApp!.renderer.render(sprite05, this.renderTexture, false)\r\n\r\n        // フィールド\r\n        this.field = new Field(\r\n          this.renderTexture,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/mapchip.json\"].data,\r\n          PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/013/map01.json\"].data)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n\r\n        // NPC\r\n        this.generateCharacter(0)\r\n        this.generateCharacter(1)\r\n        this.generateCharacter(2)\r\n        this.generateCharacter(3)\r\n        this.generateCharacter(4)\r\n        this.field!.setTargetCharacter(this.characters[0])\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.nowPressedKeyCodeSet.add(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.nowPressedKeyCodeSet.delete(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      this.fpsCounter.checkPoint()\r\n      // Spaceキーでキャラ切り替え\r\n      if (!this.nowPressedKeyCodeSet.has(32) && this.lastPressedKeyCodeSet.has(32)) {\r\n        this.toggleCharacter()\r\n      }\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n      this.lastPressedKeyCodeSet = new Set(Array.from(this.nowPressedKeyCodeSet))\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    },\r\n    isFocusedCharacter(character: Character) {\r\n      return this.field!.targetCharacter === character\r\n    },\r\n    onClickCharacterCell(character: Character) {\r\n      this.field!.setTargetCharacter(character)\r\n    },\r\n    onClickDeleteCharacter(character: Character) {\r\n      this.characters = this.characters.filter(v => v !== character)\r\n      this.field!.removeCharacter(character)\r\n    },\r\n    generateCharacter(type: number) {\r\n      let textureOffset: PIXI.Point | null = null\r\n      let [width, height, directionNum] = [0, 0, 0]\r\n      switch(type) {\r\n        case 0:\r\n        case 1:\r\n          width = 32\r\n          height = 64\r\n          directionNum = 8\r\n          break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n          width = 32\r\n          height = 32\r\n          directionNum = 1\r\n          break;\r\n      }\r\n      switch(type) {\r\n        case 0:\r\n          textureOffset = new PIXI.Point(256, 0)\r\n          break;\r\n        case 1:\r\n          textureOffset = new PIXI.Point(256 + 192, 0)\r\n          break;\r\n        case 2:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 0)\r\n          break;\r\n        case 3:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 32)\r\n          break;\r\n        case 4:\r\n          textureOffset = new PIXI.Point(256 + 192 * 2, 64)\r\n          break;\r\n      }\r\n\r\n      const character = new Character(new TextureInfo(this.renderTexture!, textureOffset!, width, height, directionNum))\r\n      character.routine = (type === 0) ? new PlayerRoutine(this.nowPressedKeyCodeSet) : new UroUroRoutine()\r\n      character.currentDirection = 4\r\n      for(;;) {\r\n        character.x = 32 + 16 * Math.floor(Math.random() * (this.field!.horizontalGridNum - 4))\r\n        character.y = 32 + 16 * Math.floor(Math.random() * (this.field!.verticalGridNum - 4))\r\n        this.field!.addCharacter(character, false)\r\n        const [hit, x, y] = this.field!.hitWall(character, 0, 0)\r\n        if (!hit) {\r\n          break;\r\n        } else {\r\n          this.field!.removeCharacter(character)\r\n          console.log(hit)\r\n        }\r\n      }\r\n      this.characters.push(character)\r\n      ;(character as any).type = type\r\n    },\r\n    toggleCharacter() {\r\n        let index = 0\r\n        this.characters.forEach((v, i) => {\r\n          if (v === this.field!.targetCharacter) {\r\n            index = i\r\n          }\r\n        })\r\n        const nextIndex = (index + 1) % this.characters.length\r\n        const oldCharacter = this.characters[index]\r\n        const newCharacter = this.characters[nextIndex]\r\n        oldCharacter.routine = new UroUroRoutine()\r\n        newCharacter.routine = new PlayerRoutine(this.nowPressedKeyCodeSet)\r\n        this.field!.setTargetCharacter(newCharacter)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {\r\n  },\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=1b334ec1&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./View.vue?vue&type=style&index=0&id=1b334ec1&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b334ec1\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}