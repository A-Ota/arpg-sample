{"version":3,"sources":["webpack:///./src/stages/007/View.vue?bef1","webpack:///./src/stages/007/Character.ts","webpack:///./src/stages/007/Field.ts","webpack:///./src/stages/007/View.vue?8b69","webpack:///./src/stages/007/View.vue?6114","webpack:///./src/stages/007/View.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","ref","_v","on","onClickToggleDebugMode","_s","isDebugMode","staticRenderFns","moveX","moveY","nextDirection","texture","textureOffset","routine","x","y","hitCircle","animationFrame","_currentDirection","preUpdateInfo","animationStep","bodySprite","SortableSprite","baseTexture","character","anchor","set","shadowTexture","shadowSprite","from","alpha","debugCircle","lineStyle","drawCircle","value","syncTexture","offsetX","offsetY","currentDirection","frame","preUpdate","zOrder","position","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","calcMoveXY","direction","speed","slantSpeed","pressedKeyCodeSet","has","isMoving","frameCountToWait","frameCountToMove","horizontalGridNum","verticalGridNum","targetCharacter","characters","sortableChildren","bgLayerContainer","uvs","layerContainer","SortableParticleContainer","vertices","tint","debugLayerContainer","visible","addChild","fpsCounter","style","fontSize","fill","fieldTexture","clone","fieldSprite","sakuLeftTexture","sakuRightTexture","sakuLeftSprite","sakuRightSprite","sakuTopTexture","sakuBottomTexture","sakuTopSprite","sakuBottomSprite","sakueLeftTopTexture","sakueLeftTopSprite","sakueRightTopTexture","sakueRightTopSprite","sakueLeftBottomTexture","sakueLeftBottomSprite","sakueRightBottomTexture","sakueRightBottomSprite","treeTexture","treeSprite","parent","isTarget","push","addChildZ","forEach","chara","canMoveCharacter","update","rightLimitX","leftLimitX","bottomLimitY","topLimitY","Math","floor","min","max","sortChildren","targetCircle","every","x1","y1","x2","y2","sqrt","pow","radius","flag","extend","data","pixiApp","field","Set","mounted","RESOLUTION","window","devicePixelRatio","SCALE_MODE","NEAREST","onkeydown","onKeyDown","onkeyup","onKeyUp","size","width","height","container","$refs","appendChild","view","bg","WHITE","stage","clearTextureCache","shared","reset","add","load","allTexture","resources","chara1","addCharacter","chara2","ticker","methods","event","keyCode","delta","setDebugMode","beforeDestroy","console","log","destroy","components","computed","props","component"],"mappings":"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","file":"js/chunk-2d21ddda.b5fbeb4a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{ref:\"pixi_area\",staticStyle:{\"position\":\"absolute\",\"width\":\"320px\",\"height\":\"240px\"}},[_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"8px\",\"top\":\"8px\",\"background-color\":\"#0000ff66\",\"color\":\"#fff\"}},[_vm._v(\"矢印キーで移動\")]),_c('b-button',{staticStyle:{\"position\":\"absolute\",\"bottom\":\"8px\",\"right\":\"8px\"},on:{\"click\":_vm.onClickToggleDebugMode}},[_vm._v(_vm._s(_vm.isDebugMode ? 'デバッグ非表示' : 'デバッグ表示'))])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as PIXI from \"pixi.js\"\r\n\r\nimport { SortableSprite } from '@/stages/005/SortableSprite'\r\n\r\n// 次フレームで行動したい内容\r\nclass PreUpdateInfo {\r\n  constructor(\r\n    public moveX: number,\r\n    public moveY: number,\r\n    public nextDirection: number\r\n    ) {}\r\n}\r\n\r\n// キャラクター\r\nexport class Character {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public hitCircle: PIXI.Circle = new PIXI.Circle(0, 0, 12)\r\n  private animationFrame = 0\r\n  private _currentDirection = 2\r\n  public preUpdateInfo: PreUpdateInfo | null = null\r\n  public bodySprite!: SortableSprite\r\n  public shadowSprite!: PIXI.Sprite\r\n  public debugCircle!: PIXI.Graphics\r\n  set currentDirection(value: number) {\r\n    this._currentDirection = value\r\n    this.syncTexture()\r\n  }\r\n  get currentDirection() {\r\n    return this._currentDirection\r\n  }\r\n  private animationStep = 0\r\n  constructor(texture: PIXI.Texture, private textureOffset: PIXI.Point, private routine: BaseRoutine) {\r\n    // 体\r\n    this.bodySprite = new SortableSprite()\r\n    this.bodySprite.texture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(textureOffset.x, textureOffset.y, 32, 64))\r\n    routine.character = this\r\n    this.bodySprite.anchor.set(0.5, 1)\r\n\r\n    // 影\r\n    const shadowTexture = new PIXI.Texture(texture.baseTexture, new PIXI.Rectangle(0, 224, 32, 32))\r\n    this.shadowSprite = PIXI.Sprite.from(shadowTexture)\r\n    this.shadowSprite.alpha = 0.5\r\n    this.shadowSprite.anchor.set(0.5, 0.5)\r\n\r\n    // 当たり判定\r\n    this.debugCircle = new PIXI.Graphics()\r\n    this.debugCircle.lineStyle(2, 0xFF5555, 1)\r\n    this.debugCircle.drawCircle(0, 0, 11)\r\n  }\r\n  private syncTexture() {\r\n    let offsetX = 0\r\n    let offsetY = 0\r\n    switch(this.currentDirection) {\r\n      case 1:\r\n        offsetX = 96\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        offsetX = 96\r\n        offsetY = 64\r\n        break;\r\n      case 4:\r\n        offsetY = 64\r\n        break;\r\n      case 6:\r\n        offsetY = 128\r\n        break;\r\n      case 7:\r\n        offsetX = 96\r\n        offsetY = 128\r\n        break;\r\n      case 8:\r\n        offsetY = 192\r\n        break;\r\n      case 9:\r\n        offsetX = 96\r\n        offsetY = 192\r\n        break;\r\n    }\r\n\r\n    offsetX += (this.animationStep === 3 ? 1 : this.animationStep) * 32\r\n    const frame = new PIXI.Rectangle(\r\n      this.textureOffset.x + offsetX,\r\n      this.textureOffset.y + offsetY,\r\n      32,\r\n      64\r\n    )\r\n    this.bodySprite.texture.frame = frame\r\n  }\r\n  public preUpdate() {\r\n    this.routine.preUpdate()\r\n  }\r\n  public update() {\r\n    ;[this.bodySprite.x, this.bodySprite.y] = [this.x, this.y + 8]\r\n    ;[this.shadowSprite.x, this.shadowSprite.y] = [this.x, this.y]\r\n    ;[this.hitCircle.x, this.hitCircle.y] = [this.x, this.y]\r\n    ;[this.debugCircle.x, this.debugCircle.y] = [this.x, this.y]\r\n    this.bodySprite.zOrder = this.bodySprite.position.y\r\n    ++this.animationFrame\r\n    if (this.animationFrame > 30) {\r\n      this.animationFrame = 0\r\n      this.animationStep = (this.animationStep + 1) % 4\r\n      this.syncTexture()\r\n    }\r\n  }\r\n}\r\n\r\n// ルーチン\r\nabstract class BaseRoutine {\r\n  public character!: Character\r\n  abstract preUpdate(): void\r\n}\r\n\r\nconst KEY_CODE_LEFT = 37\r\nconst KEY_CODE_UP = 38\r\nconst KEY_CODE_RIGHT = 39\r\nconst KEY_CODE_DOWN = 40\r\n\r\n// 方向とスピードからx,yの移動速度算出\r\nconst calcMoveXY = function(direction: number, speed: number): [number, number] {\r\n  const slantSpeed = speed * 0.7\r\n  switch (direction) {\r\n    case 1:\r\n      return [-slantSpeed, slantSpeed]\r\n    case 2:\r\n      return [0, speed]\r\n    case 3:\r\n      return [slantSpeed, slantSpeed]\r\n    case 4:\r\n      return [-speed, 0]\r\n    case 6:\r\n      return [speed, 0]\r\n    case 7:\r\n      return [-slantSpeed, -slantSpeed]\r\n    case 8:\r\n      return [0, -speed]\r\n    case 9:\r\n      return [slantSpeed, -slantSpeed]\r\n  }\r\n  return [0, 0]\r\n}\r\n\r\n// プレイヤー操作用ルーチン\r\nexport class PlayerRoutine extends BaseRoutine {\r\n  constructor(private pressedKeyCodeSet: Set<number>) {\r\n    super()\r\n  }\r\n\r\n  public preUpdate() {\r\n    let direction: number | null = null \r\n    // 向き取得\r\n    if (this.pressedKeyCodeSet.has(KEY_CODE_LEFT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 1\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 7\r\n      } else {\r\n        direction = 4\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_RIGHT)) {\r\n      if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n        direction = 3\r\n      } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n        direction = 9\r\n      } else {\r\n        direction = 6\r\n      }\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_UP)) {\r\n      direction = 8\r\n    } else if (this.pressedKeyCodeSet.has(KEY_CODE_DOWN)) {\r\n      direction = 2\r\n    }\r\n    // 向かせたり歩かせたり\r\n    if (direction != null) {\r\n      const [moveX, moveY] = calcMoveXY(direction, 1)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, direction)\r\n    }\r\n  }\r\n}\r\n\r\n// うろうろルーチン\r\nexport class UroUroRoutine extends BaseRoutine {\r\n  constructor(\r\n    private isMoving = false,\r\n    private frameCountToWait: number = 0,\r\n    private frameCountToMove: number = 60) {\r\n    super()\r\n  }\r\n  preUpdate() {\r\n    return\r\n    // 移動中\r\n    if (this.isMoving) {\r\n      const [moveX, moveY] = calcMoveXY(this.character.currentDirection, 0.6)\r\n      this.character.preUpdateInfo = new PreUpdateInfo(moveX, moveY, this.character.currentDirection)\r\n      --this.frameCountToWait\r\n      if (this.frameCountToWait <= 0) {\r\n        this.frameCountToWait = 0\r\n        this.frameCountToMove = 60 + 30 * Math.floor(Math.random() * 3)\r\n        this.isMoving = false\r\n      }\r\n    }\r\n    // 待機中\r\n    else {\r\n      --this.frameCountToMove\r\n      if (this.frameCountToMove <= 0) {\r\n        this.frameCountToMove = 0\r\n        this.frameCountToWait = 60\r\n        const direction = [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)]\r\n        this.character.preUpdateInfo = new PreUpdateInfo(0, 0, direction)\r\n        this.isMoving = true\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Character } from '@/stages/007/Character'\r\nimport { SortableParticleContainer } from '@/stages/005/SortableParticleContainer'\r\nimport * as PIXI from \"pixi.js\"\r\nimport PixiFps from \"pixi-fps\";\r\n\r\nexport class Field extends PIXI.Container {\r\n  private bgLayerContainer!: PIXI.ParticleContainer\r\n  private layerContainer!: SortableParticleContainer\r\n  private debugLayerContainer!: PIXI.Container\r\n  private fpsCounter!: PixiFps \r\n  private horizontalGridNum = 30\r\n  private verticalGridNum = 30\r\n  private targetCharacter: Character | null = null\r\n  private characters: Array<Character> = []\r\n  constructor(private texture: PIXI.Texture) {\r\n    super()\r\n    this.sortableChildren = true\r\n\r\n    // XXX:uvsをtrueにするとtextureのframeの変更が即時反映される\r\n    this.bgLayerContainer = new PIXI.ParticleContainer(20000, { uvs: false })\r\n    this.layerContainer = new SortableParticleContainer(20000, { uvs: true, vertices: true, tint: true })\r\n    this.debugLayerContainer = new PIXI.Container()\r\n    this.debugLayerContainer.visible = false\r\n    this.addChild(this.bgLayerContainer)\r\n    this.addChild(this.layerContainer)\r\n    this.addChild(this.debugLayerContainer)\r\n    // FPSカウンタ\r\n    this.fpsCounter = new PixiFps()\r\n    this.fpsCounter.position.set(4, 220)\r\n    this.fpsCounter.style = {\r\n      fontSize: 16,\r\n      fill: '#FFF'\r\n    } as PIXI.TextStyle\r\n    this.fpsCounter.visible = false\r\n\r\n    const fieldTexture = texture.clone()\r\n    fieldTexture.frame = new PIXI.Rectangle(16, 0, 16, 16)\r\n    // 地面\r\n    for (let y = 0; y < this.verticalGridNum; ++y) {\r\n      for (let x = 0; x < this.horizontalGridNum; ++x) {\r\n        const fieldSprite = PIXI.Sprite.from(fieldTexture)\r\n        fieldSprite.position = new PIXI.Point(x * 16, y * 16)\r\n        this.bgLayerContainer.addChild(fieldSprite)\r\n      }\r\n    }\r\n    // 柵\r\n    {\r\n      const sakuLeftTexture = texture.clone()\r\n      sakuLeftTexture.frame = new PIXI.Rectangle(96, 64, 16, 16)\r\n      const sakuRightTexture = texture.clone()\r\n      sakuRightTexture.frame = new PIXI.Rectangle(112, 64, 16, 16)\r\n      for (let y = 1; y < this.verticalGridNum - 1; ++y) {\r\n        const sakuLeftSprite = PIXI.Sprite.from(sakuLeftTexture)\r\n        sakuLeftSprite.position = new PIXI.Point(0, y * 16)\r\n        this.bgLayerContainer.addChild(sakuLeftSprite)\r\n        const sakuRightSprite = PIXI.Sprite.from(sakuRightTexture)\r\n        sakuRightSprite.position = new PIXI.Point(this.horizontalGridNum * 16 - 16, y * 16)\r\n        this.bgLayerContainer.addChild(sakuRightSprite)\r\n      }\r\n      const sakuTopTexture = texture.clone()\r\n      sakuTopTexture.frame = new PIXI.Rectangle(96, 96, 16, 16)\r\n      const sakuBottomTexture = texture.clone()\r\n      sakuBottomTexture.frame = new PIXI.Rectangle(112, 96, 16, 16)\r\n      for (let x = 1; x < this.horizontalGridNum - 1; ++x) {\r\n        const sakuTopSprite = PIXI.Sprite.from(sakuTopTexture)\r\n        sakuTopSprite.position = new PIXI.Point(x * 16, 0)\r\n        this.bgLayerContainer.addChild(sakuTopSprite)\r\n        const sakuBottomSprite = PIXI.Sprite.from(sakuBottomTexture)\r\n        sakuBottomSprite.position = new PIXI.Point(x * 16, this.verticalGridNum * 16 - 16)\r\n        this.bgLayerContainer.addChild(sakuBottomSprite)\r\n      }\r\n      const sakueLeftTopTexture = texture.clone()\r\n      sakueLeftTopTexture.frame = new PIXI.Rectangle(96, 48, 16, 16)\r\n      const sakueLeftTopSprite = PIXI.Sprite.from(sakueLeftTopTexture)\r\n      sakueLeftTopSprite.position = new PIXI.Point(0, 0)\r\n      this.bgLayerContainer.addChild(sakueLeftTopSprite)\r\n      const sakueRightTopTexture = texture.clone()\r\n      sakueRightTopTexture.frame = new PIXI.Rectangle(112, 48, 16, 16)\r\n      const sakueRightTopSprite = PIXI.Sprite.from(sakueRightTopTexture)\r\n      sakueRightTopSprite.position = new PIXI.Point(this.horizontalGridNum * 16 - 16, 0)\r\n      this.bgLayerContainer.addChild(sakueRightTopSprite)\r\n      const sakueLeftBottomTexture = texture.clone()\r\n      sakueLeftBottomTexture.frame = new PIXI.Rectangle(96, 80, 16, 16)\r\n      const sakueLeftBottomSprite = PIXI.Sprite.from(sakueLeftBottomTexture)\r\n      sakueLeftBottomSprite.position = new PIXI.Point(0, this.verticalGridNum * 16 - 16)\r\n      this.bgLayerContainer.addChild(sakueLeftBottomSprite)\r\n      const sakueRightBottomTexture = texture.clone()\r\n      sakueRightBottomTexture.frame = new PIXI.Rectangle(112, 80, 16, 16)\r\n      const sakueRightBottomSprite = PIXI.Sprite.from(sakueRightBottomTexture)\r\n      sakueRightBottomSprite.position = new PIXI.Point(this.horizontalGridNum * 16 - 16, this.verticalGridNum * 16 - 16)\r\n      this.bgLayerContainer.addChild(sakueRightBottomSprite)\r\n    }\r\n    // 木(下)\r\n    {\r\n      const treeTexture = texture.clone()\r\n      treeTexture.frame = new PIXI.Rectangle(32, 64, 64, 16)\r\n      const treeSprite = PIXI.Sprite.from(treeTexture)\r\n      treeSprite.position = new PIXI.Point((this.horizontalGridNum * 16) / 2 - 32, (this.verticalGridNum * 18 / 2))\r\n      this.bgLayerContainer.addChild(treeSprite)\r\n    }\r\n    // 木(上)\r\n    {\r\n      const treeTexture = texture.clone()\r\n      treeTexture.frame = new PIXI.Rectangle(32, 0, 64, 64)\r\n      const treeSprite = new PIXI.Sprite(treeTexture)\r\n      treeSprite.position = new PIXI.Point((this.horizontalGridNum * 16) / 2 - 32, (this.verticalGridNum * 18 / 2) - 64)\r\n      ;(treeSprite as any).zOrder = treeSprite.position.y + 68\r\n      this.layerContainer.addChild(treeSprite)\r\n    }\r\n    // 木(下)\r\n    {\r\n      const treeTexture = texture.clone()\r\n      treeTexture.frame = new PIXI.Rectangle(32, 64, 64, 16)\r\n      const treeSprite = PIXI.Sprite.from(treeTexture)\r\n      treeSprite.position = new PIXI.Point((this.horizontalGridNum * 14) / 2 - 32, (this.verticalGridNum * 15 / 2))\r\n      this.bgLayerContainer.addChild(treeSprite)\r\n    }\r\n    // 木(上)\r\n    {\r\n      const treeTexture = texture.clone()\r\n      treeTexture.frame = new PIXI.Rectangle(32, 0, 64, 64)\r\n      const treeSprite = new PIXI.Sprite(treeTexture)\r\n      treeSprite.position = new PIXI.Point((this.horizontalGridNum * 14) / 2 - 32, (this.verticalGridNum * 15 / 2) - 64)\r\n      ;(treeSprite as any).zOrder = treeSprite.position.y + 68\r\n      this.layerContainer.addChild(treeSprite)\r\n    }\r\n    // みかん\r\n    /*\r\n    {\r\n      const mikanTexture = texture.clone()\r\n      mikanTexture.frame = new PIXI.Rectangle(128, 0, 32, 32)\r\n      const mikanSprite = new PIXI.Sprite(mikanTexture)\r\n      mikanSprite.anchor.set(0.5, 0.5)\r\n      // mikanSprite.position = new PIXI.Point((this.horizontalGridNum * 10) / 2 - 32, (this.verticalGridNum * 10 / 2) - 64)\r\n      mikanSprite.position.set(150, 60)\r\n      ;(mikanSprite as any).zOrder = mikanSprite.position.y + 14\r\n      this.layerContainer.addChild(mikanSprite)\r\n    }\r\n    */\r\n    this.on('added', () => {\r\n      this.parent.addChild(this.fpsCounter)\r\n    })\r\n  }\r\n  public addCharacter(character: Character, isTarget: boolean = false) {\r\n    this.characters.push(character)\r\n    if (isTarget) {\r\n      this.targetCharacter = character\r\n    }\r\n    this.layerContainer.addChildZ(character.bodySprite, 1)\r\n    this.layerContainer.addChildZ(character.shadowSprite, 1)\r\n    this.debugLayerContainer.addChild(character.debugCircle)\r\n  }\r\n  public update() {\r\n    // preUpdate\r\n    this.characters.forEach(chara => chara.preUpdate())\r\n    // 衝突判定など、ゲームの世界の都合でpreUpdateの内容に干渉しつつ、確定させる。\r\n    this.characters.forEach(chara => {\r\n      if (chara.preUpdateInfo != null) {\r\n        const [moveX, moveY] = [chara.preUpdateInfo.moveX, chara.preUpdateInfo.moveY]\r\n        if ((moveX != 0 || moveY != 0) && this.canMoveCharacter(chara, moveX, moveY)) {\r\n          chara.x += moveX\r\n          chara.y += moveY\r\n        }\r\n        chara.currentDirection = chara.preUpdateInfo.nextDirection\r\n        chara.preUpdateInfo = null\r\n        chara.update()\r\n      } else {\r\n        chara.update()\r\n      }\r\n    })\r\n\r\n    const rightLimitX = 320 - 96\r\n    const leftLimitX = 96\r\n    const bottomLimitY = 240 - 96 \r\n    const topLimitY = 96\r\n    // 視点移動\r\n    if (this.targetCharacter) {\r\n      const offsetX = this.targetCharacter.x + this.x\r\n      if (offsetX > rightLimitX) {\r\n        this.x = -(this.targetCharacter.x - rightLimitX)\r\n      }\r\n      else if (offsetX < leftLimitX) {\r\n        this.x = -(this.targetCharacter.x - leftLimitX)\r\n      }\r\n      const offsetY = this.targetCharacter.y + this.y\r\n      if (offsetY > bottomLimitY) {\r\n        this.y = -(this.targetCharacter.y - bottomLimitY)\r\n      }\r\n      else if (offsetY < topLimitY) {\r\n        this.y = -(this.targetCharacter.y - topLimitY)\r\n      }\r\n    }\r\n    this.x = Math.floor(Math.min(0, Math.max(-(16 * this.horizontalGridNum - 320), this.x)))\r\n    this.y = Math.floor(Math.min(0, Math.max(-(16 * this.verticalGridNum - 240), this.y)))\r\n    // layerContainerについては自前でソートを行う\r\n    this.layerContainer.sortChildren()\r\n  }\r\n  private canMoveCharacter(targetCharacter: Character, offsetX: number, offsetY: number) {\r\n    const targetCircle = targetCharacter.hitCircle.clone()\r\n    targetCircle.x += offsetX\r\n    targetCircle.y += offsetY\r\n    // まずは他キャラとの衝突判定\r\n    return this.characters.every(character => {\r\n      if (targetCharacter === character) {\r\n        return true\r\n      }\r\n      const [x1, y1, x2, y2] = [targetCircle.x, targetCircle.y, character.hitCircle.x, character.hitCircle.y]\r\n      return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)) > targetCircle.radius + character.hitCircle.radius\r\n    })\r\n  }\r\n  public setDebugMode(flag: boolean) {\r\n    this.debugLayerContainer.visible = flag\r\n    this.fpsCounter.visible = flag\r\n  }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from \"vue\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport { Character, PlayerRoutine, UroUroRoutine } from '@/stages/007/Character'\r\nimport { Field } from '@/stages/007/Field'\r\n\r\nexport default Vue.extend({\r\n  data(): {\r\n    pixiApp: PIXI.Application | null;\r\n    field: Field | null;\r\n    pressedKeyCodeSet: Set<number>;\r\n    isDebugMode: boolean;\r\n    } {\r\n    return {\r\n      pixiApp: null,\r\n      field: null,\r\n      pressedKeyCodeSet: new Set(),\r\n      isDebugMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    PIXI.settings.RESOLUTION = window.devicePixelRatio\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\r\n\r\n    window.onkeydown = this.onKeyDown\r\n    window.onkeyup = this.onKeyUp\r\n\r\n    const size = { width: 320, height: 240 }\r\n    this.pixiApp = new PIXI.Application(size)\r\n\r\n    const container = this.$refs[\"pixi_area\"] as any\r\n    container.appendChild(this.pixiApp.view)\r\n\r\n    // 背景色\r\n    const bg = new PIXI.Sprite(PIXI.Texture.WHITE)\r\n    bg.width = 320\r\n    bg.height = 240\r\n    bg.tint = 0xcccccc\r\n    this.pixiApp.stage.addChild(bg)\r\n\r\n    PIXI.utils.clearTextureCache()\r\n    PIXI.Loader.shared\r\n      .reset()\r\n      .add(\"/arpg-sample/images/stages/007/all.png\")\r\n      .load(() => {\r\n        // フィールド\r\n        const allTexture = PIXI.Loader.shared.resources[\"/arpg-sample/images/stages/007/all.png\"].texture\r\n        this.field = new Field(allTexture)\r\n        this.pixiApp!.stage.addChild(this.field)\r\n        // this.pixiApp!.stage.addChild(shadowSprite)\r\n\r\n        // プレイヤー\r\n        const chara1 = new Character(allTexture, new PIXI.Point(0, 256), new PlayerRoutine(this.pressedKeyCodeSet))\r\n        chara1.x = 200\r\n        chara1.y = 140\r\n        this.field.addCharacter(chara1, true)\r\n        // NPC\r\n        const chara2 = new Character(allTexture, new PIXI.Point(192, 256), new UroUroRoutine())\r\n        chara2.x = 100\r\n        chara2.y = 120\r\n        this.field.addCharacter(chara2)\r\n      })\r\n\r\n    // メインループ\r\n    this.pixiApp.ticker.add(this.update)\r\n  },\r\n  methods: {\r\n    onKeyDown(event: KeyboardEvent) {\r\n      this.pressedKeyCodeSet.add(event.keyCode)\r\n    },\r\n    onKeyUp(event: any) {\r\n      this.pressedKeyCodeSet.delete(event.keyCode)\r\n    },\r\n    update(delta: number) {\r\n      // console.log(delta)\r\n      if (this.field != null) {\r\n        this.field.update()\r\n      }\r\n    },\r\n    onClickToggleDebugMode() {\r\n      this.isDebugMode = !this.isDebugMode\r\n      this.field!.setDebugMode(this.isDebugMode)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // this.pixiApp!.ticker.remove(this.update)\r\n    console.log('bdd')\r\n    this.pixiApp!.destroy(true)\r\n  },\r\n  components: {},\r\n  computed: {},\r\n  props: []\r\n})\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=8329b594&scoped=true&\"\nimport script from \"./View.vue?vue&type=script&lang=ts&\"\nexport * from \"./View.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8329b594\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}